{"version":3,"sources":["vendor/ember-cli/app-prefix.js","hyperchannel/app.js","hyperchannel/components/-lf-get-outlet-state.js","hyperchannel/components/app-container/component.js","hyperchannel/components/app-container/template.js","hyperchannel/components/channel-container/component.js","hyperchannel/components/channel-container/template.js","hyperchannel/components/channel-input-field/component.js","hyperchannel/components/channel-nav/component.js","hyperchannel/components/channel-nav/template.js","hyperchannel/components/date-headline/component.js","hyperchannel/components/date-headline/template.js","hyperchannel/components/from-elsewhere.js","hyperchannel/components/illiquid-model.js","hyperchannel/components/link-to-username/component.js","hyperchannel/components/link-to-username/template.js","hyperchannel/components/liquid-bind.js","hyperchannel/components/liquid-child.js","hyperchannel/components/liquid-container.js","hyperchannel/components/liquid-if.js","hyperchannel/components/liquid-measured.js","hyperchannel/components/liquid-outlet.js","hyperchannel/components/liquid-spacer.js","hyperchannel/components/liquid-sync.js","hyperchannel/components/liquid-unless.js","hyperchannel/components/liquid-versions.js","hyperchannel/components/message-chat-me/component.js","hyperchannel/components/message-chat-me/template.js","hyperchannel/components/message-chat/component.js","hyperchannel/components/message-chat/template.js","hyperchannel/components/modal-target/component.js","hyperchannel/components/modal-target/template.js","hyperchannel/components/multiple-from-elsewhere.js","hyperchannel/components/notification-topic-change/component.js","hyperchannel/components/notification-topic-change/template.js","hyperchannel/components/space-setting-modal/component.js","hyperchannel/components/space-setting-modal/template.js","hyperchannel/components/to-elsewhere.js","hyperchannel/controllers/application.js","hyperchannel/controllers/index.js","hyperchannel/controllers/settings.js","hyperchannel/controllers/space.js","hyperchannel/controllers/space/base_channel.js","hyperchannel/controllers/space/channel.js","hyperchannel/controllers/space/user_channel.js","hyperchannel/ember-gestures/recognizers/pan.js","hyperchannel/ember-gestures/recognizers/pinch.js","hyperchannel/ember-gestures/recognizers/press.js","hyperchannel/ember-gestures/recognizers/rotate.js","hyperchannel/ember-gestures/recognizers/swipe.js","hyperchannel/ember-gestures/recognizers/swipeleft.js","hyperchannel/ember-gestures/recognizers/swiperight.js","hyperchannel/ember-gestures/recognizers/tap.js","hyperchannel/ember-gestures/recognizers/vertical-pan.js","hyperchannel/ember-gestures/recognizers/vertical-swipe.js","hyperchannel/event_dispatcher.js","hyperchannel/helpers/app-version.js","hyperchannel/helpers/is-after.js","hyperchannel/helpers/is-before.js","hyperchannel/helpers/is-between.js","hyperchannel/helpers/is-same-or-after.js","hyperchannel/helpers/is-same-or-before.js","hyperchannel/helpers/is-same.js","hyperchannel/helpers/lf-lock-model.js","hyperchannel/helpers/lf-or.js","hyperchannel/helpers/moment-add.js","hyperchannel/helpers/moment-calendar.js","hyperchannel/helpers/moment-duration.js","hyperchannel/helpers/moment-format.js","hyperchannel/helpers/moment-from-now.js","hyperchannel/helpers/moment-from.js","hyperchannel/helpers/moment-subtract.js","hyperchannel/helpers/moment-to-date.js","hyperchannel/helpers/moment-to-now.js","hyperchannel/helpers/moment-to.js","hyperchannel/helpers/moment-unix.js","hyperchannel/helpers/moment.js","hyperchannel/helpers/now.js","hyperchannel/helpers/pluralize.js","hyperchannel/helpers/route-action.js","hyperchannel/helpers/singularize.js","hyperchannel/helpers/unix.js","hyperchannel/initializers/app-version.js","hyperchannel/initializers/container-debug-adapter.js","hyperchannel/initializers/data-adapter.js","hyperchannel/initializers/ember-data.js","hyperchannel/initializers/ember-hammertime.js","hyperchannel/initializers/export-application-global.js","hyperchannel/initializers/hammer.js","hyperchannel/initializers/injectStore.js","hyperchannel/initializers/liquid-fire.js","hyperchannel/initializers/local-storage-adapter.js","hyperchannel/initializers/sockethub.js","hyperchannel/initializers/store.js","hyperchannel/initializers/transforms.js","hyperchannel/instance-initializers/ember-data.js","hyperchannel/instance-initializers/ember-gestures.js","hyperchannel/instance-initializers/remotestorage.js","hyperchannel/models/base_channel.js","hyperchannel/models/channel.js","hyperchannel/models/message.js","hyperchannel/models/space.js","hyperchannel/models/user_channel.js","hyperchannel/resolver.js","hyperchannel/router.js","hyperchannel/routes/application.js","hyperchannel/routes/index.js","hyperchannel/routes/settings.js","hyperchannel/routes/space.js","hyperchannel/routes/space/base_channel.js","hyperchannel/routes/space/channel.js","hyperchannel/routes/space/user_channel.js","hyperchannel/services/-gestures.js","hyperchannel/services/ajax.js","hyperchannel/services/coms.js","hyperchannel/services/ember-elsewhere.js","hyperchannel/services/liquid-fire-transitions.js","hyperchannel/services/logger.js","hyperchannel/services/moment.js","hyperchannel/services/remotestorage.js","hyperchannel/services/sockethub-irc.js","hyperchannel/services/sockethub-xmpp.js","hyperchannel/storages/user-settings.js","hyperchannel/templates/application.js","hyperchannel/templates/index.js","hyperchannel/templates/settings.js","hyperchannel/templates/space/channel.js","hyperchannel/templates/space/user_channel.js","hyperchannel/transitions/cross-fade.js","hyperchannel/transitions/default.js","hyperchannel/transitions/explode.js","hyperchannel/transitions/fade.js","hyperchannel/transitions/flex-grow.js","hyperchannel/transitions/fly-to.js","hyperchannel/transitions/move-over.js","hyperchannel/transitions/scale.js","hyperchannel/transitions/scroll-then.js","hyperchannel/transitions/to-down.js","hyperchannel/transitions/to-left.js","hyperchannel/transitions/to-right.js","hyperchannel/transitions/to-up.js","hyperchannel/transitions/wait.js","hyperchannel/utils/channel-message-from-sockethub-object.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"names":["define","exports","_ember","_resolver","_emberLoadInitializers","_environment","Object","defineProperty","value","App","default","MODEL_FACTORY_INJECTIONS","Application","extend","modulePrefix","podModulePrefix","Resolver","_lfGetOutletState","enumerable","get","_recognizers","isElementOf","id","element","$","parents","length","Component","tagName","classNames","classNameBindings","recognizers","swipeLeft","this","set","swipeRight","tap","e","target","Ember","HTMLBars","template","block","meta","moduleName","scrollToBottom","animate","scrollTop","height","observer","scheduleOnce","run","service","inject","elementId","newMessage","channel","scrollingDisabled","coms","messagesUpdated","didInsertElement","_super","apply","arguments","actions","processMessageOrCommand","substr","onCommand","onMessage","menu","which","what","sendAction","loadPreviousMessages","_this","loadLastMessages","catch","finally","TextField","keyUp","ev","altKey","key","_insertAtCaret","myValue","el","document","selection","focus","createRange","text","selectionStart","startPos","endPos","selectionEnd","substring","_moment","updateInterval","headline","computed","date","scheduleUpdate","later","notifyPropertyChange","isSame","subtract","toLocaleDateString","_fromElsewhere","_illiquidModel","isPresent","username","roles","@","%","+","role","usernameWithoutPrefix","regex","RegExp","keys","join","replace","_liquidBind","_liquidChild","_liquidContainer","_liquidIf","_liquidMeasured","measure","_liquidOutlet","_liquidSpacer","_liquidSync","_liquidUnless","_liquidVersions","_component","htmlSafe","String","message","datetime","format","dateTitle","formattedContent","content","out","match","linkifyStr","linkAttributes","rel","validate","url","test","modalAnimation","lookup","call","pick","use","maxOpacity","outsideClick","modal","onOutsideClick","_multipleFromElsewhere","_space","settings","space","init","create","serialize","save","onSave","cancel","onCancel","_toElsewhere","Controller","alias","spaces","showGlobalMenu","showChannelMenu","application","controller","_Ember$inject","notEmpty","storage","newSpace","selectedSpacePreset","showSpaceSettingModal","addSpaceFromPreset","preset","saveSpace","then","connectAndAddSpace","_message","Logger","createMessage","type","Date","nickname","sendMessage","transferMessage","pushObject","executeCommand","availableCommands","commandText","commandSplitted","split","command","includes","toLowerCase","send","slice","warn","joinCommand","args","createChannel","transitionToRoute","partCommand","channelName","removeChannel","lastChannel","leaveCommand","helpCommand","meCommand","transferMeMessage","msgCommand","shift","createUserChannel","topicCommand","topic","changeTopic","_base_channel","_pan","_pinch","_press","_rotate","_swipe","include","exclude","options","threshold","direction","Hammer","DIRECTION_LEFT","eventName","recognizer","DIRECTION_RIGHT","_tap","_verticalPan","_verticalSwipe","_event_dispatcher","merge","assign","gestures","emberUseCapture","removeTracking","useFastPaths","useCapture","_regexp","appVersion","_","hash","undefined","hideSha","version","versionRegExp","hideVersion","shaRegExp","APP","Helper","helper","_isAfter","globalAllowEmpty","_isBefore","_isBetween","_isSameOrAfter","_isSameOrBefore","_isSame","_lfLockModel","lfLockModel","_lfOr","lfOr","_momentAdd","_momentCalendar","_momentDuration","_momentFormat","_momentFromNow","_momentFrom","_momentSubtract","_momentToDate","_momentToNow","_momentTo","_unix","unix","_now","_pluralize","_routeAction","_singularize","_initializerFactory","_config$APP","name","initialize","_containerDebugAdapter","app","register","before","_setupContainer","exportApplicationGlobal","theGlobal","window","global","self","globalName","classify","reopen","willDestroy","defaults","cssProps","userSelect","_emberInternals","_localStorageAdapter","sockethub","SockethubClient","io","sockethubURL","path","instantiate","singleton","after","_initializeStoreService","getOwner","instance","appInstance","remoteStorage","rsEvents","forEach","evt","on","debug","userList","messages","connected","sockethubChannelId","unreadMessages","unreadMentions","visible","isLogged","loggedChannel","find","slug","unreadMessagesClass","sortedMessages","sortBy","addDateHeadline","headlineDate","startOf","toDate","existingDateHeadline","toString","dateMessage","addMessage","addUser","removeUser","removeObject","searchedPreviousLogsUntilDate","formattedTopic","defaultProtocol","protocol","server","hostname","port","secure","password","nickServ","channels","previousSockethubPersonIds","channelNames","mapBy","sockethubChannelIds","loggedChannels","userNickname","updateUsername","sockethubPersonId","personID","property","channelSorting","sortedChannels","sort","serialized","dasherize","parseInt","prop","isUserChannel","_emberResolver","Router","location","locationType","rootURL","map","route","Route","isEmpty","logger","beforeModel","model","setupListeners","instantiateSpacesAndChannels","menuProp","capitalize","toggleProperty","openNewChannel","prompt","transitionTo","_emberLocalStorage","userSettings","storageFor","redirect","currentSpace","currentChannel","RSVP","rsKosmos","kosmos","getAll","res","col","push","error","spacePresets","setupController","addSpace","modelFor","removeSpace","_this2","params","findBy","focusMessageInput","innerWidth","_Ember$run","createChannelOrUserChannel","didTransition","setEach","_gestures","_ajax","_channel","_user_channel","_typeof","Symbol","iterator","obj","constructor","prototype","Service","ajax","irc","xmpp","socket","handleSockethubCompleted","bind","handleSockethubMessage","handleSockethubFailure","rs","Promise","resolve","reject","spaceData","addDefaultSpace","data","instantiateChannels","log","connectServer","getServiceForSockethubPlatform","connect","joinChannel","@id","@type","displayName","leaveChannel","leave","updateChannelUserList","getChannelById","actor","Array","isArray","object","members","addUserToChannelUserList","removeUserFromChannelUserList","channelId","getChannel","personId","actorId","updateChannelTopic","currentTopic","newTopic","Notification","requestPermission","body","platform","generateChannelId","utc","_this3","maximumDays","searchUntilDate","isBefore","loadArchiveMessages","_this4","logsUrl","publicLogsUrl","request","dataType","archive","channelMessage","timestamp","from","previous","userName","context","handleJoinCompleted","handleChannelJoin","addMessageToChannel","handlePresenceUpdate","_get","_emberElsewhere","_transitionMap","enabled","allowedTypes","activeTypes","Error","add","addObject","remove","disable","enable","defaultFormat","_npmRemotestoragejs","_npmRemotestorageModuleKosmos","rsInstance","modules","access","claim","caching","store","_channelMessageFromSockethubObject","buildActivityObject","details","baseObject","buildMessageObject","actorObject","ActivityStreams","credentials","nick","emit","observeChannel","joinMsg","getChannelForMessage","leaveMsg","topicMsg","observeMsg","targetChannelName","credentialsJob","resource","connectJob","targetChannelId","presence","status","getSpaceForMessage","_object","Storage","reopenClass","initialState","_crossFade","_default","_explode","_fade","_flexGrow","_flyTo","_moveOver","_scale","_scrollThen","_toDown","_toLeft","_toRight","_toUp","_wait","channelMessageFromSockethubObject","published","prefix","metaName","rawConfig","querySelector","getAttribute","config","JSON","parse","unescape","err","runningTests","require"],"mappings":"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","file":"hyperchannel.js","sourcesContent":["\"use strict\";\n\n\n","define('hyperchannel/app', ['exports', 'ember', 'hyperchannel/resolver', 'ember-load-initializers', 'hyperchannel/config/environment'], function (exports, _ember, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var App = void 0;\n\n  _ember.default.MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember.default.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define(\"hyperchannel/components/-lf-get-outlet-state\", [\"exports\", \"liquid-fire/components/-lf-get-outlet-state\"], function (exports, _lfGetOutletState) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _lfGetOutletState.default;\n    }\n  });\n});","define('hyperchannel/components/app-container/component', ['exports', 'ember', 'ember-gestures/mixins/recognizers'], function (exports, _ember, _recognizers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  function isElementOf(id, element) {\n    return element.id === id || _ember.default.$(element).parents('#' + id).length > 0;\n  }\n\n  exports.default = _ember.default.Component.extend(_recognizers.default, {\n\n    tagName: 'div',\n    classNames: ['app-container'],\n    classNameBindings: ['showGlobalMenu:global-menu-open', 'showChannelMenu:channel-menu-open'],\n\n    recognizers: 'swipeleft swiperight tap',\n\n    swipeLeft: function swipeLeft() {\n      this.set('showGlobalMenu', false);\n    },\n    swipeRight: function swipeRight() {\n      this.set('showGlobalMenu', true);\n    },\n    tap: function tap(e) {\n      if (this.get('showGlobalMenu') && !isElementOf('channel-header', e.target) && !isElementOf('global', e.target)) {\n        this.set('showGlobalMenu', false);\n      }\n    }\n  });\n});","define(\"hyperchannel/components/app-container/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1BH+Bt62\", \"block\": \"{\\\"statements\\\":[[18,\\\"default\\\"],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[\\\"default\\\"],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/app-container/template.hbs\" } });\n});","define('hyperchannel/components/channel-container/component', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = _ember.default.Component,\n      observer = _ember.default.observer,\n      scheduleOnce = _ember.default.run.scheduleOnce,\n      service = _ember.default.inject.service;\n\n\n  function scrollToBottom() {\n    _ember.default.$('#channel-content').animate({\n      scrollTop: _ember.default.$('#channel-content ul').height()\n    }, '500');\n  }\n\n  exports.default = Component.extend({\n\n    elementId: 'channel',\n    newMessage: '',\n    channel: null,\n    scrollingDisabled: false,\n\n    coms: service(),\n\n    messagesUpdated: observer('channel.messages.[]', function () {\n      if (!this.get('scrollingDisabled')) {\n        scheduleOnce('afterRender', scrollToBottom);\n      }\n    }),\n\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      scheduleOnce('afterRender', scrollToBottom);\n    },\n\n\n    actions: {\n      processMessageOrCommand: function processMessageOrCommand() {\n        if (this.get('newMessage').substr(0, 1) === \"/\") {\n          this.onCommand(this.get('newMessage'));\n        } else {\n          this.onMessage(this.get('newMessage'));\n        }\n      },\n      menu: function menu(which, what) {\n        this.sendAction('menu', which, what);\n      },\n      loadPreviousMessages: function loadPreviousMessages() {\n        var _this = this;\n\n        this.set('scrollingDisabled', true);\n        this.get('coms').loadLastMessages(this.get('channel.space'), this.get('channel'), this.get('channel.searchedPreviousLogsUntilDate')).catch(function () {\n          // TODO what to do here?\n        }).finally(function () {\n          _this.set('scrollingDisabled', false);\n        });\n      }\n    }\n  });\n});","define(\"hyperchannel/components/channel-container/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"efJNfYzN\", \"block\": \"{\\\"statements\\\":[[11,\\\"main\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"header\\\",[]],[15,\\\"id\\\",\\\"channel-header\\\"],[15,\\\"onClick\\\",\\\"\\\"],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"menu\\\",\\\"global\\\",\\\"toggle\\\"]],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[15,\\\"id\\\",\\\"channel-name\\\"],[13],[1,[28,[\\\"channel\\\",\\\"name\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[11,\\\"p\\\",[]],[15,\\\"id\\\",\\\"channel-title\\\"],[13],[1,[28,[\\\"channel\\\",\\\"formattedTopic\\\"]],false],[14],[0,\\\"\\\\n    \\\"],[11,\\\"nav\\\",[]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"a\\\",[]],[15,\\\"href\\\",\\\"#\\\"],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"icon-megaphone\\\"],[13],[14],[14],[11,\\\"a\\\",[]],[15,\\\"href\\\",\\\"#\\\"],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"icon-mute\\\"],[13],[14],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"section\\\",[]],[15,\\\"id\\\",\\\"channel-content\\\"],[15,\\\"class\\\",\\\"main\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"a\\\",[]],[15,\\\"class\\\",\\\"load-previous\\\"],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"loadPreviousMessages\\\"]],[13],[0,\\\"\\\\n        Load previous messages\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n    \\\"],[11,\\\"ul\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"channel\\\",\\\"sortedMessages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"li\\\",[]],[13],[0,\\\"\\\\n          \\\"],[1,[33,[\\\"component\\\"],[[28,[\\\"message\\\",\\\"type\\\"]]],[[\\\"message\\\"],[[28,[\\\"message\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"message\\\"]},{\\\"statements\\\":[[6,[\\\"if\\\"],[[28,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"li\\\",[]],[15,\\\"class\\\",\\\"no-messages\\\"],[13],[0,\\\"No recent messages to display.\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[11,\\\"li\\\",[]],[15,\\\"class\\\",\\\"no-messages\\\"],[13],[0,\\\"No Kosmos logs configured for this channel. \\\"],[11,\\\"a\\\",[]],[15,\\\"href\\\",\\\"https://wiki.kosmos.org/Setting_up_channel_logs\\\"],[15,\\\"target\\\",\\\"_blank\\\"],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[13],[0,\\\"Learn more\\\"],[14],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]}]],\\\"locals\\\":[]}],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"footer\\\",[]],[13],[0,\\\"\\\\n    \\\"],[11,\\\"section\\\",[]],[15,\\\"id\\\",\\\"new-message\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"form\\\",[]],[5,[\\\"action\\\"],[[28,[null]],\\\"processMessageOrCommand\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"channel-input-field\\\"],null,[[\\\"value\\\",\\\"placeholder\\\",\\\"name\\\",\\\"id\\\",\\\"autocomplete\\\"],[[28,[\\\"newMessage\\\"]],\\\"Type a message and hit enter\\\",\\\"chat-message\\\",\\\"message-field\\\",\\\"off\\\"]]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[11,\\\"aside\\\",[]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"header\\\",[]],[13],[0,\\\"\\\\n    \\\"],[11,\\\"nav\\\",[]],[13],[0,\\\"\\\\n      \\\"],[6,[\\\"link-to\\\"],[\\\"index\\\"],[[\\\"class\\\"],[\\\"active\\\"]],{\\\"statements\\\":[[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"icon-users\\\"],[13],[14]],\\\"locals\\\":[]},null],[11,\\\"a\\\",[]],[15,\\\"href\\\",\\\"#\\\"],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"icon-paperclip\\\"],[13],[14],[14],[6,[\\\"link-to\\\"],[\\\"settings\\\"],null,{\\\"statements\\\":[[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"icon-cog\\\"],[13],[14]],\\\"locals\\\":[]},null],[11,\\\"a\\\",[]],[15,\\\"href\\\",\\\"#\\\"],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[13],[11,\\\"i\\\",[]],[15,\\\"class\\\",\\\"icon-resize-enlarge\\\"],[13],[14],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"section\\\",[]],[15,\\\"id\\\",\\\"user-list\\\"],[15,\\\"class\\\",\\\"main\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"ul\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"channel\\\",\\\"userList\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"li\\\",[]],[13],[1,[33,[\\\"link-to-username\\\"],null,[[\\\"username\\\"],[[28,[\\\"username\\\"]]]]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"username\\\"]},null],[0,\\\"    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\" } });\n});","define('hyperchannel/components/channel-input-field/component', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.TextField.extend({\n\n    keyUp: function keyUp(ev) {\n      // console.debug('keyUp', ev);\n\n      if (ev.altKey) {\n        switch (ev.key) {\n          case 'k':\n            this._insertAtCaret('\\x03');\n            break;\n        }\n      }\n    },\n\n    _insertAtCaret: function _insertAtCaret(myValue) {\n      var el = this.$().get(0);\n\n      if (document.selection) {\n        el.focus();\n        el = document.selection.createRange();\n        el.text = myValue;\n        el.focus();\n      } else if (el.selectionStart || el.selectionStart === '0') {\n        var startPos = el.selectionStart;\n        var endPos = el.selectionEnd;\n        var scrollTop = el.scrollTop;\n        el.value = el.value.substring(0, startPos) + myValue + el.value.substring(endPos, el.value.length);\n        el.focus();\n        el.selectionStart = startPos + myValue.length;\n        el.selectionEnd = startPos + myValue.length;\n        el.scrollTop = scrollTop;\n      } else {\n        el.value += myValue;\n        el.focus();\n      }\n    }\n\n  });\n});","define('hyperchannel/components/channel-nav/component', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Component.extend({\n\n    tagName: 'ul'\n\n  });\n});","define(\"hyperchannel/components/channel-nav/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"RD5NuZqj\", \"block\": \"{\\\"statements\\\":[[6,[\\\"each\\\"],[[28,[\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[11,\\\"li\\\",[]],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h2\\\",[]],[13],[6,[\\\"link-to\\\"],[\\\"space\\\",[28,[\\\"space\\\"]]],null,{\\\"statements\\\":[[1,[28,[\\\"space\\\",\\\"name\\\"]],false]],\\\"locals\\\":[]},null],[14],[0,\\\"\\\\n    \\\"],[11,\\\"ul\\\",[]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"space\\\",\\\"sortedChannels\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[11,\\\"li\\\",[]],[16,\\\"class\\\",[34,[[33,[\\\"if\\\"],[[28,[\\\"channel\\\",\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null],\\\" \\\",[28,[\\\"channel\\\",\\\"unreadMessagesClass\\\"]]]]],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"channel\\\",\\\"isUserChannel\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[6,[\\\"link-to\\\"],[\\\"space.userChannel\\\",[28,[\\\"space\\\"]],[28,[\\\"channel\\\"]]],null,{\\\"statements\\\":[[1,[28,[\\\"channel\\\",\\\"name\\\"]],false]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[6,[\\\"link-to\\\"],[\\\"space.channel\\\",[28,[\\\"space\\\"]],[28,[\\\"channel\\\"]]],null,{\\\"statements\\\":[[1,[28,[\\\"channel\\\",\\\"name\\\"]],false]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]}],[0,\\\"        \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"channel\\\"]},null],[0,\\\"      \\\"],[11,\\\"li\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"a\\\",[]],[15,\\\"class\\\",\\\"join-channel\\\"],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[5,[\\\"action\\\"],[[28,[null]],[33,[\\\"action\\\"],[[28,[null]],[28,[\\\"joinChannel\\\"]],[28,[\\\"space\\\"]]],null]]],[13],[0,\\\"+\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"space\\\"]},null]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\" } });\n});","define('hyperchannel/components/date-headline/component', ['exports', 'ember', 'moment'], function (exports, _ember, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Component.extend({\n\n    classNames: ['date-headline'],\n\n    updateInterval: 120000, // 2 minutes\n\n    headline: _ember.default.computed('message.date', function () {\n      var _this = this;\n\n      var date = (0, _moment.default)(this.get('message.date'));\n\n      var scheduleUpdate = function scheduleUpdate() {\n        _ember.default.run.later(function () {\n          _this.notifyPropertyChange('message.date');\n        }, _this.get('updateInterval'));\n      };\n\n      if (date.isSame((0, _moment.default)(), 'day')) {\n        scheduleUpdate();\n        return 'Today';\n      }\n\n      if (date.isSame((0, _moment.default)().subtract(1, 'day'), 'day')) {\n        scheduleUpdate();\n        return 'Yesterday';\n      }\n\n      return this.get('message.date').toLocaleDateString();\n    })\n\n  });\n});","define(\"hyperchannel/components/date-headline/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9ikDqjay\", \"block\": \"{\\\"statements\\\":[[11,\\\"h3\\\",[]],[13],[1,[26,[\\\"headline\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/date-headline/template.hbs\" } });\n});","define('hyperchannel/components/from-elsewhere', ['exports', 'ember-elsewhere/components/from-elsewhere'], function (exports, _fromElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _fromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/illiquid-model\", [\"exports\", \"liquid-fire/components/illiquid-model\"], function (exports, _illiquidModel) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _illiquidModel.default;\n    }\n  });\n});","define('hyperchannel/components/link-to-username/component', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = _ember.default.Component,\n      computed = _ember.default.computed,\n      isPresent = _ember.default.isPresent;\n  exports.default = Component.extend({\n\n    username: null,\n\n    roles: {\n      '@': 'op',\n      '%': 'half-op',\n      '+': 'voice'\n    },\n\n    role: computed('username', 'roles', function () {\n      var role = this.get('roles')[this.get('username')[0]];\n\n      if (isPresent(role)) {\n        return role;\n      }\n\n      return 'normal';\n    }),\n\n    usernameWithoutPrefix: computed('username', 'roles', function () {\n      var regex = RegExp('^[\\\\' + Object.keys(this.get('roles')).join('\\\\') + ']');\n\n      return this.get('username').replace(regex, '');\n    })\n\n  });\n});","define(\"hyperchannel/components/link-to-username/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"SBRQN+LX\", \"block\": \"{\\\"statements\\\":[[6,[\\\"link-to\\\"],[\\\"space.userChannel\\\",[28,[\\\"usernameWithoutPrefix\\\"]]],[[\\\"class\\\"],[[28,[\\\"role\\\"]]]],{\\\"statements\\\":[[1,[26,[\\\"username\\\"]],false]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/link-to-username/template.hbs\" } });\n});","define(\"hyperchannel/components/liquid-bind\", [\"exports\", \"liquid-fire/components/liquid-bind\"], function (exports, _liquidBind) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidBind.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-child\", [\"exports\", \"liquid-fire/components/liquid-child\"], function (exports, _liquidChild) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidChild.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-container\", [\"exports\", \"liquid-fire/components/liquid-container\"], function (exports, _liquidContainer) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidContainer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-if\", [\"exports\", \"liquid-fire/components/liquid-if\"], function (exports, _liquidIf) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidIf.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-measured\", [\"exports\", \"liquid-fire/components/liquid-measured\"], function (exports, _liquidMeasured) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidMeasured.default;\n    }\n  });\n  Object.defineProperty(exports, \"measure\", {\n    enumerable: true,\n    get: function () {\n      return _liquidMeasured.measure;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-outlet\", [\"exports\", \"liquid-fire/components/liquid-outlet\"], function (exports, _liquidOutlet) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidOutlet.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-spacer\", [\"exports\", \"liquid-fire/components/liquid-spacer\"], function (exports, _liquidSpacer) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidSpacer.default;\n    }\n  });\n});","define('hyperchannel/components/liquid-sync', ['exports', 'liquid-fire/components/liquid-sync'], function (exports, _liquidSync) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _liquidSync.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-unless\", [\"exports\", \"liquid-fire/components/liquid-unless\"], function (exports, _liquidUnless) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidUnless.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-versions\", [\"exports\", \"liquid-fire/components/liquid-versions\"], function (exports, _liquidVersions) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidVersions.default;\n    }\n  });\n});","define('hyperchannel/components/message-chat-me/component', ['exports', 'hyperchannel/components/message-chat/component'], function (exports, _component) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _component.default.extend({\n    classNames: ['chat-message', 'chat-me-message']\n  });\n});","define(\"hyperchannel/components/message-chat-me/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"VPwtBi/C\", \"block\": \"{\\\"statements\\\":[[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"username\\\"],[16,\\\"data-username\\\",[28,[\\\"message\\\",\\\"nickname\\\"]],null],[13],[1,[28,[\\\"message\\\",\\\"nickname\\\"]],false],[14],[0,\\\"\\\\n\\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"message\\\"],[13],[1,[26,[\\\"formattedContent\\\"]],false],[14],[0,\\\"\\\\n\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/message-chat-me/template.hbs\" } });\n});","define('hyperchannel/components/message-chat/component', ['exports', 'ember', 'moment'], function (exports, _ember, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var computed = _ember.default.computed,\n      htmlSafe = _ember.default.String.htmlSafe;\n  exports.default = _ember.default.Component.extend({\n    tagName: 'div',\n    classNames: ['chat-message'],\n\n    message: null,\n\n    datetime: computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD[T]HH:mm');\n    }),\n\n    dateTitle: computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD [at] HH:mm');\n    }),\n\n    formattedContent: computed('message.content', function () {\n      var content = this.get('message.content');\n      var out = void 0;\n\n      // Images\n      if (content.match(/^(http)s?:\\/\\/.*(gif|png|jpg|jpeg)$/i)) {\n        out = '<br><a href=\"' + content + '\" target=\"_blank\" rel=\"nofollow noopener\">' + ('<img src=\"' + content + '\" class=\"from-image-url\" alt=\"' + content + '\">') + '</a>';\n      }\n      // Other links\n      else {\n          out = linkifyStr(content, {\n            linkAttributes: { rel: 'nofollow noopener' },\n            validate: {\n              url: function url(value) {\n                return (/^(http)s?:\\/\\//.test(value)\n                );\n              }\n            }\n          });\n        }\n\n      // Colors\n      out = out.replace(/\\u0003(\\d+)/g, '<span class=\"color-$1\">').replace(/\\\"color-(\\d)\\\"/g, '\"color-0$1\"').replace(/\\u0002/g, '<span class=\"bold\">').replace(/\\u001D/g, '<span class=\"italic\">').replace(/\\u000f/g, '</span>');\n\n      return htmlSafe(out);\n    })\n  });\n});","define(\"hyperchannel/components/message-chat/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"wnE6pEFq\", \"block\": \"{\\\"statements\\\":[[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"chat-message__username\\\"],[16,\\\"data-username\\\",[28,[\\\"message\\\",\\\"nickname\\\"]],null],[13],[0,\\\"\\\\n  \\\"],[1,[28,[\\\"message\\\",\\\"nickname\\\"]],false],[0,\\\":\\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[11,\\\"time\\\",[]],[15,\\\"class\\\",\\\"chat-message__date\\\"],[16,\\\"datetime\\\",[26,[\\\"datetime\\\"]],null],[16,\\\"title\\\",[26,[\\\"dateTitle\\\"]],null],[13],[0,\\\"\\\\n  \\\"],[1,[33,[\\\"moment-format\\\"],[[28,[\\\"message\\\",\\\"date\\\"]],\\\"HH:mm\\\"],null],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"chat-message__message\\\"],[13],[0,\\\"\\\\n  \\\"],[1,[26,[\\\"formattedContent\\\"]],false],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/message-chat/template.hbs\" } });\n});","define('hyperchannel/components/modal-target/component', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Component.extend({\n    modalAnimation: function modalAnimation() {\n      return this.lookup('explode').call(this, {\n        pick: '.modal-background',\n        use: ['fade', { maxOpacity: 0.5 }]\n      }, {\n        pick: '.modal-dialog',\n        use: 'scale'\n      });\n    },\n\n\n    actions: {\n      outsideClick: function outsideClick(modal) {\n        if (modal && modal.onOutsideClick) {\n          modal.onOutsideClick();\n        }\n      }\n    }\n\n  });\n});","define(\"hyperchannel/components/modal-target/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"iWOGFOgx\", \"block\": \"{\\\"statements\\\":[[6,[\\\"from-elsewhere\\\"],null,[[\\\"name\\\"],[\\\"modal\\\"]],{\\\"statements\\\":[[6,[\\\"liquid-bind\\\"],[[28,[\\\"modal\\\"]]],[[\\\"containerless\\\",\\\"use\\\"],[true,[28,[\\\"modalAnimation\\\"]]]],{\\\"statements\\\":[[6,[\\\"if\\\"],[[28,[\\\"currentModal\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"modal-container\\\"],[13],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"modal-background\\\"],[16,\\\"onclick\\\",[33,[\\\"action\\\"],[[28,[null]],\\\"outsideClick\\\",[28,[\\\"currentModal\\\"]]],null],null],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[13],[14],[0,\\\"\\\\n        \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"modal-dialog\\\"],[13],[0,\\\"\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"currentModal\\\",\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"component\\\"],[[28,[\\\"currentModal\\\",\\\"body\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[33,[\\\"component\\\"],[[28,[\\\"currentModal\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]}],[0,\\\"        \\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[\\\"currentModal\\\"]},null]],\\\"locals\\\":[\\\"modal\\\"]},null],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/modal-target/template.hbs\" } });\n});","define('hyperchannel/components/multiple-from-elsewhere', ['exports', 'ember-elsewhere/components/multiple-from-elsewhere'], function (exports, _multipleFromElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _multipleFromElsewhere.default;\n    }\n  });\n});","define('hyperchannel/components/notification-topic-change/component', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Component.extend({\n\n    tagName: 'div',\n    classNames: ['topic-change-notification']\n\n  });\n});","define(\"hyperchannel/components/notification-topic-change/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"t9m+VltG\", \"block\": \"{\\\"statements\\\":[[0,\\\"Topic was changed to \\\\\\\"\\\"],[1,[28,[\\\"message\\\",\\\"content\\\"]],false],[0,\\\"\\\\\\\" by \\\"],[11,\\\"span\\\",[]],[15,\\\"class\\\",\\\"username\\\"],[16,\\\"data-username\\\",[28,[\\\"message\\\",\\\"nickname\\\"]],null],[13],[1,[28,[\\\"message\\\",\\\"nickname\\\"]],false],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/notification-topic-change/template.hbs\" } });\n});","define('hyperchannel/components/space-setting-modal/component', ['exports', 'ember', 'hyperchannel/models/space'], function (exports, _ember, _space) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Component.extend({\n\n    settings: null,\n    space: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      // create a clone of the settings that we can operate on\n      this.set('space', _space.default.create(this.get('settings').serialize()));\n    },\n\n\n    actions: {\n      save: function save() {\n        this.onSave(this.get('space'));\n      },\n      cancel: function cancel() {\n        this.onCancel();\n      }\n    }\n\n  });\n});","define(\"hyperchannel/components/space-setting-modal/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"KEYVCh1C\", \"block\": \"{\\\"statements\\\":[[11,\\\"h1\\\",[]],[13],[0,\\\"Space Setting\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[11,\\\"form\\\",[]],[15,\\\"name\\\",\\\"add-space\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"save\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"space\\\",\\\"protocol\\\"]],\\\"required\\\",\\\"IRC\\\"]]],false],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"space\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"space\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"space\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[28,[\\\"space\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled-modal\\\"]]],false],[0,\\\"\\\\n    \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"tls-enabled-modal\\\"],[13],[0,\\\"Secure (TLS)\\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"placeholder\\\"],[[28,[\\\"space\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"placeholder\\\"],[[28,[\\\"space\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"space\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    username:  \\\"],[1,[28,[\\\"space\\\",\\\"server\\\",\\\"username\\\"]],false],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n  \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n    \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"value\\\",\\\"Save\\\"],[13],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"cancel\\\"]],[13],[0,\\\"Cancel\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/space-setting-modal/template.hbs\" } });\n});","define('hyperchannel/components/to-elsewhere', ['exports', 'ember-elsewhere/components/to-elsewhere'], function (exports, _toElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toElsewhere.default;\n    }\n  });\n});","define('hyperchannel/controllers/application', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = _ember.default.Controller,\n      alias = _ember.default.computed.alias,\n      service = _ember.default.inject.service;\n  exports.default = Controller.extend({\n\n    coms: service(),\n    spaces: alias('coms.spaces'),\n\n    showGlobalMenu: false,\n    showChannelMenu: false\n\n  });\n});","define('hyperchannel/controllers/index', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Controller.extend({\n\n    application: _ember.default.inject.controller()\n\n  });\n});","define('hyperchannel/controllers/settings', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = _ember.default.Controller,\n      _Ember$inject = _ember.default.inject,\n      controller = _Ember$inject.controller,\n      service = _Ember$inject.service,\n      notEmpty = _ember.default.computed.notEmpty;\n  exports.default = Controller.extend({\n\n    application: controller(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    newSpace: null,\n    selectedSpacePreset: null,\n\n    showSpaceSettingModal: notEmpty('selectedSpacePreset'),\n\n    actions: {\n      addSpaceFromPreset: function addSpaceFromPreset(preset) {\n        this.set('selectedSpacePreset', preset);\n      },\n      saveSpace: function saveSpace(space) {\n        var _this = this;\n\n        this.set('selectedSpacePreset', null);\n\n        this.get('storage').saveSpace(space).then(function () {\n          _this.get('coms').connectAndAddSpace(space);\n        });\n      }\n    }\n\n  });\n});","define('hyperchannel/controllers/space', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Controller.extend({});\n});","define('hyperchannel/controllers/space/base_channel', ['exports', 'ember', 'hyperchannel/models/message'], function (exports, _ember, _message) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = _ember.default.Controller,\n      _Ember$inject = _ember.default.inject,\n      controller = _Ember$inject.controller,\n      service = _Ember$inject.service,\n      Logger = _ember.default.Logger,\n      isPresent = _ember.default.isPresent;\n  exports.default = Controller.extend({\n\n    newMessage: null,\n    space: controller(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    createMessage: function createMessage(message, type) {\n      return _message.default.create({\n        type: type,\n        date: new Date(),\n        nickname: this.get('space.model.server.nickname'),\n        content: message\n      });\n    },\n\n\n    actions: {\n      sendMessage: function sendMessage(newMessage) {\n        var message = this.createMessage(newMessage, 'message-chat');\n\n        this.get('coms').transferMessage(this.get('space.model'), this.get('model'), message.get('content'));\n\n        this.get('model.messages').pushObject(message);\n        this.set('newMessage', null);\n      },\n\n      executeCommand: function executeCommand(newMessage) {\n        var availableCommands = [\"help\", \"join\", \"leave\", \"me\", \"msg\", \"part\", \"topic\"];\n        var commandText = newMessage.substr(1);\n        var commandSplitted = commandText.split(\" \");\n        var command = commandSplitted[0];\n\n        if (availableCommands.includes(command.toLowerCase())) {\n          this.send(command + 'Command', commandSplitted.slice(1));\n        } else {\n          Logger.warn('[channel]', 'Unknown command', commandText);\n        }\n\n        this.set('newMessage', null);\n      },\n\n      joinCommand: function joinCommand(args) {\n        var space = this.get('space.model');\n        var channel = this.get('coms').createChannel(space, args[0]);\n        this.get('storage').saveSpace(space);\n        this.transitionToRoute('space.channel', space, channel);\n      },\n\n      partCommand: function partCommand() {\n        var space = this.get('space.model');\n        var channelName = this.get('model.name');\n        this.get('coms').removeChannel(space, channelName);\n        var lastChannel = space.get('channels.lastObject');\n        if (isPresent(lastChannel)) {\n          this.transitionToRoute('space.channel', space, lastChannel);\n        } else {\n          this.transitionToRoute('space', space);\n        }\n      },\n\n      leaveCommand: function leaveCommand() {\n        this.send('partCommand');\n      },\n\n      helpCommand: function helpCommand() {},\n\n      meCommand: function meCommand(args) {\n        var newMessage = args.join(' ');\n\n        var message = this.createMessage(newMessage, 'message-chat-me');\n\n        this.get('coms').transferMeMessage(this.get('space.model'), this.get('model.sockethubChannelId'), message.get('content'));\n\n        this.get('model.messages').pushObject(message);\n      },\n\n      msgCommand: function msgCommand(args) {\n        var username = args.shift();\n        this.get('coms').createUserChannel(this.get('space.model'), username);\n        // TODO fix this, sockethub sends a failure event with error\n        // \"TypeError: Cannot read property 'indexOf' of undefined\"\n        // this.get('coms').transferMessage(this.get('space.model'), username, args.join(' '));\n      },\n\n      topicCommand: function topicCommand(args) {\n        var channel = this.get('model');\n        var topic = args.join(' ');\n\n        this.get('coms').changeTopic(this.get('space.model'), channel, topic);\n      }\n    }\n\n  });\n});","define('hyperchannel/controllers/space/channel', ['exports', 'hyperchannel/controllers/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({});\n});","define('hyperchannel/controllers/space/user_channel', ['exports', 'hyperchannel/controllers/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({});\n});","define('hyperchannel/ember-gestures/recognizers/pan', ['exports', 'ember-gestures/recognizers/pan'], function (exports, _pan) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pan.default;\n});","define('hyperchannel/ember-gestures/recognizers/pinch', ['exports', 'ember-gestures/recognizers/pinch'], function (exports, _pinch) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pinch.default;\n});","define('hyperchannel/ember-gestures/recognizers/press', ['exports', 'ember-gestures/recognizers/press'], function (exports, _press) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _press.default;\n});","define('hyperchannel/ember-gestures/recognizers/rotate', ['exports', 'ember-gestures/recognizers/rotate'], function (exports, _rotate) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _rotate.default;\n});","define('hyperchannel/ember-gestures/recognizers/swipe', ['exports', 'ember-gestures/recognizers/swipe'], function (exports, _swipe) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _swipe.default;\n});","define('hyperchannel/ember-gestures/recognizers/swipeleft', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    include: [],\n    exclude: [],\n    options: { threshold: 25, direction: Hammer.DIRECTION_LEFT },\n    eventName: 'swipeleft',\n    recognizer: 'swipe'\n  };\n});","define('hyperchannel/ember-gestures/recognizers/swiperight', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    include: [],\n    exclude: [],\n    options: { threshold: 25, direction: Hammer.DIRECTION_RIGHT },\n    eventName: 'swiperight',\n    recognizer: 'swipe'\n  };\n});","define('hyperchannel/ember-gestures/recognizers/tap', ['exports', 'ember-gestures/recognizers/tap'], function (exports, _tap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _tap.default;\n    }\n  });\n});","define('hyperchannel/ember-gestures/recognizers/vertical-pan', ['exports', 'ember-gestures/recognizers/vertical-pan'], function (exports, _verticalPan) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _verticalPan.default;\n    }\n  });\n});","define('hyperchannel/ember-gestures/recognizers/vertical-swipe', ['exports', 'ember-gestures/recognizers/vertical-swipe'], function (exports, _verticalSwipe) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _verticalSwipe.default;\n    }\n  });\n});","define('hyperchannel/event_dispatcher', ['exports', 'ember', 'ember-gestures/event_dispatcher', 'hyperchannel/config/environment'], function (exports, _ember, _event_dispatcher, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var merge = _ember.default.assign || _ember.default.merge;\n\n  var gestures = merge({}, {\n    emberUseCapture: false,\n    removeTracking: false,\n    useFastPaths: false\n  });\n  gestures = merge(gestures, _environment.default.gestures);\n\n  exports.default = _event_dispatcher.default.extend({\n    useCapture: gestures.emberUseCapture,\n    removeTracking: gestures.removeTracking,\n    useFastPaths: gestures.useFastPaths\n  });\n});","define('hyperchannel/helpers/app-version', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _ember, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  var version = _environment.default.APP.version;\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (hash.hideSha) {\n      return version.match(_regexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_regexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports.default = _ember.default.Helper.helper(appVersion);\n});","define('hyperchannel/helpers/is-after', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-after'], function (exports, _ember, _environment, _isAfter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isAfter.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-before', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-before'], function (exports, _ember, _environment, _isBefore) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isBefore.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-between', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-between'], function (exports, _ember, _environment, _isBetween) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isBetween.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same-or-after', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same-or-after'], function (exports, _ember, _environment, _isSameOrAfter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isSameOrAfter.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same-or-before', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same-or-before'], function (exports, _ember, _environment, _isSameOrBefore) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isSameOrBefore.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same'], function (exports, _ember, _environment, _isSame) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isSame.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/lf-lock-model', ['exports', 'liquid-fire/helpers/lf-lock-model'], function (exports, _lfLockModel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _lfLockModel.default;\n    }\n  });\n  Object.defineProperty(exports, 'lfLockModel', {\n    enumerable: true,\n    get: function () {\n      return _lfLockModel.lfLockModel;\n    }\n  });\n});","define('hyperchannel/helpers/lf-or', ['exports', 'liquid-fire/helpers/lf-or'], function (exports, _lfOr) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _lfOr.default;\n    }\n  });\n  Object.defineProperty(exports, 'lfOr', {\n    enumerable: true,\n    get: function () {\n      return _lfOr.lfOr;\n    }\n  });\n});","define('hyperchannel/helpers/moment-add', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-add'], function (exports, _ember, _environment, _momentAdd) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentAdd.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-calendar', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-calendar'], function (exports, _ember, _environment, _momentCalendar) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentCalendar.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-duration', ['exports', 'ember-moment/helpers/moment-duration'], function (exports, _momentDuration) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentDuration.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-format', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-format'], function (exports, _ember, _environment, _momentFormat) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentFormat.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-from-now', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-from-now'], function (exports, _ember, _environment, _momentFromNow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentFromNow.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-from', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-from'], function (exports, _ember, _environment, _momentFrom) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentFrom.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-subtract', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-subtract'], function (exports, _ember, _environment, _momentSubtract) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentSubtract.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to-date', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to-date'], function (exports, _ember, _environment, _momentToDate) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentToDate.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to-now', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to-now'], function (exports, _ember, _environment, _momentToNow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentToNow.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to'], function (exports, _ember, _environment, _momentTo) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentTo.default.extend({\n    globalAllowEmpty: !!_ember.default.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _unix) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _unix.default;\n    }\n  });\n  Object.defineProperty(exports, 'unix', {\n    enumerable: true,\n    get: function () {\n      return _unix.unix;\n    }\n  });\n});","define('hyperchannel/helpers/moment', ['exports', 'ember-moment/helpers/moment'], function (exports, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _moment.default;\n    }\n  });\n});","define('hyperchannel/helpers/now', ['exports', 'ember-moment/helpers/now'], function (exports, _now) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _now.default;\n    }\n  });\n});","define('hyperchannel/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('hyperchannel/helpers/route-action', ['exports', 'ember-route-action-helper/helpers/route-action'], function (exports, _routeAction) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _routeAction.default;\n    }\n  });\n});","define('hyperchannel/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('hyperchannel/helpers/unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _unix) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _unix.default;\n    }\n  });\n  Object.defineProperty(exports, 'unix', {\n    enumerable: true,\n    get: function () {\n      return _unix.unix;\n    }\n  });\n});","define('hyperchannel/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'hyperchannel/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _config$APP = _environment.default.APP,\n      name = _config$APP.name,\n      version = _config$APP.version;\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('hyperchannel/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('hyperchannel/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('hyperchannel/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/index'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('hyperchannel/initializers/ember-hammertime', ['exports', 'ember-hammertime/components/component'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-hammertime',\n    initialize: function initialize() {}\n  };\n});","define('hyperchannel/initializers/export-application-global', ['exports', 'ember', 'hyperchannel/config/environment'], function (exports, _ember, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember.default.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('hyperchannel/initializers/hammer', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'hammer',\n\n    initialize: function initialize() {\n      // Enable text selection.\n      // It's disabled by default to improve UX on desktop, so text wouldn't\n      // be selected when panning.\n      delete Hammer.defaults.cssProps.userSelect;\n    }\n  };\n});","define('hyperchannel/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"hyperchannel/initializers/liquid-fire\", [\"exports\", \"liquid-fire/ember-internals\"], function (exports, _emberInternals) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  (0, _emberInternals.initialize)();\n\n  exports.default = {\n    name: 'liquid-fire',\n    initialize: function initialize() {}\n  };\n});","define('hyperchannel/initializers/local-storage-adapter', ['exports', 'ember-local-storage/initializers/local-storage-adapter'], function (exports, _localStorageAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _localStorageAdapter.default;\n    }\n  });\n  Object.defineProperty(exports, 'initialize', {\n    enumerable: true,\n    get: function () {\n      return _localStorageAdapter.initialize;\n    }\n  });\n});","define('hyperchannel/initializers/sockethub', ['exports', 'hyperchannel/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  // TODO move settings into config file\n  var sockethub = new SockethubClient(io(_environment.default.sockethubURL, { path: '/sockethub' })); /* global SockethubClient */\n  /* global io */\n  exports.default = {\n    name: 'sockethub',\n\n    initialize: function initialize(app) {\n      app.register('sockethub:client', sockethub, { instantiate: false, singleton: true });\n\n      app.inject('controller', 'sockethub', 'sockethub:client');\n      app.inject('route', 'sockethub', 'sockethub:client');\n      app.inject('component', 'sockethub', 'sockethub:client');\n      app.inject('service', 'sockethub', 'sockethub:client');\n    }\n  };\n});","define('hyperchannel/initializers/store', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('hyperchannel/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"hyperchannel/instance-initializers/ember-data\", [\"exports\", \"ember-data/-private/instance-initializers/initialize-store-service\"], function (exports, _initializeStoreService) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: \"ember-data\",\n    initialize: _initializeStoreService.default\n  };\n});","define('hyperchannel/instance-initializers/ember-gestures', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var getOwner = _ember.default.getOwner;\n  exports.default = {\n    name: 'ember-gestures',\n\n    initialize: function initialize(instance) {\n      if (typeof instance.lookup === \"function\") {\n        instance.lookup('service:-gestures');\n      } else {\n        // This can be removed when we no-longer support ember 1.12 and 1.13\n        getOwner(instance).lookup('service:-gestures');\n      }\n    }\n\n  };\n});","define('hyperchannel/instance-initializers/remotestorage', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize(appInstance) {\n    var storage = appInstance.lookup('service:remotestorage');\n    var remoteStorage = storage.get('rs');\n\n    // Add to window global for debugging/development\n    window.remoteStorage = remoteStorage;\n\n    var rsEvents = ['ready', 'not-connected', 'connected', 'disconnected', 'error', 'features-loaded', 'connecting', 'authing', 'wire-busy', 'wire-done', 'network-offline', 'network-online'];\n\n    rsEvents.forEach(function (evt) {\n      remoteStorage.on(evt, function () {\n        return _ember.default.Logger.debug('[remotestorage] RS event: ' + evt);\n      });\n    });\n  }\n\n  exports.default = {\n    name: 'remotestorage',\n    initialize: initialize\n  };\n});","define('hyperchannel/models/base_channel', ['exports', 'ember', 'hyperchannel/models/message', 'moment'], function (exports, _ember, _message, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var computed = _ember.default.computed,\n      isPresent = _ember.default.isPresent;\n  exports.default = _ember.default.Object.extend({\n\n    space: null,\n    name: '',\n    userList: null,\n    messages: null,\n    connected: false,\n    sockethubChannelId: null,\n    topic: null,\n    unreadMessages: false,\n    unreadMentions: false,\n    visible: false, // Current/active channel\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('messages', []);\n      this.set('userList', []);\n    },\n\n\n    isLogged: computed('space.loggedChannels.[]', 'name', function () {\n      var _this = this;\n\n      var loggedChannel = this.get('space.loggedChannels').find(function (channelName) {\n        return channelName === _this.get('name');\n      });\n\n      return isPresent(loggedChannel);\n    }),\n\n    slug: computed('name', function () {\n      // This could be based on server type in the future. E.g. IRC would be\n      // server URL, while Campfire would be another id.\n      return this.get('name').replace(/#/g, '');\n    }),\n\n    unreadMessagesClass: computed('visible', 'unreadMessages', 'unreadMentions', function () {\n      if (this.get('visible') || !this.get('unreadMessages')) {\n        return null;\n      }\n      return this.get('unreadMentions') ? 'unread-mentions' : 'unread-messages';\n    }),\n\n    sortedMessages: computed('messages.@each.date', function () {\n      return this.get('messages').sortBy('date');\n    }),\n\n    addDateHeadline: function addDateHeadline(newMessage) {\n      var headlineDate = (0, _moment.default)(newMessage.get('date')).startOf('day').toDate();\n\n      var existingDateHeadline = this.get('messages').find(function (message) {\n        return message.get('type') === 'date-headline' && message.get('date').toString() === headlineDate.toString();\n      });\n\n      if (existingDateHeadline) {\n        return;\n      }\n\n      var dateMessage = _message.default.create({ type: 'date-headline', date: headlineDate });\n      this.get('messages').pushObject(dateMessage);\n    },\n    addMessage: function addMessage(message) {\n      this.addDateHeadline(message);\n\n      this.get('messages').pushObject(message);\n\n      if (!this.get('visible')) {\n        this.set('unreadMessages', true);\n        if (message.get('content').match(this.get('space.userNickname'))) {\n          this.set('unreadMentions', true);\n        }\n      }\n    },\n    addUser: function addUser(username) {\n      if (!this.get('userList').includes(username)) {\n        this.get('userList').pushObject(username);\n      }\n    },\n    removeUser: function removeUser(username) {\n      this.get('userList').removeObject(username);\n    }\n  });\n});","define('hyperchannel/models/channel', ['exports', 'ember', 'hyperchannel/models/base_channel'], function (exports, _ember, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    searchedPreviousLogsUntilDate: null,\n\n    formattedTopic: _ember.default.computed('topic', function () {\n      if (this.get('topic') !== null) {\n        var topic = linkifyStr(this.get('topic'), {\n          defaultProtocol: 'https',\n          linkAttributes: { rel: 'nofollow' }\n        });\n        return new _ember.default.String.htmlSafe(topic);\n      } else {\n        return '';\n      }\n    })\n\n  });\n});","define('hyperchannel/models/message', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Object.extend({\n\n    type: null,\n    date: null,\n    nickname: null,\n    content: null\n\n  });\n});","define('hyperchannel/models/space', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var computed = _ember.default.computed,\n      isPresent = _ember.default.isPresent;\n  exports.default = _ember.default.Object.extend({\n\n    name: null,\n    protocol: 'IRC',\n    server: {\n      hostname: null,\n      port: 7000,\n      secure: true,\n      username: null,\n      password: null,\n      nickname: null,\n      nickServ: {\n        password: null\n      }\n    },\n    channels: null, // Channel instances\n\n    // Keep a list of all old sockethubPersonIds, because there might\n    // still be coming events from Sockethub for those.\n    previousSockethubPersonIds: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.set('channels', []);\n      this.set('previousSockethubPersonIds', []);\n    },\n\n\n    channelNames: computed('channels.@each.name', function () {\n      return this.get('channels').mapBy('name');\n    }),\n\n    sockethubChannelIds: computed('channels.@each.sockethubChannelId', function () {\n      return this.get('channels').mapBy('sockethubChannelId');\n    }),\n\n    loggedChannels: computed('name', 'protocol', function () {\n      if (this.get('name') === 'Freenode' && this.get('protocol') === 'IRC') {\n        return ['#5apps', '#kosmos', '#kosmos-dev', '#remotestorage', '#hackerbeach', '#unhosted', '#sockethub', '#opensourcedesign', '#openknot', '#emberjs', '#indieweb', '#mastodon'];\n      } else {\n        return [];\n      }\n    }),\n\n    userNickname: computed.alias('server.nickname'),\n\n    updateUsername: function updateUsername(username) {\n      // keep track of old name for later reference\n      this.get('previousSockethubPersonIds').pushObject(this.get('sockethubPersonId'));\n\n      switch (this.get('protocol')) {\n        case 'IRC':\n          this.set('server.nickname', username);\n          break;\n        case 'XMPP':\n          this.set('server.username', username);\n          break;\n      }\n    },\n\n\n    sockethubPersonId: function () {\n      var personID = void 0;\n      switch (this.get('protocol')) {\n        case 'IRC':\n          // TODO - remove the use of any URI protocol part\n          personID = 'irc://' + this.get('server.nickname') + '@' + this.get('server.hostname');\n          break;\n        case 'XMPP':\n          // TODO - why isn't the full JID user+host+resource?\n          personID = this.get('server.username') + '/hyperchannel';\n          break;\n      }\n      return personID;\n    }.property('protocol', 'server.hostname', 'server.username', 'server.nickname'),\n\n    channelSorting: ['name'],\n    sortedChannels: computed.sort('channels', 'channelSorting'),\n\n    serialize: function serialize() {\n      var _this = this;\n\n      var serialized = {\n        id: this.get('id') || this.get('name').dasherize(),\n        name: this.get('name'),\n        protocol: this.get('protocol'),\n        server: {\n          hostname: this.get('server.hostname'),\n          port: parseInt(this.get('server.port'), 10),\n          secure: this.get('server.secure'),\n          nickname: this.get('server.nickname')\n        },\n        channels: this.get('channelNames') || []\n      };\n\n      ['username', 'password', 'nickname'].forEach(function (prop) {\n        // TODO credentials need to be encrypted and probably stored elsewhere\n        if (isPresent(_this.get('server.' + prop))) {\n          serialized.server[prop] = _this.get('server.' + prop);\n        }\n      });\n\n      return serialized;\n    }\n  });\n});","define('hyperchannel/models/user_channel', ['exports', 'hyperchannel/models/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    isUserChannel: true\n\n  });\n});","define('hyperchannel/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('hyperchannel/router', ['exports', 'ember', 'hyperchannel/config/environment'], function (exports, _ember, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Router = _ember.default.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('space', { path: '/:id' }, function () {\n      this.route('channel', { path: '/channel/:slug' });\n      this.route('userChannel', { path: '/user/:slug' });\n    });\n\n    this.route('settings');\n  });\n\n  exports.default = Router;\n});","define('hyperchannel/routes/application', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = _ember.default.Route,\n      service = _ember.default.inject.service,\n      isEmpty = _ember.default.isEmpty;\n  exports.default = Route.extend({\n    logger: service(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    beforeModel: function beforeModel() {\n      this._super.apply(this, arguments);\n      // See a list of allowed types in logger.js\n      // Add or remove all your log types here:\n      // this.get('logger').add('message');\n      // this.get('logger').remove('join');\n      // this.get('logger').disable();\n      // this.get('logger').enable();\n    },\n    model: function model() {\n      this.get('coms').setupListeners();\n      return this.get('coms').instantiateSpacesAndChannels();\n    },\n\n\n    actions: {\n      menu: function menu(which, what) {\n        var menuProp = 'show' + which.capitalize() + 'Menu';\n\n        switch (what) {\n          case 'show':\n            this.controller.set(menuProp, true);\n            break;\n          case 'hide':\n            this.controller.set(menuProp, false);\n            break;\n          case 'toggle':\n            this.controller.toggleProperty(menuProp);\n            break;\n        }\n      },\n      openNewChannel: function openNewChannel(space) {\n        var channelName = window.prompt('Join channel');\n\n        if (isEmpty(channelName)) {\n          return;\n        }\n\n        if (space.get('protocol') === 'IRC' && !channelName.match(/^#/)) {\n          channelName = '#' + channelName;\n        }\n        var channel = this.get('coms').createChannel(space, channelName);\n        this.get('storage').saveSpace(space);\n        this.transitionTo('space.channel', space, channel);\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/index', ['exports', 'ember', 'ember-local-storage'], function (exports, _ember, _emberLocalStorage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Route.extend({\n\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n\n    redirect: function redirect() {\n      var currentSpace = this.get('userSettings.currentSpace') || 'freenode';\n      var currentChannel = this.get('userSettings.currentChannel') || '#kosmos';\n\n      if (currentSpace && currentChannel) {\n        this.transitionTo('space.channel', currentSpace, currentChannel);\n      }\n    }\n  });\n});","define('hyperchannel/routes/settings', ['exports', 'ember', 'hyperchannel/models/space', 'hyperchannel/config/environment'], function (exports, _ember, _space, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = _ember.default.Route,\n      service = _ember.default.inject.service,\n      isEmpty = _ember.default.isEmpty,\n      Logger = _ember.default.Logger,\n      RSVP = _ember.default.RSVP;\n  exports.default = Route.extend({\n\n    storage: service('remotestorage'),\n    coms: service(),\n\n    model: function model() {\n      var rsKosmos = this.get('storage.rs').kosmos;\n\n      var spaces = rsKosmos.spaces.getAll().then(function (res) {\n        var col = [];\n        if (isEmpty(res)) {\n          return col;\n        }\n        Object.keys(res).forEach(function (id) {\n          col.push(_space.default.create(res[id]));\n        });\n        return col;\n      }, function (e) {\n        Logger.error(e);\n      });\n\n      return RSVP.hash({\n        spaces: spaces,\n        spacePresets: _environment.default.spacePresets.map(function (preset) {\n          return _space.default.create(preset);\n        })\n      });\n    },\n    setupController: function setupController(controller) {\n      this._super.apply(this, arguments);\n      controller.set('newSpace', _space.default.create());\n    },\n\n\n    actions: {\n      addSpace: function addSpace() {\n        var _this = this;\n\n        var newSpace = this.controller.get('newSpace');\n        newSpace.set('id', newSpace.get('name').dasherize());\n\n        this.get('storage').saveSpace(newSpace).then(function () {\n          _this.get('coms').connectAndAddSpace(newSpace);\n          _this.modelFor('settings').spaces.pushObject(newSpace);\n        }, function (e) {\n          Logger.error('error saving in RS', newSpace, e);\n        });\n      },\n      removeSpace: function removeSpace(space) {\n        var _this2 = this;\n\n        this.get('storage').removeSpace(space).then(function () {\n          _this2.modelFor('settings').spaces.removeObject(space);\n        }, function (e) {\n          Logger.error('error deleting from RS', space, e);\n        });\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/space', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Route.extend({\n\n    coms: _ember.default.inject.service(),\n\n    model: function model(params) {\n      return this.get('coms').get('spaces').findBy('id', params.id);\n    }\n\n  });\n});","define('hyperchannel/routes/space/base_channel', ['exports', 'ember', 'ember-local-storage'], function (exports, _ember, _emberLocalStorage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = _ember.default.Route,\n      service = _ember.default.inject.service,\n      _Ember$run = _ember.default.run,\n      later = _Ember$run.later,\n      scheduleOnce = _Ember$run.scheduleOnce;\n\n\n  function focusMessageInput() {\n    if (window.innerWidth > 900) {\n      _ember.default.$('input#message-field').focus();\n    } else {\n      // Don't auto-focus on small screens\n    }\n  }\n\n  exports.default = Route.extend({\n    coms: service(),\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n\n    model: function model(params) {\n      var space = this.modelFor('space');\n      var channel = space.get('channels').findBy('slug', params.slug);\n\n      if (!channel) {\n        channel = this.createChannelOrUserChannel(space, params.slug);\n      }\n\n      return channel;\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n\n      scheduleOnce('afterRender', function () {\n        focusMessageInput();\n      });\n    },\n\n\n    actions: {\n      didTransition: function didTransition() {\n        var _this = this;\n\n        var space = this.modelFor('space');\n        var channel = this.controller.get('model');\n\n        this.set('userSettings.currentSpace', space.get('id'));\n        this.set('userSettings.currentChannel', channel.get('slug'));\n\n        // Mark channel as active/visible\n        space.get('channels').setEach('visible', false);\n        channel.set('visible', true);\n\n        // Mark unread messages as read\n        channel.set('unreadMessages', false);\n        channel.set('unreadMentions', false);\n\n        later(this, function () {\n          return _this.send('menu', 'global', 'hide');\n        }, 500);\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/space/channel', ['exports', 'hyperchannel/routes/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.get('coms').createChannel(space, \"#\" + channelName);\n    }\n\n  });\n});","define('hyperchannel/routes/space/user_channel', ['exports', 'hyperchannel/routes/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.get('coms').createUserChannel(space, channelName);\n    }\n\n  });\n});","define('hyperchannel/services/-gestures', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-gestures/services/-gestures'], function (exports, _ember, _environment, _gestures) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var merge = _ember.default.assign || _ember.default.merge;\n\n  var gestures = merge({}, {\n    useCapture: false\n  });\n  gestures = merge(gestures, _environment.default.gestures);\n\n  exports.default = _gestures.default.extend({\n    useCapture: gestures.useCapture\n  });\n});","define('hyperchannel/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define('hyperchannel/services/coms', ['exports', 'ember', 'hyperchannel/models/space', 'hyperchannel/models/channel', 'hyperchannel/models/user_channel', 'hyperchannel/models/message', 'hyperchannel/config/environment', 'moment', 'ember-local-storage'], function (exports, _ember, _space, _channel, _user_channel, _message, _environment, _moment, _emberLocalStorage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var Service = _ember.default.Service,\n      service = _ember.default.inject.service,\n      RSVP = _ember.default.RSVP,\n      isEmpty = _ember.default.isEmpty,\n      isPresent = _ember.default.isPresent,\n      Logger = _ember.default.Logger,\n      get = _ember.default.get;\n  exports.default = Service.extend({\n\n    // Utils\n    ajax: service(),\n    logger: service(),\n    // Data storage\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    storage: service('remotestorage'),\n    // Message transport\n    irc: service('sockethub-irc'),\n    xmpp: service('sockethub-xmpp'),\n\n    /**\n     * A collection of all space model instances\n     * @type {Space[]}\n     */\n    spaces: null,\n\n    /**\n     * This is called from the application route on app startup. Sets up all\n     * listeners for incoming Sockethub messages.\n     * @public\n     */\n    setupListeners: function setupListeners() {\n      this.sockethub.socket.on('completed', this.handleSockethubCompleted.bind(this));\n      this.sockethub.socket.on('message', this.handleSockethubMessage.bind(this));\n      this.sockethub.socket.on('failure', this.handleSockethubFailure.bind(this));\n    },\n\n\n    /**\n     * This is called from the application route on app startup. Instantiates,\n     * connects, and joins all either configured/saved or default spaces/channels\n     * @public\n     */\n    instantiateSpacesAndChannels: function instantiateSpacesAndChannels() {\n      var _this = this;\n\n      this.set('spaces', []);\n      var rs = this.get('storage.rs');\n\n      return new RSVP.Promise(function (resolve, reject) {\n        rs.kosmos.spaces.getAll().then(function (spaceData) {\n          if (isEmpty(Object.keys(spaceData))) {\n            Logger.debug('No space data found in RS. Adding default space...');\n            _this.get('storage').addDefaultSpace().then(function (data) {\n              _this.connectAndAddSpace(data.space);\n              _this.instantiateChannels(data.space, data.channels);\n              resolve();\n            });\n          } else {\n            Object.keys(spaceData).forEach(function (id) {\n              var space = _space.default.create({\n                id: id,\n                name: spaceData[id].name,\n                protocol: spaceData[id].protocol,\n                server: spaceData[id].server\n              });\n              _this.connectAndAddSpace(space);\n              _this.instantiateChannels(space, spaceData[id].channels);\n            });\n            resolve();\n          }\n        }, function (e) {\n          _this.log('error', 'couldn\\'d load spaces from RS', e);\n          reject();\n        });\n      });\n    },\n\n\n    /**\n     * Invokes the connect function on the appropriate transport service\n     * @public\n     */\n    connectServer: function connectServer(space) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).connect(space);\n    },\n    connectAndAddSpace: function connectAndAddSpace(space) {\n      this.connectServer(space);\n      this.get('spaces').pushObject(space);\n    },\n\n\n    /**\n     * Invokes the channel-join function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\"\n     * @public\n     */\n    joinChannel: function joinChannel(space, channel, type) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).join(space, channel, type);\n    },\n\n    /**\n     * Invokes the send-message function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} content\n     * @public\n     */\n    transferMessage: function transferMessage(space, channel, content) {\n      var target = {\n        '@id': channel.get('sockethubChannelId'),\n        '@type': channel.get('isUserChannel') ? 'person' : 'room',\n        displayName: channel.get('name')\n      };\n      this.getServiceForSockethubPlatform(space.get('protocol')).transferMessage(space, target, content);\n    },\n\n\n    /**\n     * Invokes the send-action-message function on the appropriate transport service\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').transferMeMessage(space, target, content);\n          break;\n      }\n    },\n\n\n    leaveChannel: function leaveChannel(space, channel) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').leave(space, channel);\n          break;\n      }\n    },\n\n    changeTopic: function changeTopic(space, channel, topic) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').changeTopic(space, channel, topic);\n          break;\n      }\n    },\n\n    updateChannelUserList: function updateChannelUserList(message) {\n      var channel = this.getChannelById(message.actor['@id']);\n      if (channel) {\n        if (Array.isArray(message.object.members)) {\n          channel.set('userList', message.object.members.sort());\n        }\n      }\n    },\n    addUserToChannelUserList: function addUserToChannelUserList(message) {\n      var channel = this.getChannelById(message.target['@id']);\n      if (channel) {\n        channel.addUser(message.actor.displayName);\n      }\n    },\n    removeUserFromChannelUserList: function removeUserFromChannelUserList(message) {\n      // TODO handle user quit leaves (multiple channels)\n      // e.g. target is `{ @type: 'service', @id: 'irc://irc.freenode.net' }`\n      var channel = this.getChannelById(message.target['@id']);\n      if (channel) {\n        channel.removeUser(message.actor.displayName);\n      }\n    },\n    getChannelById: function getChannelById(channelId) {\n      // TODO handle multiple spaces with same hostname:\n      // This method should return an array of channels for all spaces with the\n      // same hostname\n\n      var hostname = channelId.match(/(?:irc:\\/\\/)?(?:.+@)?(.+?)(?:\\/|$)/)[1];\n\n      var space = this.get('spaces').findBy('server.hostname', hostname);\n\n      if (isEmpty(space)) {\n        _ember.default.Logger.warn('Could not find space by hostname', hostname);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (isEmpty(channel)) {\n        _ember.default.Logger.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * @param {String} personId\n     * @param {String} channelId\n     */\n    getChannel: function getChannel(personId, channelId) {\n      var space = this.get('spaces').findBy('sockethubPersonId', personId);\n      if (isEmpty(space)) {\n        _ember.default.Logger.warn('Could not find space by sockethubPersonId', personId);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (isEmpty(channel)) {\n        _ember.default.Logger.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n    updateUsername: function updateUsername(message) {\n      if (_typeof(message.actor) === 'object') {\n        var actorId = message.actor['@id'];\n        var space = this.get('spaces').findBy('sockethubPersonId', actorId);\n        if (isPresent(space)) {\n          space.updateUsername(message.target.displayName);\n        }\n      }\n    },\n    updateChannelTopic: function updateChannelTopic(message) {\n      var hostname = void 0;\n      if (_typeof(message.target) === 'object') {\n        hostname = message.target['@id'].match(/irc:\\/\\/(.+)\\//)[1];\n      } else if (typeof message.actor === 'string') {\n        hostname = message.actor.match(/irc:\\/\\/.+\\@(.+)/)[1];\n      }\n\n      var space = this.get('spaces').findBy('server.hostname', hostname);\n\n      if (!isEmpty(space)) {\n        var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n        if (isEmpty(channel)) {\n          _ember.default.Logger.warn('No channel for update topic message found. Creating it.', message);\n          channel = this.createChannel(space, message.target['displayName']);\n        }\n\n        var currentTopic = channel.get('topic');\n        var newTopic = message.object.topic;\n\n        channel.set('topic', newTopic);\n\n        if (isPresent(currentTopic) && newTopic !== currentTopic && !channel.get('visible')) {\n          Notification.requestPermission(function () {\n            new Notification(channel.name, {\n              body: 'New Topic: ' + newTopic\n            });\n          });\n        }\n\n        // let notification = Message.create({\n        //   type: 'notification-topic-change',\n        //   date: new Date(message.published),\n        //   nickname: message.actor.displayName,\n        //   content: message.object.topic\n        // });\n\n        // channel.get('messages').pushObject(notification);\n      }\n    },\n\n\n    instantiateChannels: function instantiateChannels(space, channels) {\n      var _this2 = this;\n\n      channels.forEach(function (channelName) {\n        _this2.createChannel(space, channelName);\n      });\n    },\n\n    createChannel: function createChannel(space, channelName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _channel.default.create({\n        space: space,\n        name: channelName,\n        sockethubChannelId: platform.generateChannelId(space, channelName)\n      });\n\n      this.joinChannel(space, channel, \"room\");\n      space.get('channels').pushObject(channel);\n\n      // TODO Do we need this on startup? Could overwrite updates from remote.\n      this.get('storage').saveSpace(space);\n\n      if (channel.get('isLogged')) {\n        this.loadLastMessages(space, channel, _moment.default.utc(), 2).catch(function () {});\n      }\n\n      return channel;\n    },\n\n    loadLastMessages: function loadLastMessages(space, channel, date) {\n      var _this3 = this;\n\n      var maximumDays = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 14;\n\n      var searchUntilDate = void 0;\n      if (channel.get('searchedPreviousLogsUntilDate')) {\n        searchUntilDate = (0, _moment.default)(channel.get('searchedPreviousLogsUntilDate')).subtract(maximumDays, 'days');\n      } else {\n        searchUntilDate = _moment.default.utc().subtract(maximumDays, 'days');\n      }\n\n      if (date.isBefore(searchUntilDate, 'day')) {\n        channel.set('searchedPreviousLogsUntilDate', date);\n        return;\n      }\n\n      return this.loadArchiveMessages(space, channel, date).catch(function () {\n        // didn't find any archive for this day, restart searching for the previous day\n        return _this3.loadLastMessages(space, channel, date.subtract(1, 'day'));\n      });\n    },\n    loadArchiveMessages: function loadArchiveMessages(space, channel, date) {\n      var _this4 = this;\n\n      var logsUrl = _environment.default.publicLogsUrl + '/' + space.get('name').toLowerCase() + '/channels/' + channel.get('slug') + '/';\n      logsUrl += date.format('YYYY/MM/DD');\n\n      return this.get('ajax').request(logsUrl, {\n        type: 'GET',\n        dataType: 'json'\n      }).then(function (archive) {\n        get(archive, 'today.messages').forEach(function (message) {\n          _this4.log('chat_message', message);\n\n          var channelMessage = _message.default.create({\n            type: 'message-chat',\n            date: new Date(message.timestamp),\n            nickname: message.from,\n            content: message.text\n          });\n\n          channel.addMessage(channelMessage);\n        });\n        var previous = get(archive, 'today.previous');\n        channel.set('searchedPreviousLogsUntilDate', _moment.default.utc(previous.replace(/\\//g, '-')));\n      }).catch(function (error) {\n        _this4.log('ajax-error', 'couldn\\'t load archive document', error);\n        throw error;\n      });\n    },\n\n\n    createUserChannel: function createUserChannel(space, userName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _user_channel.default.create({\n        space: space,\n        name: userName,\n        sockethubChannelId: platform.generateChannelId(space, userName)\n      });\n\n      // TODO check if this is necesarry for XMPP,\n      // because for IRC it is not\n      this.joinChannel(space, channel, \"person\");\n      space.get('channels').pushObject(channel);\n\n      return channel;\n    },\n\n    removeChannel: function removeChannel(space, channelName) {\n      var channel = space.get('channels').findBy('name', channelName);\n      this.leaveChannel(space, channel);\n\n      space.get('channels').removeObject(channel);\n\n      this.get('storage').saveSpace(space);\n\n      return channel;\n    },\n\n    getServiceForSockethubPlatform: function getServiceForSockethubPlatform(protocol) {\n      return this.get(protocol.dasherize());\n    },\n\n\n    /*\n     * @private\n     *\n     * Handles completed Sockethub actions:\n     *\n     *     - Successfully joined a channel\n     */\n    handleSockethubCompleted: function handleSockethubCompleted(message) {\n      this.log(message.context + '_completed', message);\n\n      switch (message['@type']) {\n        case 'join':\n          var space = this.get('spaces').findBy('sockethubPersonId', message.actor['@id']);\n\n          // try to find space by older sockethubPersonId\n          if (isEmpty(space)) {\n            space = this.get('spaces').find(function (space) {\n              return space.get('previousSockethubPersonIds').includes(message.actor['@id']);\n            });\n          }\n\n          if (!isEmpty(space)) {\n            this.get(message.context).handleJoinCompleted(space, message);\n          } else {\n            Logger.warn('Could not find space for join message', message);\n          }\n          break;\n      }\n    },\n\n\n    /**\n     * Handles incoming Sockethub messages:\n     * - Attendance list for channel\n     * - Another user joined or left a channel\n     * - Received a channel message (normal or me/action)\n     * - A channel topic was updated\n     * - The username/address changed\n     * @private\n     */\n    handleSockethubMessage: function handleSockethubMessage(message) {\n      this.log(message.context + '_message', 'SH message', message);\n\n      switch (message['@type']) {\n        case 'observe':\n          if (message.object['@type'] === 'attendance') {\n            this.updateChannelUserList(message);\n          }\n          break;\n        case 'join':\n          this.handleChannelJoin(message);\n          break;\n        case 'leave':\n          this.removeUserFromChannelUserList(message);\n          break;\n        case 'send':\n          switch (message.object['@type']) {\n            case 'message':\n            case 'me':\n              this.getServiceForSockethubPlatform(message.context).addMessageToChannel(message);\n              break;\n          }\n          break;\n        case 'update':\n          switch (message.object['@type']) {\n            case 'topic':\n              this.updateChannelTopic(message);\n              break;\n            case 'address':\n              this.updateUsername(message);\n              break;\n            case 'presence':\n              this.get('xmpp').handlePresenceUpdate(message);\n              break;\n            case 'error':\n              Logger.warn('Got error update message', message.actor['@id'], message.object.content);\n              break;\n          }\n          break;\n      }\n    },\n\n\n    /**\n     * Handles the various checks assosciated with channel joins\n     * @private\n     */\n    handleChannelJoin: function handleChannelJoin(message) {\n      if (message.object['@type'] && message.object['@type'] === 'error') {\n        // failed to join a channel\n        var channel = this.getChannel(message.target['@id'], message.actor['@id']);\n        if (isPresent(channel)) {\n          channel.set('connected', false);\n        } else {\n          Logger.warn('Could not find channel for error message', message);\n        }\n      } else {\n        this.addUserToChannelUserList(message);\n      }\n    },\n\n\n    /**\n     * Handles incoming Sockethub errors/failures\n     * @private\n     */\n    handleSockethubFailure: function handleSockethubFailure(message) {\n      this.log('sh_failure', message);\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _get;\n\n      (_get = this.get('logger')).log.apply(_get, arguments);\n    }\n  });\n});","define('hyperchannel/services/ember-elsewhere', ['exports', 'ember-elsewhere/services/ember-elsewhere'], function (exports, _emberElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _emberElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/services/liquid-fire-transitions\", [\"exports\", \"liquid-fire/transition-map\"], function (exports, _transitionMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _transitionMap.default;\n});","define('hyperchannel/services/logger', ['exports', 'ember'], function (exports, _ember) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Service = _ember.default.Service;\n  exports.default = Service.extend({\n    enabled: true,\n\n    allowedTypes: ['connection', 'error', 'join', 'leave', 'message', 'irc_message', 'xmpp_message', 'send', 'xmpp_completed', 'irc_completed', 'sh_completed', 'sh_failure', 'irc', 'xmpp', 'ajax-error', 'chat_message'],\n\n    activeTypes: ['connection', 'error', 'join', 'leave', 'send', 'sh_completed', 'xmpp_completed', 'irc_completed', 'sh_failure', 'irc', 'xmpp', 'message', 'irc_message', 'xmpp_message'],\n\n    log: function log(type) {\n      if (!this.get('allowedTypes').includes(type)) {\n        throw new Error('You specified a unknown type: \"' + type + '\".');\n      }\n\n      if (this.get('activeTypes').includes(type) && this.get('enabled')) {\n        var params = Array.prototype.slice.call(arguments);\n        params[0] = '[' + params[0] + ']';\n        _ember.default.Logger.debug.apply(null, params);\n      }\n    },\n    add: function add(type) {\n      this.get('activeTypes').addObject(type);\n    },\n    remove: function remove(type) {\n      this.get('activeTypes').removeObject(type);\n    },\n    disable: function disable() {\n      this.set('enabled', false);\n    },\n    enable: function enable() {\n      this.set('enabled', true);\n    }\n  });\n});","define('hyperchannel/services/moment', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/services/moment'], function (exports, _ember, _environment, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _moment.default.extend({\n    defaultFormat: _ember.default.get(_environment.default, 'moment.outputFormat')\n  });\n});","define('hyperchannel/services/remotestorage', ['exports', 'ember', 'hyperchannel/models/space', 'npm:remotestoragejs', 'npm:remotestorage-module-kosmos'], function (exports, _ember, _space, _npmRemotestoragejs, _npmRemotestorageModuleKosmos) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _ember.default.Service.extend({\n\n    rsInstance: null,\n\n    rs: function () {\n      if (this.get('rsInstance')) {\n        return this.get('rsInstance');\n      }\n\n      var rs = new _npmRemotestoragejs.default({ modules: [_npmRemotestorageModuleKosmos.default.default] });\n      rs.access.claim('kosmos', 'rw');\n      rs.caching.enable('/kosmos/');\n\n      this.set('rsInstance', rs);\n      return rs;\n    }.property('rsInstance'),\n\n    addDefaultSpace: function addDefaultSpace() {\n      var nickname = window.prompt(\"Choose a nickname\");\n\n      var params = {\n        id: 'freenode',\n        name: 'Freenode',\n        protocol: 'IRC',\n        server: {\n          hostname: 'irc.freenode.net',\n          secure: true,\n          port: 7000,\n          nickname: nickname\n        },\n        channels: ['#hackerbeach', '#kosmos', '#kosmos-dev', '#kosmos-random', '#sockethub']\n      };\n\n      return this.get('rs').kosmos.spaces.store(params).then(function () {\n        _ember.default.Logger.debug('[remotestorage]', 'created/stored default space');\n\n        var channels = params.channels;\n        delete params.channels;\n\n        return { space: _space.default.create(params), channels: channels };\n      });\n    },\n    saveSpace: function saveSpace(space) {\n      return this.get('rs').kosmos.spaces.store(space.serialize()).then(function () {\n        return _ember.default.Logger.debug('[remotestorage]', 'saved space ' + space.get('name') + ' in RS');\n      });\n    },\n    removeSpace: function removeSpace(space) {\n      // TODO this is buggy in the current rs.js beta branch\n      return this.get('rs').kosmos.spaces.remove(space.get('id')).then(function () {\n        return _ember.default.Logger.debug('[remotestorage]', 'removed space ' + space.get('name') + ' from RS');\n      });\n    }\n  });\n});","define('hyperchannel/services/sockethub-irc', ['exports', 'ember', 'hyperchannel/utils/channel-message-from-sockethub-object'], function (exports, _ember, _channelMessageFromSockethubObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var service = _ember.default.inject.service,\n      isEmpty = _ember.default.isEmpty,\n      Logger = _ember.default.Logger;\n\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param {Space} space - space model the activity belongs to\n   * @param {Object} details - the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'irc',\n      actor: space.get('sockethubPersonId')\n    };\n\n    return _ember.default.$.extend({}, baseObject, details);\n  }\n\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n\n  /**\n   * This service provides helpers for SocketHub IRC communications\n   * @module hyperchannel/services/sockethub-irc\n   */\n  exports.default = _ember.default.Service.extend({\n\n    logger: service(),\n    coms: service(),\n\n    /**\n     * - Creates an ActivityStreams person object for\n     *   future use\n     * - Emits credentials for future IRC server messages,\n     *   like e.g. `join`\n     * @public\n     */\n    connect: function connect(space) {\n      var actorObject = {\n        '@id': space.get('sockethubPersonId'),\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      };\n      Logger.debug('actor object', actorObject);\n\n      this.sockethub.ActivityStreams.Object.create(actorObject);\n\n      var credentials = buildActivityObject(space, {\n        object: {\n          '@type': 'credentials',\n          nick: space.get('server.nickname'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          secure: space.get('server.secure')\n        }\n      });\n\n      this.log('irc', 'connecting to IRC network', credentials);\n      this.sockethub.socket.emit('credentials', credentials);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n      if (!isEmpty(channel)) {\n        channel.set('connected', true);\n        this.observeChannel(space, channel);\n      }\n    },\n\n\n    /**\n     * Join a channel/room\n     * @public\n     */\n    join: function join(space, channel, type) {\n      switch (type) {\n        case 'room':\n          this.sockethub.ActivityStreams.Object.create({\n            '@type': type,\n            '@id': channel.get('sockethubChannelId'),\n            displayName: channel.get('name')\n          });\n\n          var joinMsg = buildActivityObject(space, {\n            '@type': 'join',\n            target: channel.get('sockethubChannelId'),\n            object: {}\n          });\n\n          this.log('irc', 'joining channel', joinMsg);\n          this.sockethub.socket.emit('message', joinMsg);\n          break;\n        case 'person':\n          channel.set('connected', true);\n          break;\n      }\n    },\n\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n\n    /**\n     * Send an action chat message to a channel\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content, 'me');\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      var hostname = message.actor['@id'].match(/irc:\\/\\/.+\\@(.+)/)[1];\n      var space = this.get('coms.spaces').findBy('server.hostname', hostname);\n\n      if (isEmpty(space)) {\n        Logger.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message);\n\n      // TODO should check for message and update sent status if exists\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n\n    /**\n     * Leave a channel\n     * @public\n     */\n    leave: function leave(space, channel) {\n      if (!channel.get('isUserChannel')) {\n        // TODO Do we really need to create this room for leaving? It should\n        // already have been created when joining.\n        this.sockethub.ActivityStreams.Object.create({\n          '@type': \"room\",\n          '@id': channel.get('sockethubChannelId'),\n          displayName: channel.get('name')\n        });\n\n        var leaveMsg = buildActivityObject(space, {\n          '@type': 'leave',\n          target: channel.get('sockethubChannelId'),\n          object: {}\n        });\n\n        this.log('leave', 'leaving channel', leaveMsg);\n        this.sockethub.socket.emit('message', leaveMsg);\n      }\n    },\n\n\n    /**\n     * Send a channel topic change\n     * @public\n     */\n    changeTopic: function changeTopic(space, channel, topic) {\n      var topicMsg = buildActivityObject(space, {\n        '@type': 'update',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'topic',\n          topic: topic\n        }\n      });\n\n      this.sockethub.socket.emit('message', topicMsg);\n    },\n\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n\n      this.log('irc', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return 'irc://' + space.get('server.hostname') + '/' + channelName;\n    },\n\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelName = void 0,\n          channel = void 0;\n\n      if (space.get('userNickname') === message.target.displayName) {\n        // direct message\n        targetChannelName = message.actor.displayName || message.actor['@id'];\n\n        channel = space.get('channels').findBy('name', targetChannelName);\n        if (!channel) {\n          channel = this.get('coms').createUserChannel(space, targetChannelName);\n        }\n      } else {\n        // channel message\n        targetChannelName = message.target.displayName;\n\n        channel = space.get('channels').findBy('name', targetChannelName);\n        if (!channel) {\n          channel = this.get('coms').createChannel(space, targetChannelName);\n        }\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @protected\n     */\n    log: function log() {\n      var _get;\n\n      (_get = this.get('logger')).log.apply(_get, arguments);\n    }\n  });\n});","define('hyperchannel/services/sockethub-xmpp', ['exports', 'ember', 'hyperchannel/utils/channel-message-from-sockethub-object'], function (exports, _ember, _channelMessageFromSockethubObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var service = _ember.default.inject.service,\n      isEmpty = _ember.default.isEmpty,\n      Logger = _ember.default.Logger;\n\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param space {Space} space model the activity belongs to\n   * @param details {Object} the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'xmpp',\n      actor: space.get('sockethubPersonId')\n    };\n\n    return _ember.default.$.extend({}, baseObject, details);\n  }\n\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n\n  /**\n   * This service provides helpers for SocketHub XMPP communications\n   * @module hyperchannel/services/sockethub-xmpp\n   */\n  exports.default = _ember.default.Service.extend({\n\n    logger: service(),\n    coms: service(),\n\n    /**\n     * @public\n     */\n    connect: function connect(space) {\n      var actor = space.get('sockethubPersonId');\n\n      this.sockethub.ActivityStreams.Object.create({\n        '@id': actor,\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      });\n\n      var credentialsJob = {\n        actor: actor,\n        context: 'xmpp',\n        object: {\n          '@type': 'credentials',\n          username: space.get('server.username'),\n          password: space.get('server.password'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          resource: 'hyperchannel'\n        }\n      };\n\n      var connectJob = {\n        '@type': 'connect',\n        context: 'xmpp',\n        actor: actor\n      };\n\n      this.log('xmpp', 'connecting to XMPP server...');\n      this.sockethub.socket.emit('credentials', credentialsJob);\n      this.sockethub.socket.emit('message', connectJob);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channelId = message.target['@id'].split('/')[0];\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (!isEmpty(channel)) {\n        channel.set('connected', true);\n      } else {\n        Logger.warn('Could not find channel for join message', message);\n      }\n    },\n\n\n    /**\n     * Join a channel/room\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\".\n     * @public\n     */\n    join: function join(space, channel, type) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@type': type,\n        '@id': channel.get('sockethubChannelId'),\n        displayName: channel.get('name')\n      });\n\n      var joinMsg = buildActivityObject(space, {\n        '@type': 'join',\n        actor: {\n          '@type': 'person',\n          '@id': space.get('sockethubPersonId'),\n          displayName: space.get('server.nickname')\n        },\n        target: {\n          '@id': channel.get('sockethubChannelId'),\n          '@type': type\n        }\n      });\n\n      this.log('xmpp', 'joining channel', joinMsg);\n      this.sockethub.socket.emit('message', joinMsg);\n    },\n\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n    handlePresenceUpdate: function handlePresenceUpdate(message) {\n      if (message.target['@type'] === 'room') {\n        var targetChannelId = message.target['@id'];\n        var space = this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n        var channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (channel) {\n          if (message.object.presence === 'offline') {\n            channel.removeUser(message.actor.displayName);\n          } else {\n            channel.addUser(message.actor.displayName);\n          }\n        }\n      } else {\n        Logger.debug('Presence update:', message.actor['@id'], message.object.presence, message.object.status);\n      }\n    },\n\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      if (isEmpty(message.object.content)) {\n        return;\n      }\n\n      var space = this.getSpaceForMessage(message);\n\n      if (isEmpty(space)) {\n        Logger.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message);\n\n      // TODO should check for message and update sent status if exists\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return channelName;\n    },\n\n\n    /**\n     * Get the space for a given message.\n     *\n     * @param {Object} message\n     * @returns {Space} space\n     * @public\n     */\n    getSpaceForMessage: function getSpaceForMessage(message) {\n      var targetChannelId = message.target['@id'];\n\n      if (message.target['@type'] === 'room') {\n        return this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n      } else {\n        return this.get('coms.spaces').findBy('sockethubPersonId', targetChannelId);\n      }\n    },\n\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelId = message.target['@id'];\n      var channel = void 0;\n\n      if (message.target['@type'] === 'room') {\n        channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n        if (!channel) {\n          channel = this.get('coms').createChannel(space, targetChannelId);\n        }\n      } else {\n        channel = space.get('channels').findBy('sockethubChannelId', message.actor['@id']);\n        if (!channel) {\n          channel = this.get('coms').createUserChannel(space, message.actor['@id']);\n        }\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _get;\n\n      (_get = this.get('logger')).log.apply(_get, arguments);\n    }\n  });\n});","define('hyperchannel/storages/user-settings', ['exports', 'ember-local-storage/local/object'], function (exports, _object) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Storage = _object.default.extend();\n\n  // Uncomment if you would like to set initialState\n  Storage.reopenClass({\n    initialState: function initialState() {\n      return {\n        nickname: null,\n        currentSpace: 'freenode',\n        currentChannel: 'kosmos'\n      };\n    }\n  });\n\n  exports.default = Storage;\n});","define(\"hyperchannel/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1H0X/hn5\", \"block\": \"{\\\"statements\\\":[[6,[\\\"app-container\\\"],null,[[\\\"showGlobalMenu\\\",\\\"showChannelMenu\\\"],[[28,[\\\"showGlobalMenu\\\"]],[28,[\\\"showChannelMenu\\\"]]]],{\\\"statements\\\":[[0,\\\"  \\\"],[11,\\\"div\\\",[]],[15,\\\"id\\\",\\\"global\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"header\\\",[]],[15,\\\"id\\\",\\\"sitename\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"h1\\\",[]],[13],[0,\\\"Kosmos\\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n    \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"main\\\"],[13],[0,\\\"\\\\n      \\\"],[11,\\\"nav\\\",[]],[15,\\\"id\\\",\\\"channels\\\"],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"channel-nav\\\"],null,[[\\\"spaces\\\",\\\"joinChannel\\\"],[[28,[\\\"spaces\\\"]],[33,[\\\"route-action\\\"],[\\\"openNewChannel\\\"],null]]]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n  \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[1,[26,[\\\"outlet\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null],[0,\\\"\\\\n\\\"],[1,[26,[\\\"modal-target\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/application.hbs\" } });\n});","define(\"hyperchannel/templates/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"QwPHqcaX\", \"block\": \"{\\\"statements\\\":[[11,\\\"p\\\",[]],[13],[0,\\\"[index.hbs]\\\"],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/index.hbs\" } });\n});","define(\"hyperchannel/templates/settings\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ZTtH8R0L\", \"block\": \"{\\\"statements\\\":[[11,\\\"section\\\",[]],[15,\\\"id\\\",\\\"settings\\\"],[13],[0,\\\"\\\\n  \\\"],[11,\\\"h2\\\",[]],[13],[0,\\\"Settings\\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[11,\\\"div\\\",[]],[15,\\\"class\\\",\\\"content\\\"],[13],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Spaces\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"model\\\",\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"h3\\\",[]],[13],[1,[28,[\\\"space\\\",\\\"name\\\"]],false],[14],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"removeSpace\\\",[28,[\\\"space\\\"]]]],[13],[0,\\\"delete\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"hr\\\",[]],[13],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"space\\\"]},null],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Presets\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"each\\\"],[[28,[\\\"model\\\",\\\"spacePresets\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[11,\\\"h3\\\",[]],[13],[1,[28,[\\\"spacePreset\\\",\\\"name\\\"]],false],[14],[0,\\\"\\\\n      \\\"],[11,\\\"button\\\",[]],[15,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addSpaceFromPreset\\\",[28,[\\\"spacePreset\\\"]]]],[13],[0,\\\"add\\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"hr\\\",[]],[13],[14],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[\\\"spacePreset\\\"]},null],[0,\\\"\\\\n    \\\"],[11,\\\"h3\\\",[]],[13],[0,\\\"Add new space\\\"],[14],[0,\\\"\\\\n    \\\"],[11,\\\"form\\\",[]],[15,\\\"name\\\",\\\"add-space\\\"],[5,[\\\"action\\\"],[[28,[null]],\\\"addSpace\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[13],[0,\\\"\\\\n      \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"newSpace\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"newSpace\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"newSpace\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[28,[\\\"newSpace\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled\\\"]]],false],[0,\\\"\\\\n        \\\"],[11,\\\"label\\\",[]],[15,\\\"for\\\",\\\"tls-enabled\\\"],[13],[0,\\\"Secure (TLS)\\\"],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"placeholder\\\"],[[28,[\\\"newSpace\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"placeholder\\\"],[[28,[\\\"newSpace\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n        \\\"],[1,[33,[\\\"input\\\"],null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[28,[\\\"newSpace\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n      \\\"],[11,\\\"p\\\",[]],[13],[0,\\\"\\\\n        \\\"],[11,\\\"input\\\",[]],[15,\\\"type\\\",\\\"submit\\\"],[15,\\\"value\\\",\\\"Save\\\"],[13],[14],[0,\\\"\\\\n      \\\"],[14],[0,\\\"\\\\n    \\\"],[14],[0,\\\"\\\\n\\\\n  \\\"],[14],[0,\\\"\\\\n\\\"],[14],[0,\\\"\\\\n\\\\n\\\"],[6,[\\\"if\\\"],[[28,[\\\"showSpaceSettingModal\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[33,[\\\"to-elsewhere\\\"],null,[[\\\"named\\\",\\\"send\\\"],[\\\"modal\\\",[33,[\\\"hash\\\"],null,[[\\\"body\\\",\\\"onOutsideClick\\\"],[[33,[\\\"component\\\"],[\\\"space-setting-modal\\\"],[[\\\"settings\\\",\\\"onSave\\\",\\\"onCancel\\\"],[[28,[\\\"selectedSpacePreset\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"saveSpace\\\"],null],[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]],[33,[\\\"action\\\"],[[28,[null]],[33,[\\\"mut\\\"],[[28,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[]},null]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/settings.hbs\" } });\n});","define(\"hyperchannel/templates/space/channel\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JaFksbt/\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"channel-container\\\"],null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\",\\\"menu\\\"],[[28,[\\\"model\\\"]],[28,[\\\"newMessage\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"sendMessage\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"executeCommand\\\"],null],[33,[\\\"route-action\\\"],[\\\"menu\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/space/channel.hbs\" } });\n});","define(\"hyperchannel/templates/space/user_channel\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"OYiIDheE\", \"block\": \"{\\\"statements\\\":[[1,[33,[\\\"channel-container\\\"],null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\"],[[28,[\\\"model\\\"]],[28,[\\\"newMessage\\\"]],[33,[\\\"action\\\"],[[28,[null]],\\\"sendMessage\\\"],null],[33,[\\\"action\\\"],[[28,[null]],\\\"executeCommand\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"locals\\\":[],\\\"named\\\":[],\\\"yields\\\":[],\\\"hasPartials\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/space/user_channel.hbs\" } });\n});","define('hyperchannel/transitions/cross-fade', ['exports', 'liquid-fire/transitions/cross-fade'], function (exports, _crossFade) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _crossFade.default;\n    }\n  });\n});","define('hyperchannel/transitions/default', ['exports', 'liquid-fire/transitions/default'], function (exports, _default) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _default.default;\n    }\n  });\n});","define('hyperchannel/transitions/explode', ['exports', 'liquid-fire/transitions/explode'], function (exports, _explode) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _explode.default;\n    }\n  });\n});","define('hyperchannel/transitions/fade', ['exports', 'liquid-fire/transitions/fade'], function (exports, _fade) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _fade.default;\n    }\n  });\n});","define('hyperchannel/transitions/flex-grow', ['exports', 'liquid-fire/transitions/flex-grow'], function (exports, _flexGrow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _flexGrow.default;\n    }\n  });\n});","define('hyperchannel/transitions/fly-to', ['exports', 'liquid-fire/transitions/fly-to'], function (exports, _flyTo) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _flyTo.default;\n    }\n  });\n});","define('hyperchannel/transitions/move-over', ['exports', 'liquid-fire/transitions/move-over'], function (exports, _moveOver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _moveOver.default;\n    }\n  });\n});","define('hyperchannel/transitions/scale', ['exports', 'liquid-fire/transitions/scale'], function (exports, _scale) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _scale.default;\n    }\n  });\n});","define('hyperchannel/transitions/scroll-then', ['exports', 'liquid-fire/transitions/scroll-then'], function (exports, _scrollThen) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _scrollThen.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-down', ['exports', 'liquid-fire/transitions/to-down'], function (exports, _toDown) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toDown.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-left', ['exports', 'liquid-fire/transitions/to-left'], function (exports, _toLeft) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toLeft.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-right', ['exports', 'liquid-fire/transitions/to-right'], function (exports, _toRight) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toRight.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-up', ['exports', 'liquid-fire/transitions/to-up'], function (exports, _toUp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toUp.default;\n    }\n  });\n});","define('hyperchannel/transitions/wait', ['exports', 'liquid-fire/transitions/wait'], function (exports, _wait) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _wait.default;\n    }\n  });\n});","define('hyperchannel/utils/channel-message-from-sockethub-object', ['exports', 'hyperchannel/models/message'], function (exports, _message) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = channelMessageFromSockethubObject;\n  function channelMessageFromSockethubObject(message) {\n    var channelMessage = _message.default.create({\n      type: message.object['@type'] === 'me' ? 'message-chat-me' : 'message-chat',\n      date: new Date(message.published),\n      nickname: message.actor.displayName || message.actor['@id'],\n      content: message.object.content\n    });\n\n    return channelMessage;\n  }\n});","\n","define('hyperchannel/config/environment', ['ember'], function(Ember) {\n  var prefix = 'hyperchannel';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"hyperchannel/app\")[\"default\"].create({\"name\":\"hyperchannel\",\"version\":\"0.2.0+192410c7\"});\n}\n"]}