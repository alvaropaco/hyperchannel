{"version":3,"sources":["vendor/ember-cli/app-prefix.js","hyperchannel/app.js","hyperchannel/components/-lf-get-outlet-state.js","hyperchannel/components/app-container/component.js","hyperchannel/components/app-container/template.js","hyperchannel/components/channel-container/component.js","hyperchannel/components/channel-container/template.js","hyperchannel/components/channel-input-field/component.js","hyperchannel/components/channel-nav/component.js","hyperchannel/components/channel-nav/template.js","hyperchannel/components/date-headline/component.js","hyperchannel/components/date-headline/template.js","hyperchannel/components/from-elsewhere.js","hyperchannel/components/illiquid-model.js","hyperchannel/components/link-to-username/component.js","hyperchannel/components/link-to-username/template.js","hyperchannel/components/liquid-bind.js","hyperchannel/components/liquid-child.js","hyperchannel/components/liquid-container.js","hyperchannel/components/liquid-if.js","hyperchannel/components/liquid-measured.js","hyperchannel/components/liquid-outlet.js","hyperchannel/components/liquid-spacer.js","hyperchannel/components/liquid-sync.js","hyperchannel/components/liquid-unless.js","hyperchannel/components/liquid-versions.js","hyperchannel/components/message-chat-me/component.js","hyperchannel/components/message-chat-me/template.js","hyperchannel/components/message-chat/component.js","hyperchannel/components/message-chat/template.js","hyperchannel/components/modal-target/component.js","hyperchannel/components/modal-target/template.js","hyperchannel/components/multiple-from-elsewhere.js","hyperchannel/components/notification-topic-change/component.js","hyperchannel/components/notification-topic-change/template.js","hyperchannel/components/space-setting-modal/component.js","hyperchannel/components/space-setting-modal/template.js","hyperchannel/components/to-elsewhere.js","hyperchannel/components/web-push-subscription/component.js","hyperchannel/components/web-push-subscription/template.js","hyperchannel/controllers/application.js","hyperchannel/controllers/index.js","hyperchannel/controllers/settings.js","hyperchannel/controllers/space.js","hyperchannel/controllers/space/base_channel.js","hyperchannel/controllers/space/channel.js","hyperchannel/controllers/space/user_channel.js","hyperchannel/ember-gestures/recognizers/pan.js","hyperchannel/ember-gestures/recognizers/pinch.js","hyperchannel/ember-gestures/recognizers/press.js","hyperchannel/ember-gestures/recognizers/rotate.js","hyperchannel/ember-gestures/recognizers/swipe.js","hyperchannel/ember-gestures/recognizers/swipeleft.js","hyperchannel/ember-gestures/recognizers/swiperight.js","hyperchannel/ember-gestures/recognizers/tap.js","hyperchannel/ember-gestures/recognizers/vertical-pan.js","hyperchannel/ember-gestures/recognizers/vertical-swipe.js","hyperchannel/event_dispatcher.js","hyperchannel/helpers/app-version.js","hyperchannel/helpers/is-after.js","hyperchannel/helpers/is-before.js","hyperchannel/helpers/is-between.js","hyperchannel/helpers/is-same-or-after.js","hyperchannel/helpers/is-same-or-before.js","hyperchannel/helpers/is-same.js","hyperchannel/helpers/lf-lock-model.js","hyperchannel/helpers/lf-or.js","hyperchannel/helpers/moment-add.js","hyperchannel/helpers/moment-calendar.js","hyperchannel/helpers/moment-diff.js","hyperchannel/helpers/moment-duration.js","hyperchannel/helpers/moment-format.js","hyperchannel/helpers/moment-from-now.js","hyperchannel/helpers/moment-from.js","hyperchannel/helpers/moment-subtract.js","hyperchannel/helpers/moment-to-date.js","hyperchannel/helpers/moment-to-now.js","hyperchannel/helpers/moment-to.js","hyperchannel/helpers/moment-unix.js","hyperchannel/helpers/moment.js","hyperchannel/helpers/now.js","hyperchannel/helpers/route-action.js","hyperchannel/helpers/unix.js","hyperchannel/helpers/utc.js","hyperchannel/initializers/app-version.js","hyperchannel/initializers/container-debug-adapter.js","hyperchannel/initializers/ember-hammertime.js","hyperchannel/initializers/export-application-global.js","hyperchannel/initializers/hammer.js","hyperchannel/initializers/liquid-fire.js","hyperchannel/initializers/sockethub.js","hyperchannel/instance-initializers/ember-gestures.js","hyperchannel/instance-initializers/remotestorage.js","hyperchannel/models/base_channel.js","hyperchannel/models/channel.js","hyperchannel/models/message.js","hyperchannel/models/space.js","hyperchannel/models/user_channel.js","hyperchannel/resolver.js","hyperchannel/router.js","hyperchannel/routes/application.js","hyperchannel/routes/index.js","hyperchannel/routes/settings.js","hyperchannel/routes/space.js","hyperchannel/routes/space/base_channel.js","hyperchannel/routes/space/channel.js","hyperchannel/routes/space/user_channel.js","hyperchannel/services/-gestures.js","hyperchannel/services/ajax.js","hyperchannel/services/coms.js","hyperchannel/services/ember-elsewhere.js","hyperchannel/services/liquid-fire-transitions.js","hyperchannel/services/logger.js","hyperchannel/services/moment.js","hyperchannel/services/remotestorage.js","hyperchannel/services/sockethub-irc.js","hyperchannel/services/sockethub-xmpp.js","hyperchannel/storages/user-settings.js","hyperchannel/templates/application.js","hyperchannel/templates/settings.js","hyperchannel/templates/space/channel.js","hyperchannel/templates/space/index.js","hyperchannel/templates/space/user_channel.js","hyperchannel/transitions/cross-fade.js","hyperchannel/transitions/default.js","hyperchannel/transitions/explode.js","hyperchannel/transitions/fade.js","hyperchannel/transitions/flex-grow.js","hyperchannel/transitions/fly-to.js","hyperchannel/transitions/move-over.js","hyperchannel/transitions/scale.js","hyperchannel/transitions/scroll-then.js","hyperchannel/transitions/to-down.js","hyperchannel/transitions/to-left.js","hyperchannel/transitions/to-right.js","hyperchannel/transitions/to-up.js","hyperchannel/transitions/wait.js","hyperchannel/utils/channel-message-from-sockethub-object.js","hyperchannel/utils/url-base64-to-uint8-array.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"names":["define","_exports","_resolver","_emberLoadInitializers","_environment","Object","defineProperty","value","default","App","Ember","Application","extend","modulePrefix","podModulePrefix","Resolver","_default","_lfGetOutletState","enumerable","get","_recognizers","isElementOf","id","element","$","parents","concat","length","Component","tagName","classNames","classNameBindings","recognizers","managerOptions","computed","domEvents","touchAction","inputClass","Hammer","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","swipeLeft","this","set","swipeRight","tap","e","showGlobalMenu","target","HTMLBars","template","block","meta","moduleName","scrollToBottom","animate","scrollTop","height","elementId","newMessage","channel","scrollingDisabled","coms","inject","service","messagesUpdated","observer","run","scheduleOnce","didInsertElement","_super","apply","arguments","document","getElementById","on","focusMessageInputField","focus","actions","processMessageOrCommand","substr","onCommand","onMessage","menu","which","what","loadPreviousMessages","_this","loadLastMessages","catch","finally","addUsernameMentionToMessage","username","msg","match","RegExp","TextField","keyUp","ev","altKey","key","_insertAtCaret","myValue","el","selection","createRange","text","selectionStart","startPos","endPos","selectionEnd","substring","_moment","updateInterval","headline","date","scheduleUpdate","environment","later","notifyPropertyChange","isSame","subtract","toLocaleDateString","_fromElsewhere","_illiquidModel","roles","init","@","%","+","role","isPresent","usernameWithoutPrefix","regex","keys","join","replace","_liquidBind","_liquidChild","_liquidContainer","_liquidIf","_liquidMeasured","measure","_liquidOutlet","_liquidSpacer","_liquidSync","_liquidUnless","_liquidVersions","_component","message","datetime","format","dateTitle","formattedContent","out","content","linkifyStr","linkAttributes","rel","validate","url","test","email","String","htmlSafe","usernameClick","onUsernameClick","modalAnimation","lookup","call","pick","use","maxOpacity","outsideClick","modal","onOutsideClick","_multipleFromElsewhere","_space","settings","space","create","setProperties","serialize","save","onSave","cancel","onCancel","_toElsewhere","_urlBase64ToUint8Array","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","botkaURL","subscribed","webPushBaseURL","navigator","serviceWorker","ready","registration","pushManager","getSubscription","subscription","subscribe","_this2","fn","_ref","regeneratorRuntime","mark","_callee","response","vapidPublicKey","convertedVapidKey","wrap","_context","prev","next","fetch","sent","abrupt","userVisibleOnly","applicationServerKey","stop","self","args","err","undefined","_x","bind","console","debug","endpoint","method","headers","Content-type","body","JSON","stringify","user","unsubscribe","_this3","Controller","spaces","alias","showChannelMenu","application","controller","storage","newSpace","selectedSpacePreset","showSpaceSettingModal","notEmpty","addSpaceFromPreset","preset","saveSpace","connectAndAddSpace","_message","createMessage","type","Date","nickname","sendMessage","transferMessage","model","pushObject","executeCommand","commandText","commandSplitted","split","command","includes","toLowerCase","send","slice","warn","joinCommand","createChannel","transitionToRoute","partCommand","channelName","removeChannel","lastChannel","leaveCommand","helpCommand","meCommand","transferMeMessage","msgCommand","shift","createUserChannel","topicCommand","topic","changeTopic","_base_channel","_pan","_pinch","_press","_rotate","_swipe","include","exclude","options","threshold","direction","DIRECTION_LEFT","eventName","recognizer","DIRECTION_RIGHT","_tap","_verticalPan","_verticalSwipe","_event_dispatcher","assign","merge","gestures","emberUseCapture","removeTracking","useFastPaths","useCapture","_regexp","appVersion","_","hash","version","APP","versionOnly","hideSha","shaOnly","hideVersion","showExtended","versionExtendedRegExp","versionRegExp","shaRegExp","Helper","helper","_isAfter","_isBefore","_isBetween","_isSameOrAfter","_isSameOrBefore","_isSame","_lfLockModel","lfLockModel","_lfOr","lfOr","_momentAdd","_momentCalendar","_momentDiff","_momentDuration","_momentFormat","_momentFromNow","_momentFrom","_momentSubtract","_momentToDate","_momentToNow","_momentTo","_unix","_now","_routeAction","_utc","utc","_initializerFactory","name","initialize","_containerDebugAdapter","app","register","exportApplicationGlobal","theGlobal","window","global","globalName","classify","reopen","willDestroy","defaults","cssProps","userSelect","_emberInternals","_velocityExt","sockethub","SockethubClient","io","sockethubURL","path","instantiate","singleton","instance","getOwner","appInstance","remoteStorage","forEach","evt","userList","messages","connected","sockethubChannelId","unreadMessages","unreadMentions","visible","isLogged","loggedChannel","find","slug","unreadMessagesClass","sortedMessages","sortBy","sortedUserList","sort","a","b","localeCompare","addDateHeadline","headlineDate","startOf","toDate","toString","dateMessage","addMessage","addUser","removeUser","removeObject","searchedPreviousLogsUntilDate","formattedTopic","defaultProtocol","protocol","server","channels","previousSockethubPersonIds","channelSorting","sortedChannels","hostname","port","secure","password","nickServ","channelNames","mapBy","sockethubChannelIds","loggedChannels","userNickname","updateUsername","sockethubPersonId","personID","serialized","dasherize","parseInt","prop","isUserChannel","_emberResolver","Router","location","locationType","rootURL","map","route","Route","logger","beforeModel","setupListeners","instantiateSpacesAndChannels","menuProp","capitalize","toggleProperty","openNewChannel","prompt","isEmpty","transitionTo","_emberLocalStorage","userSettings","storageFor","redirect","currentSpace","defaultSpaceId","currentChannel","kosmos","getAll","res","col","push","RSVP","spacePresets","setupController","addSpace","modelFor","removeSpace","params","findBy","createChannelOrUserChannel","innerWidth","didTransition","setEach","_gestures","_ajax","_channel","_user_channel","_typeof","obj","Symbol","iterator","constructor","prototype","Service","ajax","irc","xmpp","socket","handleSockethubCompleted","handleSockethubMessage","handleSockethubFailure","rs","spaceData","addDefaultSpace","data","instantiateChannels","log","connectServer","getServiceForSockethubPlatform","connect","joinChannel","@id","@type","displayName","leaveChannel","leave","updateChannelUserList","context","getChannelById","actor","getChannel","Array","isArray","object","members","addUserToChannelUserList","removeUserFromChannelUserList","channelId","personId","actorId","updateChannelTopic","currentTopic","newTopic","Notification","requestPermission","platform","generateChannelId","searchUntilDate","maximumDays","isBefore","loadArchiveMessages","_this4","logsUrl","publicLogsUrl","request","dataType","archive","channelMessage","timestamp","from","previous","userName","handleJoinCompleted","handleChannelJoin","addMessageToChannel","handlePresenceUpdate","_this$logger","_emberElsewhere","_transitionMap","enabled","allowedTypes","activeTypes","Error","add","addObject","remove","disable","enable","defaultFormat","_npmRemotestoragejs","_npmRemotestorageModuleKosmos","modules","access","claim","caching","spaceConfig","s","store","_channelMessageFromSockethubObject","buildActivityObject","details","baseObject","buildMessageObject","actorObject","ActivityStreams","credentials","nick","emit","observeChannel","joinMsg","getChannelForMessage","leaveMsg","topicMsg","observeMsg","targetChannelName","credentialsJob","resource","connectJob","targetChannelId","presence","status","getSpaceForMessage","_object","Storage","reopenClass","initialState","_crossFade","_explode","_fade","_flexGrow","_flyTo","_moveOver","_scale","_scrollThen","_toDown","_toLeft","_toRight","_toUp","_wait","published","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","i","charCodeAt","metaName","prefix","rawConfig","querySelector","getAttribute","exports","parse","unescape","runningTests","require"],"mappings":"AAAA;ACAAA,OAAA,mBAAA,CAAA,UAAA,wBAAA,0BAAA,mCAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAC,EAAAC,MAAAC,YAAAC,OAAA,CACAC,aAAAT,EAAAI,QAAAK,aACAC,gBAAAV,EAAAI,QAAAM,gBACAC,SAAAb,EAAAM,WAEA,EAAAL,EAAAK,SAAAC,EAAAL,EAAAI,QAAAK;AACA,IAAAG,EAAAP;AACAR,EAAAO,QAAAQ,ICdAhB,OAAA,+CAAA,CAAA,UAAA,+CAAA,SAAAC,EAAAgB,GAGAZ,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAF,EAAAT,aCTAR,OAAA,kDAAA,CAAA,UAAA,qCAAA,SAAAC,EAAAmB,GASA,SAAAC,EAAAC,EAAAC,GACA,OAAAA,EAAAD,KAAAA,GAAAZ,MAAAc,EAAAD,GAAAE,QAAA,IAAAC,OAAAJ,IAAAK,OAAA,EAPAtB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAOA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAAQ,EAAAZ,QAAA,CACAqB,QAAA,MACAC,WAAA,CAAA,iBACAC,kBAAA,CAAA,kCAAA,qCACAC,YAAA,2BAIAC,eAAAvB,MAAAwB,SAAA,GAAA,WACA,MAAA,CACAC,WAAA,EACAC,YAAA,OACAC,WAAAC,OAAAC,uBAAAD,OAAAE,kBAAAF,OAAAG,cAGAC,UAAA,WACAC,KAAAC,IAAA,kBAAA,IAEAC,WAAA,WACAF,KAAAC,IAAA,kBAAA,IAEAE,IAAA,SAAAC,IACAJ,KAAAK,gBAAA3B,EAAA,iBAAA0B,EAAAE,SAAA5B,EAAA,SAAA0B,EAAAE,SACAN,KAAAC,IAAA,kBAAA;AAKA3C,EAAAO,QAAAQ,ICzCAhB,OAAA,iDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,2EACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,sDAAA,CAAA,WAAA,SAAAC,GASA,SAAAsD,IACA7C,MAAAc,EAAA,oBAAAgC,QAAA,CACAC,UAAA/C,MAAAc,EAAA,uBAAAkC,UACA,OATArD,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AASA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACA+C,UAAA,UACAC,WAAA,GACAC,QAAA,KACAC,mBAAA,EACAC,KAAArD,MAAAsD,OAAAC,UACAC,gBAAAxD,MAAAyD,SAAA,sBAAA,WACAxB,KAAAmB,mBACApD,MAAA0D,IAAAC,aAAA,cAAAd,KAGAe,iBAAA,WACA3B,KAAA4B,OAAAC,MAAA7B,KAAA8B,WAEA/D,MAAA0D,IAAAC,aAAA,cAAAd,GAIA7C,MAAA0D,IAAAC,aAAA,cAAA,WACA/B,OAAAoC,SAAAC,eAAA,oBAAAC,GAAA,QAAA,iBAGAC,uBAAA,WACAlC,KAAAnB,EAAA,kBAAAL,IAAA,GACA2D,SAEAC,QAAA,CACAC,wBAAA,WACA,MAAArC,KAAAiB,WAAAqB,OAAA,EAAA,GACAtC,KAAAuC,UAAAvC,KAAAiB,YAEAjB,KAAAwC,UAAAxC,KAAAiB,aAGAwB,KAAA,SAAAC,EAAAC,GACA3C,KAAAyC,KAAAC,EAAAC,IAEAC,qBAAA,WACA,IAAAC,EAAA7C;AAEAA,KAAAC,IAAA,qBAAA,GACAD,KAAAoB,KAAA0B,iBAAA9C,KAAAxB,IAAA,iBAAAwB,KAAAkB,QAAAlB,KAAAxB,IAAA,0CAAAuE,MAAA,cACAC,QAAA,WACAH,EAAA5C,IAAA,qBAAA,MAGAgD,4BAAA,SAAAC,GACA,IAAAC,EAAAnD,KAAAiB;AAEAkC,EAAAC,MAAA,IAAAC,OAAA,IAAAtE,OAAAmE,MACAlD,KAAAC,IAAA,aAAA,GAAAlB,OAAAmE,EAAA,MAAAnE,OAAAoE,IAGAnD,KAAAkC;AAKA5E,EAAAO,QAAAQ,ICzEAhB,OAAA,qDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,m7HACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,wDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAuF,UAAArF,OAAA,CACAsF,MAAA,SAAAC,GAEA,GAAAA,EAAAC,OACA,OAAAD,EAAAE,KACA,IAAA,IACA1D,KAAA2D,eAAA,OAMAA,eAAA,SAAAC,GACA,IAAAC,EAAA7D,KAAAnB,IAAAL,IAAA;AAEA,GAAAuD,SAAA+B,UACAD,EAAA1B,SACA0B,EAAA9B,SAAA+B,UAAAC,eACAC,KAAAJ,EACAC,EAAA1B;KACA,GAAA0B,EAAAI,gBAAA,MAAAJ,EAAAI,eAAA,CACA,IAAAC,EAAAL,EAAAI,eACAE,EAAAN,EAAAO,aACAtD,EAAA+C,EAAA/C;AACA+C,EAAAjG,MAAAiG,EAAAjG,MAAAyG,UAAA,EAAAH,GAAAN,EAAAC,EAAAjG,MAAAyG,UAAAF,EAAAN,EAAAjG,MAAAoB,QACA6E,EAAA1B,QACA0B,EAAAI,eAAAC,EAAAN,EAAA5E,OACA6E,EAAAO,aAAAF,EAAAN,EAAA5E,OACA6E,EAAA/C,UAAAA,OAEA+C,EAAAjG,OAAAgG,EACAC,EAAA1B;AAKA7E,EAAAO,QAAAQ,IC5CAhB,OAAA,gDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACAiB,QAAA;AAGA5B,EAAAO,QAAAQ,ICZAhB,OAAA,+CAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,m2CACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,kDAAA,CAAA,UAAA,SAAA,mCAAA,SAAAC,EAAAgH,EAAA7G,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACAkB,WAAA,CAAA,iBACAoF,eAAA,KAEAC,SAAAzG,MAAAwB,SAAA,eAAA,WACA,IAAAsD,EAAA7C,KAEAyE,GAAA,EAAAH,EAAAzG,SAAAmC,KAAAxB,IAAA,iBAEAkG,EAAA,WAEA,aAAAjH,EAAAI,QAAA8G,aACA5G,MAAA0D,IAAAmD,MAAA,WACA/B,EAAAgC,qBAAA,iBACAhC,EAAA0B;AAIA,OAAAE,EAAAK,QAAA,EAAAR,EAAAzG,WAAA,QACA6G,IACA,SAGAD,EAAAK,QAAA,EAAAR,EAAAzG,WAAAkH,SAAA,EAAA,OAAA,QACAL,IACA,aAGA1E,KAAAxB,IAAA,gBAAAwG;AAIA1H,EAAAO,QAAAQ,ICxCAhB,OAAA,iDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,sGACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,yCAAA,CAAA,UAAA,6CAAA,SAAAC,EAAA2H,GAGAvH,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAyG,EAAApH,aCTAR,OAAA,yCAAA,CAAA,UAAA,yCAAA,SAAAC,EAAA4H,GAGAxH,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA0G,EAAArH,aCTAR,OAAA,qDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACAiF,SAAA,KACAiC,MAAA,KACAC,KAAA,WACApF,KAAA4B,OAAAC,MAAA7B,KAAA8B,WAEA9B,KAAAC,IAAA,QAAA,CACAoF,IAAA,KACAC,IAAA,UACAC,IAAA,WAGAC,KAAAzH,MAAAwB,SAAA,WAAA,QAAA,WACA,IAAAiG,EAAAxF,KAAAmF,MAAAnF,KAAAkD,SAAA;AAEA,OAAAnF,MAAA0H,UAAAD,GACAA,EAGA,WAEAE,sBAAA3H,MAAAwB,SAAA,WAAA,QAAA,WACA,IAAAoG,EAAAtC,OAAA,OAAAtE,OAAArB,OAAAkI,KAAA5F,KAAAmF,OAAAU,KAAA,MAAA;AACA,OAAA7F,KAAAkD,SAAA4C,QAAAH,EAAA;AAIArI,EAAAO,QAAAQ,ICnCAhB,OAAA,oDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,0NACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,sCAAA,CAAA,UAAA,sCAAA,SAAAC,EAAAyI,GAGArI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAuH,EAAAlI,aCTAR,OAAA,uCAAA,CAAA,UAAA,uCAAA,SAAAC,EAAA0I,GAGAtI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAwH,EAAAnI,aCTAR,OAAA,2CAAA,CAAA,UAAA,2CAAA,SAAAC,EAAA2I,GAGAvI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAyH,EAAApI,aCTAR,OAAA,oCAAA,CAAA,UAAA,oCAAA,SAAAC,EAAA4I,GAGAxI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA0H,EAAArI,aCTAR,OAAA,0CAAA,CAAA,UAAA,0CAAA,SAAAC,EAAA6I,GAGAzI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA2H,EAAAtI,WAGAH,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA2H,EAAAC,aCfA/I,OAAA,wCAAA,CAAA,UAAA,wCAAA,SAAAC,EAAA+I,GAGA3I,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA6H,EAAAxI,aCTAR,OAAA,wCAAA,CAAA,UAAA,wCAAA,SAAAC,EAAAgJ,GAGA5I,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA8H,EAAAzI,aCTAR,OAAA,sCAAA,CAAA,UAAA,sCAAA,SAAAC,EAAAiJ,GAGA7I,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA+H,EAAA1I,aCTAR,OAAA,wCAAA,CAAA,UAAA,wCAAA,SAAAC,EAAAkJ,GAGA9I,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAgI,EAAA3I,aCTAR,OAAA,0CAAA,CAAA,UAAA,0CAAA,SAAAC,EAAAmJ,GAGA/I,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAiI,EAAA5I,aCTAR,OAAA,oDAAA,CAAA,UAAA,kDAAA,SAAAC,EAAAoJ,GAGAhJ,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAqI,EAAA7I,QAAAI,OAAA,CACAkB,WAAA,CAAA,eAAA;AAGA7B,EAAAO,QAAAQ,ICZAhB,OAAA,mDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,uRACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,iDAAA,CAAA,UAAA,UAAA,SAAAC,EAAAgH,GAGA5G,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAGA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACAiB,QAAA,MACAC,WAAA,CAAA,gBACAwH,QAAA,KACAC,SAAA7I,MAAAwB,SAAA,eAAA,WACA,OAAA,EAAA+E,EAAAzG,SAAAmC,KAAAxB,IAAA,iBAAAqI,OAAA,wBAEAC,UAAA/I,MAAAwB,SAAA,eAAA,WACA,OAAA,EAAA+E,EAAAzG,SAAAmC,KAAAxB,IAAA,iBAAAqI,OAAA,2BAEAE,iBAAAhJ,MAAAwB,SAAA,kBAAA,WACA,IACAyH,EADAC,EAAAjH,KAAAxB,IAAA;AAwBA,OADAwI,GAnBAA,EADAC,EAAA7D,MAAA,wCACA,gBAAArE,OAAAkI,EAAA,8CAAA,aAAAlI,OAAAkI,EAAA,kCAAAlI,OAAAkI,EAAA,MAAA,OAGAC,WAAAD,EAAA,CACAE,eAAA,CACAC,IAAA,qBAEAC,SAAA,CACAC,IAAA,SAAA1J,GACA,MAAA,iBAAA2J,KAAA3J,IAEA4J,MAAA,WACA,OAAA,OAOA1B,QAAA,eAAA,2BAAAA,QAAA,gBAAA,eAAAA,QAAA,UAAA,uBAAAA,QAAA,UAAA,yBAAAA,QAAA,UAAA,WACA/H,MAAA0J,OAAAC,SAAAV,KAEA5E,QAAA,CACAuF,cAAA,SAAAzE,GACAlD,KAAA4H,gBAAA1E;AAKA5F,EAAAO,QAAAQ,ICrDAhB,OAAA,gDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,mvBACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,iDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACA4J,eAAA,WACA,OAAA7H,KAAA8H,OAAA,WAAAC,KAAA/H,KAAA,CACAgI,KAAA,oBACAC,IAAA,CAAA,OAAA,CACAC,WAAA,MAEA,CACAF,KAAA,gBACAC,IAAA,WAGA7F,QAAA,CACA+F,aAAA,SAAAC,GACAA,GAAAA,EAAAC,gBACAD,EAAAC;AAMA/K,EAAAO,QAAAQ;AC7BAhB,OAAA,gDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,8gCACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,kDAAA,CAAA,UAAA,sDAAA,SAAAC,EAAAgL,GAGA5K,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA8J,EAAAzK,aCTAR,OAAA,8DAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACAiB,QAAA,MACAC,WAAA,CAAA;AAGA7B,EAAAO,QAAAQ,ICbAhB,OAAA,6DAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,+QACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,wDAAA,CAAA,UAAA,6BAAA,SAAAC,EAAAiL,GAGA7K,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACAuK,SAAA,KACAC,MAAA,KACArD,KAAA,WACApF,KAAA4B,OAAAC,MAAA7B,KAAA8B;AAGA,IAAA2G,EAAAF,EAAA1K,QAAA6K;AAEAD,EAAAE,cAAA3I,KAAAwI,SAAAI,aACA5I,KAAAC,IAAA,QAAAwI,IAEArG,QAAA,CACAyG,KAAA,WACA7I,KAAA8I,OAAA9I,KAAAyI,QAEAM,OAAA,WACA/I,KAAAgJ;AAKA1L,EAAAO,QAAAQ,IC9BAhB,OAAA,uDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,g7DACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,uCAAA,CAAA,UAAA,2CAAA,SAAAC,EAAA2L,GAGAvL,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAyK,EAAApL,aCTAR,OAAA,0DAAA,CAAA,UAAA,gDAAA,SAAAC,EAAA4L,GAQA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9F,EAAA+F,GAAA,IAAA,IAAAC,EAAAN,EAAA1F,GAAA+F,GAAA7L,EAAA8L,EAAA9L,MAAA,MAAA+L,GAAA,YAAAL,EAAAK,GAAAD,EAAAE,KAAAP,EAAAzL,GAAAiM,QAAAR,QAAAzL,GAAAkM,KAAAP,EAAAC,GALA9L,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAMA,IAAAQ,EAAAN,MAAAkB,UAAAhB,OAAA,CACA8L,SAAA,KACA7G,SAAA,KACA8G,YAAA,EACAC,eAAAlM,MAAAwB,SAAA,WAAA,WACA,OAAAS,KAAA+J,SAAA,cAEA3E,KAAA,WACA,IAAAvC,EAAA7C;AAEAA,KAAA4B,OAAAC,MAAA7B,KAAA8B,WAEAoI,UAAAC,cAAAC,MAAAN,KAAA,SAAAO,GACA,OAAAA,EAAAC,YAAAC,oBACAT,KAAA,SAAAU,GACAA,GACA3H,EAAA5C,IAAA,cAAA,MAIAmC,QAAA,CACAqI,UAAA,WACA,IAAAC,EAAA1K;AAEAkK,UAAAC,cAAAC,MAAAN,KAEA,WACA,IA7BAa,EA6BAC,GA7BAD,EA+BAE,mBAAAC,KAAA,SAAAC,EAAAV,GACA,IAAAW,EAAAC,EAAAC;AACA,OAAAL,mBAAAM,KAAA,SAAAC,GACA,OACA,OAAAA,EAAAC,KAAAD,EAAAE,MACA,KAAA,EAEA,OADAF,EAAAE,KAAA,EACAC,MAAAvL,KAAAiK,eAAA;AAEA,KAAA,EAGA,OAFAe,EAAAI,EAAAI,KACAJ,EAAAE,KAAA,EACAN,EAAAhH;AAEA,KAAA,EAKA,OAJAiH,EAAAG,EAAAI,KAEAN,GAAA,EAAAhC,EAAArL,SAAAoN,GAEAG,EAAAK,OAAA,SAAApB,EAAAC,YAAAG,UAAA,CACAiB,iBAAA,EACAC,qBAAAT;AAGA,KAAA,EACA,IAAA,MACA,OAAAE,EAAAQ,SAGAb,EAAA/K,QA5DA,WAAA,IAAA6L,EAAA7L,KAAA8L,EAAAhK;AAAA,OAAA,IAAA+H,QAAA,SAAAR,EAAAC,GAAA,IAAAF,EAAAuB,EAAA9I,MAAAgK,EAAAC;AAAA,SAAAvC,EAAA3L,GAAAuL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5L,GAAA,SAAA4L,EAAAuC,GAAA5C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,QAAAuC,GAAAxC,OAAAyC;AA+DA,OAAA,SAAAC,GACA,OAAArB,EAAA/I,MAAA7B,KAAA8B,YApCA,GAsCAoK,KAAAlM,OAAA8J,KAAA,SAAAU,GAEA,OADA2B,QAAAC,MAAA,aAAA5B,EAAA6B,UACAd,MAAAb,EAAAT,eAAA,YAAA,CACAqC,OAAA,OACAC,QAAA,CACAC,eAAA,oBAEAC,KAAAC,KAAAC,UAAA,CACAC,KAAAlC,EAAAxH,SACAsH,aAAAA,QAGAV,KAAA9J,KAAAC,IAAA,cAAA,KAEA4M,YAAA,WACA,IAAAC,EAAA9M;AAEAkK,UAAAC,cAAAC,MAAAN,KAAA,SAAAO,GACA,OAAAA,EAAAC,YAAAC,oBACAT,KAAA,SAAAU,GACA,OAAAA,EAAAqC,cAAA/C,KAAA,WAEA,OADAqC,QAAAC,MAAA,eAAA5B,EAAA6B,UACAd,MAAAuB,EAAA7C,eAAA,cAAA,CACAqC,OAAA,OACAC,QAAA,CACAC,eAAA,oBAEAC,KAAAC,KAAAC,UAAA,CACAnC,aAAAA,UAIAV,KAAA9J,KAAAC,IAAA,cAAA;AAKA3C,EAAAO,QAAAQ,ICjHAhB,OAAA,yDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,wyBACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,uCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAgP,WAAA9O,OAAA,CACAmD,KAAArD,MAAAsD,OAAAC,UACA0L,OAAAjP,MAAAwB,SAAA0N,MAAA,eACA5M,gBAAA,EACA6M,iBAAA;AAGA5P,EAAAO,QAAAQ,ICfAhB,OAAA,iCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAgP,WAAA9O,OAAA,CACAkP,YAAApP,MAAAsD,OAAA+L;AAGA9P,EAAAO,QAAAQ,ICZAhB,OAAA,oCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAgP,WAAA9O,OAAA,CACAkP,YAAApP,MAAAsD,OAAA+L,aACAhM,KAAArD,MAAAsD,OAAAC,UACA+L,QAAAtP,MAAAsD,OAAAC,QAAA,iBACAgM,SAAA,KACAC,oBAAA,KACAC,sBAAAzP,MAAAwB,SAAAkO,SAAA,uBACArL,QAAA,CACAsL,mBAAA,SAAAC,GACA3N,KAAAC,IAAA,sBAAA0N,IAEAC,UAAA,SAAAnF,GACA,IAAA5F,EAAA7C;AAEAA,KAAAC,IAAA,sBAAA,MACAD,KAAAqN,QAAAO,UAAAnF,GAAAqB,KAAA,WACAjH,EAAAzB,KAAAyM,mBAAApF;AAMAnL,EAAAO,QAAAQ,IC9BAhB,OAAA,iCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAgP,WAAA9O,OAAA;AAEAX,EAAAO,QAAAQ,ICVAhB,OAAA,8CAAA,CAAA,UAAA,+BAAA,SAAAC,EAAAwQ,GAGApQ,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAgP,WAAA9O,OAAA,CACAgD,WAAA,KACAwH,MAAA1K,MAAAsD,OAAA+L,aACAhM,KAAArD,MAAAsD,OAAAC,UACA+L,QAAAtP,MAAAsD,OAAAC,QAAA,iBACAyM,cAAA,SAAApH,EAAAqH,GACA,OAAAF,EAAAjQ,QAAA6K,OAAA,CACAsF,KAAAA,EACAvJ,KAAA,IAAAwJ,KACAC,SAAAlO,KAAAxB,IAAA,+BACAyI,QAAAN,KAGAvE,QAAA,CACA+L,YAAA,SAAAlN,GACA,IAAA0F,EAAA3G,KAAA+N,cAAA9M,EAAA;AACAjB,KAAAoB,KAAAgN,gBAAApO,KAAAxB,IAAA,eAAAwB,KAAAqO,MAAA1H,EAAAnI,IAAA,YACAwB,KAAAxB,IAAA,kBAAA8P,WAAA3H,GACA3G,KAAAC,IAAA,aAAA,OAEAsO,eAAA,SAAAtN,GACA,IACAuN,EAAAvN,EAAAqB,OAAA,GACAmM,EAAAD,EAAAE,MAAA,KACAC,EAAAF,EAAA,GAHA,CAAA,OAAA,OAAA,QAAA,KAAA,MAAA,OAAA,SAKAG,SAAAD,EAAAE,eACA7O,KAAA8O,KAAAH,EAAA,UAAAF,EAAAM,MAAA,IAEA5C,QAAA6C,KAAA,YAAA,kBAAAR,GAGAxO,KAAAC,IAAA,aAAA,OAEAgP,YAAA,SAAAnD,GACA,IAAArD,EAAAzI,KAAAxB,IAAA,eACA0C,EAAAlB,KAAAoB,KAAA8N,cAAAzG,EAAAqD,EAAA;AACA9L,KAAAqN,QAAAO,UAAAnF,GACAzI,KAAAmP,kBAAA,gBAAA1G,EAAAvH,IAEAkO,YAAA,WACA,IAAA3G,EAAAzI,KAAAxB,IAAA,eACA6Q,EAAArP,KAAAxB,IAAA;AACAwB,KAAAoB,KAAAkO,cAAA7G,EAAA4G;AACA,IAAAE,EAAA9G,EAAAjK,IAAA;AAEAT,MAAA0H,UAAA8J,GACAvP,KAAAmP,kBAAA,gBAAA1G,EAAA8G,GAEAvP,KAAAmP,kBAAA,QAAA1G,IAGA+G,aAAA,WACAxP,KAAA8O,KAAA,gBAEAW,YAAA,aACAC,UAAA,SAAA5D,GACA,IAAA7K,EAAA6K,EAAAjG,KAAA,KACAc,EAAA3G,KAAA+N,cAAA9M,EAAA;AACAjB,KAAAoB,KAAAuO,kBAAA3P,KAAAxB,IAAA,eAAAwB,KAAAxB,IAAA,4BAAAmI,EAAAnI,IAAA,YACAwB,KAAAxB,IAAA,kBAAA8P,WAAA3H,IAEAiJ,WAAA,SAAA9D,GACA,IAAA5I,EAAA4I,EAAA+D;AACA7P,KAAAoB,KAAA0O,kBAAA9P,KAAAxB,IAAA,eAAA0E,IAIA6M,aAAA,SAAAjE,GACA,IAAA5K,EAAAlB,KAAAqO,MACA2B,EAAAlE,EAAAjG,KAAA;AACA7F,KAAAoB,KAAA6O,YAAAjQ,KAAAxB,IAAA,eAAA0C,EAAA8O;AAKA1S,EAAAO,QAAAQ,ICpFAhB,OAAA,yCAAA,CAAA,UAAA,+CAAA,SAAAC,EAAA4S,GAGAxS,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAA6R,EAAArS,QAAAI,OAAA;AAEAX,EAAAO,QAAAQ,ICVAhB,OAAA,8CAAA,CAAA,UAAA,+CAAA,SAAAC,EAAA4S,GAGAxS,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAA6R,EAAArS,QAAAI,OAAA;AAEAX,EAAAO,QAAAQ,ICVAhB,OAAA,8CAAA,CAAA,UAAA,kCAAA,SAAAC,EAAA6S,GAGAzS,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAA8R,EAAAtS;AACAP,EAAAO,QAAAQ,ICRAhB,OAAA,gDAAA,CAAA,UAAA,oCAAA,SAAAC,EAAA8S,GAGA1S,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAA+R,EAAAvS;AACAP,EAAAO,QAAAQ,ICRAhB,OAAA,gDAAA,CAAA,UAAA,oCAAA,SAAAC,EAAA+S,GAGA3S,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAAgS,EAAAxS;AACAP,EAAAO,QAAAQ,ICRAhB,OAAA,iDAAA,CAAA,UAAA,qCAAA,SAAAC,EAAAgT,GAGA5S,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAAiS,EAAAzS;AACAP,EAAAO,QAAAQ,ICRAhB,OAAA,gDAAA,CAAA,UAAA,oCAAA,SAAAC,EAAAiT,GAGA7S,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAAkS,EAAA1S;AACAP,EAAAO,QAAAQ,ICRAhB,OAAA,oDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAGA,IAAAQ,EAAA,CACAmS,QAAA,GACAC,QAAA,GACAC,QAAA,CACAC,UAAA,GACAC,UAAAjR,OAAAkR,gBAEAC,UAAA,YACAC,WAAA;AAEAzT,EAAAO,QAAAQ,ICnBAhB,OAAA,qDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAGA,IAAAQ,EAAA,CACAmS,QAAA,GACAC,QAAA,GACAC,QAAA,CACAC,UAAA,GACAC,UAAAjR,OAAAqR,iBAEAF,UAAA,aACAC,WAAA;AAEAzT,EAAAO,QAAAQ,ICnBAhB,OAAA,8CAAA,CAAA,UAAA,kCAAA,SAAAC,EAAA2T,GAGAvT,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAyS,EAAApT,aCTAR,OAAA,uDAAA,CAAA,UAAA,2CAAA,SAAAC,EAAA4T,GAGAxT,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA0S,EAAArT,aCTAR,OAAA,yDAAA,CAAA,UAAA,6CAAA,SAAAC,EAAA6T,GAGAzT,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA2S,EAAAtT,aCTAR,OAAA,gCAAA,CAAA,UAAA,kCAAA,mCAAA,SAAAC,EAAA8T,EAAA3T,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAwT,EAAAtT,MAAAsT,QAAAtT,MAAAuT,MACAC,EAAAF,EAAA,GAAA,CACAG,iBAAA,EACAC,gBAAA,EACAC,cAAA;AAEAH,EAAAF,EAAAE,EAAA9T,EAAAI,QAAA0T;AAEA,IAAAlT,EAAA+S,EAAAvT,QAAAI,OAAA,CACA0T,WAAAJ,EAAAC,gBACAC,eAAAF,EAAAE,eACAC,aAAAH,EAAAG;AAGApU,EAAAO,QAAAQ,ICrBAhB,OAAA,mCAAA,CAAA,UAAA,kCAAA,sCAAA,SAAAC,EAAAG,EAAAmU,GASA,SAAAC,EAAAC,GACA,IAAAC,EAAAjQ,UAAA9C,OAAA,QAAAgN,IAAAlK,UAAA,GAAAA,UAAA,GAAA,GACAkQ,EAAAvU,EAAAI,QAAAoU,IAAAD,QAGAE,EAAAH,EAAAG,aAAAH,EAAAI,QACAC,EAAAL,EAAAK,SAAAL,EAAAM,YACAjP,EAAA;AAiBA,OAfA8O,IACAH,EAAAO,eACAlP,EAAA4O,EAAA5O,MAAAwO,EAAAW,wBAIAnP,IACAA,EAAA4O,EAAA5O,MAAAwO,EAAAY,iBAIAJ,IACAhP,EAAA4O,EAAA5O,MAAAwO,EAAAa,YAGArP,EAAAA,EAAA,GAAA4O,EA9BAtU,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAuU,WAAAA,EACAvU,EAAAO,aAAA;AA6BA,IAAAQ,EAAAN,MAAA2U,OAAAC,OAAAd;AAEAvU,EAAAO,QAAAQ,ICtCAhB,OAAA,gCAAA,CAAA,UAAA,iCAAA,SAAAC,EAAAsV,GAGAlV,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAoU,EAAA/U,aCTAR,OAAA,iCAAA,CAAA,UAAA,kCAAA,SAAAC,EAAAuV,GAGAnV,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAqU,EAAAhV;ACTAR,OAAA,kCAAA,CAAA,UAAA,mCAAA,SAAAC,EAAAwV,GAGApV,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAsU,EAAAjV,aCTAR,OAAA,wCAAA,CAAA,UAAA,yCAAA,SAAAC,EAAAyV,GAGArV,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAuU,EAAAlV,aCTAR,OAAA,yCAAA,CAAA,UAAA,0CAAA,SAAAC,EAAA0V,GAGAtV,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAwU,EAAAnV,aCTAR,OAAA,+BAAA,CAAA,UAAA,gCAAA,SAAAC,EAAA2V,GAGAvV,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAyU,EAAApV,aCTAR,OAAA,qCAAA,CAAA,UAAA,qCAAA,SAAAC,EAAA4V,GAGAxV,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA0U,EAAArV,WAGAH,OAAAC,eAAAL,EAAA,cAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA0U,EAAAC,iBCfA9V,OAAA,6BAAA,CAAA,UAAA,6BAAA,SAAAC,EAAA8V,GAGA1V,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA4U,EAAAvV,WAGAH,OAAAC,eAAAL,EAAA,OAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA4U,EAAAC,UCfAhW,OAAA,kCAAA,CAAA,UAAA,mCAAA,SAAAC,EAAAgW,GAGA5V,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA8U,EAAAzV,aCTAR,OAAA,uCAAA,CAAA,UAAA,wCAAA,SAAAC,EAAAiW,GAGA7V,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA+U,EAAA1V,aCTAR,OAAA,mCAAA,CAAA,UAAA,oCAAA,SAAAC,EAAAkW,GAGA9V,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAgV,EAAA3V,aCTAR,OAAA,uCAAA,CAAA,UAAA,wCAAA,SAAAC,EAAAmW,GAGA/V,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAiV,EAAA5V,aCTAR,OAAA,qCAAA,CAAA,UAAA,sCAAA,SAAAC,EAAAoW,GAGAhW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAkV,EAAA7V,aCTAR,OAAA,uCAAA,CAAA,UAAA,wCAAA,SAAAC,EAAAqW,GAGAjW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAmV,EAAA9V,aCTAR,OAAA,mCAAA,CAAA,UAAA,oCAAA,SAAAC,EAAAsW,GAGAlW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAoV,EAAA/V,aCTAR,OAAA,uCAAA,CAAA,UAAA,wCAAA,SAAAC,EAAAuW,GAGAnW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAqV,EAAAhW,aCTAR,OAAA,sCAAA,CAAA,UAAA,uCAAA,SAAAC,EAAAwW,GAGApW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAsV,EAAAjW,aCTAR,OAAA,qCAAA,CAAA,UAAA,sCAAA,SAAAC,EAAAyW,GAGArW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAuV,EAAAlW,aCTAR,OAAA,iCAAA,CAAA,UAAA,kCAAA,SAAAC,EAAA0W,GAGAtW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAwV,EAAAnW,aCTAR,OAAA,mCAAA,CAAA,UAAA,6BAAA,SAAAC,EAAA2W,GAGAvW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAyV,EAAApW,aCTAR,OAAA,8BAAA,CAAA,UAAA,+BAAA,SAAAC,EAAAgH,GAGA5G,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA8F,EAAAzG,aCTAR,OAAA,2BAAA,CAAA,UAAA,4BAAA,SAAAC,EAAA4W,GAGAxW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA0V,EAAArW,aCTAR,OAAA,oCAAA,CAAA,UAAA,kDAAA,SAAAC,EAAA6W,GAGAzW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA2V,EAAAtW,aCTAR,OAAA,4BAAA,CAAA,UAAA,6BAAA,SAAAC,EAAA2W,GAGAvW,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAyV,EAAApW,aCTAR,OAAA,2BAAA,CAAA,UAAA,4BAAA,SAAAC,EAAA8W,GAGA1W,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA4V,EAAAvW,WAGAH,OAAAC,eAAAL,EAAA,MAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA4V,EAAAC,SCfAhX,OAAA,wCAAA,CAAA,UAAA,4CAAA,mCAAA,SAAAC,EAAAgX,EAAA7W,GAOA,IAAA8W,EAAAvC;AAJAtU,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA,EAGAJ,EAAAI,QAAAoU,MACAsC,EAAA9W,EAAAI,QAAAoU,IAAAsC,KACAvC,EAAAvU,EAAAI,QAAAoU,IAAAD;AAGA,IAAA3T,EAAA,CACAkW,KAAA,cACAC,YAAA,EAAAF,EAAAzW,SAAA0W,EAAAvC;AAEA1U,EAAAO,QAAAQ,IClBAhB,OAAA,oDAAA,CAAA,UAAA,4DAAA,SAAAC,EAAAmX,GAGA/W,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAA,CACAkW,KAAA,0BACAC,WAAA,WACA,IAAAE,EAAA5S,UAAA,IAAAA,UAAA;AACA4S,EAAAC,SAAA,+BAAAF,EAAA5W,SACA6W,EAAArT,OAAA,+BAAA,YAAA;AAGA/D,EAAAO,QAAAQ,ICfAhB,OAAA,6CAAA,CAAA,UAAA,yCAAA,SAAAC,EAAAoJ,GAGAhJ,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAMAP,EAAAO,QAJA,CACA0W,KAAA,mBACAC,WAAA,gBCVAnX,OAAA,sDAAA,CAAA,UAAA,mCAAA,SAAAC,EAAAG,GASA,SAAA+W,IACA,IAAArH,EAAArL,UAAA,IAAAA,UAAA;AAEA,IAAA,IAAArE,EAAAI,QAAA+W,wBAAA,CACA,IAAAC;AAEA,GAAA,oBAAAC,OACAD,EAAAC;KACA,GAAA,oBAAAC,OACAF,EAAAE;IACA,CAAA,GAAA,oBAAAlJ,KAIA;AAHAgJ,EAAAhJ,KAMA,IACAmJ,EADApX,EAAAH,EAAAI,QAAA+W;AAIAI,EADA,iBAAApX,EACAA,EAEAG,MAAA0J,OAAAwN,SAAAxX,EAAAI,QAAAK,cAGA2W,EAAAG,KACAH,EAAAG,GAAA7H,EACAA,EAAA+H,OAAA,CACAC,YAAA,WACAnV,KAAA4B,OAAAC,MAAA7B,KAAA8B,kBAEA+S,EAAAG,QAtCAtX,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAkX,WAAAA,EACAlX,EAAAO,aAAA;AAyCA,IAAAQ,EAAA,CACAkW,KAAA,4BACAC,WAAAA;AAEAlX,EAAAO,QAAAQ,ICpDAhB,OAAA,mCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAGA,IAAAQ,EAAA,CACAkW,KAAA,SACAC,WAAA,kBAIA7U,OAAAyV,SAAAC,SAAAC;AAGAhY,EAAAO,QAAAQ,IClBAhB,OAAA,wCAAA,CAAA,UAAA,8BAAA,4BAAA,SAAAC,EAAAiY,EAAAC,GAGA9X,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA,GACA,EAAA0X,EAAAf;AAKAlX,EAAAO,QAJA,CACA0W,KAAA,cACAC,WAAA,gBCVAnX,OAAA,sCAAA,CAAA,UAAA,mCAAA,SAAAC,EAAAG,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAMA,IAAA4X,EAAA,IAAAC,gBAAAC,GAAAlY,EAAAI,QAAA+X,aAAA,CACAC,KAAA,gBAEAxX,EAAA,CACAkW,KAAA,YACAC,WAAA,SAAAE,GACAA,EAAAC,SAAA,mBAAAc,EAAA,CACAK,aAAA,EACAC,WAAA,IAEArB,EAAArT,OAAA,aAAA,YAAA,oBACAqT,EAAArT,OAAA,QAAA,YAAA,oBACAqT,EAAArT,OAAA,YAAA,YAAA,oBACAqT,EAAArT,OAAA,UAAA,YAAA;AAGA/D,EAAAO,QAAAQ;AC5BAhB,OAAA,oDAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAA,CACAkW,KAAA,iBACAC,WAAA,SAAAwB,GACA,mBAAAA,EAAAlO,OACAkO,EAAAlO,OAAA,qBAGA/J,MAAAkY,SAAAD,GAAAlO,OAAA;AAIAxK,EAAAO,QAAAQ,IClBAhB,OAAA,mDAAA,CAAA,WAAA,SAAAC,GASA,SAAAkX,EAAA0B,GACA,IACAC,EADAD,EAAApO,OAAA,yBACAtJ,IAAA;AAEAsW,OAAAqB,cAAAA,EACA,CAAA,QAAA,gBAAA,YAAA,eAAA,QAAA,kBAAA,aAAA,UAAA,YAAA,YAAA,kBAAA,kBACAC,QAAA,SAAAC,GACAF,EAAAlU,GAAAoU,EAAA,WACA,OAAAlK,QAAAC,MAAA,6BAAArN,OAAAsX,QAdA3Y,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAkX,WAAAA,EACAlX,EAAAO,aAAA;AAeA,IAAAQ,EAAA,CACAkW,KAAA,gBACAC,WAAAA;AAEAlX,EAAAO,QAAAQ,IC1BAhB,OAAA,mCAAA,CAAA,UAAA,8BAAA,UAAA,SAAAC,EAAAwQ,EAAAxJ,GAGA5G,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAL,OAAAO,OAAA,CACAwK,MAAA,KACA8L,KAAA,GACA+B,SAAA,KACAC,SAAA,KACAC,WAAA,EACAC,mBAAA,KACAzG,MAAA,KACA0G,gBAAA,EACAC,gBAAA,EACAC,SAAA,EAEAxR,KAAA,WACApF,KAAA4B,OAAAC,MAAA7B,KAAA8B,WAEA9B,KAAAC,IAAA,WAAA,IACAD,KAAAC,IAAA,WAAA,KAEA4W,SAAA9Y,MAAAwB,SAAA,0BAAA,OAAA,WACA,IAAAsD,EAAA7C,KAEA8W,EAAA9W,KAAAxB,IAAA,wBAAAuY,KAAA,SAAA1H,GACA,OAAAA,IAAAxM,EAAA0R;AAEA,OAAAxW,MAAA0H,UAAAqR,KAEAE,KAAAjZ,MAAAwB,SAAA,OAAA,WAGA,OAAAS,KAAAuU,KAAAzO,QAAA,KAAA,MAEAmR,oBAAAlZ,MAAAwB,SAAA,UAAA,iBAAA,iBAAA,WACA,OAAAS,KAAA4W,UAAA5W,KAAA0W,eACA,KAGA1W,KAAA2W,eAAA,kBAAA,oBAEAO,eAAAnZ,MAAAwB,SAAA,sBAAA,WACA,OAAAS,KAAAuW,SAAAY,OAAA,UAEAC,eAAArZ,MAAAwB,SAAA,cAAA,WACA,OAAAS,KAAAxB,IAAA,YAAA6Y,KAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAzI,cAAA2I,cAAAD,EAAA1I,mBAGA4I,gBAAA,SAAAxW,GACA,IAAAyW,GAAA,EAAApT,EAAAzG,SAAAoD,EAAAzC,IAAA,SAAAmZ,QAAA,OAAAC;AAKA,IAJA5X,KAAAuW,SAAAQ,KAAA,SAAApQ,GACA,MAAA,kBAAAA,EAAAnI,IAAA,SAAAmI,EAAAnI,IAAA,QAAAqZ,aAAAH,EAAAG,aAGA,CAIA,IAAAC,EAAAhK,EAAAjQ,QAAA6K,OAAA,CACAsF,KAAA,gBACAvJ,KAAAiT;AAGA1X,KAAAuW,SAAAjI,WAAAwJ,KAEAC,WAAA,SAAApR,GACA3G,KAAAyX,gBAAA9Q,GACA3G,KAAAuW,SAAAjI,WAAA3H,GAEA3G,KAAA4W,UACA5W,KAAAC,IAAA,kBAAA,GAEA0G,EAAAnI,IAAA,WAAA4E,MAAApD,KAAAxB,IAAA,wBACAwB,KAAAC,IAAA,kBAAA,KAIA+X,QAAA,SAAA9U,GACAlD,KAAAsW,SAAA1H,SAAA1L,IACAlD,KAAAsW,SAAAhI,WAAApL,IAGA+U,WAAA,SAAA/U,GACAlD,KAAAsW,SAAA4B,aAAAhV;AAIA5F,EAAAO,QAAAQ,IC7FAhB,OAAA,8BAAA,CAAA,UAAA,oCAAA,SAAAC,EAAA4S,GAGAxS,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAGA,IAAAQ,EAAA6R,EAAArS,QAAAI,OAAA,CACAka,8BAAA,KACAC,eAAAra,MAAAwB,SAAA,QAAA,WACA,GAAA,OAAAS,KAAAgQ,MAAA,CACA,IAAAA,EAAA9I,WAAAlH,KAAAgQ,MAAA,CACAqI,gBAAA,QACAlR,eAAA,CACAC,IAAA;AAGA,OAAA,IAAArJ,MAAA0J,OAAAC,SAAAsI,GAEA,MAAA;AAKA1S,EAAAO,QAAAQ,IC1BAhB,OAAA,8BAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAL,OAAAO,OAAA,CACA+P,KAAA,KACAvJ,KAAA,KACAyJ,SAAA,KACAjH,QAAA;AAGA3J,EAAAO,QAAAQ,ICfAhB,OAAA,4BAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAL,OAAAO,OAAA,CACAsW,KAAA,KACA+D,SAAA,MACAC,OAAA,KACAC,SAAA,KAEAzO,SAAA,KAIA0O,2BAAA,KACAC,eAAA,KACAC,eAAA5a,MAAAwB,SAAA8X,KAAA,WAAA,kBACAjS,KAAA,WACApF,KAAAC,IAAA,iBAAA,CAAA,SACAD,KAAAC,IAAA,WAAA,IACAD,KAAAC,IAAA,6BAAA,IACAD,KAAAC,IAAA,SAAA,CACA2Y,SAAA,KACAC,KAAA,IACAC,QAAA,EACA5V,SAAA,KACA6V,SAAA,KACA7K,SAAA,KACA8K,SAAA,CACAD,SAAA,QAIA/Y,KAAA4B,OAAAC,MAAA7B,KAAA8B,YAEAmX,aAAAlb,MAAAwB,SAAA,sBAAA,WACA,OAAAS,KAAAwY,SAAAU,MAAA,UAEAC,oBAAApb,MAAAwB,SAAA,oCAAA,WACA,OAAAS,KAAAwY,SAAAU,MAAA,wBAEAE,eAAArb,MAAAwB,SAAA,OAAA,WAAA,WACA,MAAA,aAAAS,KAAAuU,MAAA,QAAAvU,KAAAsY,SACA,CAAA,SAAA,UAAA,cAAA,iBAAA,eAAA,YAAA,aAAA,oBAAA,YAAA,WAAA,YAAA,aAEA,KAGAe,aAAAtb,MAAAwB,SAAA0N,MAAA,mBACAqM,eAAA,SAAApW,GAIA,OAFAlD,KAAAyY,2BAAAnK,WAAAtO,KAAAuZ,mBAEAvZ,KAAAsY,UACA,IAAA,MACAtY,KAAAC,IAAA,kBAAAiD;AACA;AAEA,IAAA,OACAlD,KAAAC,IAAA,kBAAAiD,KAIAqW,kBAAAxb,MAAAwB,SAAA,WAAA,sCAAA,WACA,IAAAia;AAEA,OAAAxZ,KAAAsY,UACA,IAAA,MAEAkB,EAAA,SAAAza,OAAAiB,KAAAxB,IAAA,mBAAA,KAAAO,OAAAiB,KAAAxB,IAAA;AACA;AAEA,IAAA,OAEAgb,EAAA,GAAAza,OAAAiB,KAAAxB,IAAA,mBAAA,iBAIA,OAAAgb,IAEA5Q,UAAA,WACA,IAAA/F,EAAA7C,KAEAyZ,EAAA,CACA9a,GAAAqB,KAAArB,IAAAqB,KAAAuU,KAAAmF,YACAnF,KAAAvU,KAAAuU,KACA+D,SAAAtY,KAAAsY,SACAC,OAAA,CACAK,SAAA5Y,KAAAxB,IAAA,mBACAqa,KAAAc,SAAA3Z,KAAAxB,IAAA,eAAA,IACAsa,OAAA9Y,KAAAxB,IAAA,iBACA0P,SAAAlO,KAAAxB,IAAA,oBAEAga,SAAAxY,KAAAiZ,cAAA;AAaA,OAVAlb,MAAA0H,UAAAzF,KAAA+J,YACA0P,EAAA1P,SAAA/J,KAAA+J,UAGA,CAAA,WAAA,WAAA,YAAAqM,QAAA,SAAAwD,GAEA7b,MAAA0H,UAAA5C,EAAArE,IAAA,UAAAO,OAAA6a,OACAH,EAAAlB,OAAAqB,GAAA/W,EAAArE,IAAA,UAAAO,OAAA6a,OAGAH;AAIAnc,EAAAO,QAAAQ,IClHAhB,OAAA,mCAAA,CAAA,UAAA,oCAAA,SAAAC,EAAA4S,GAGAxS,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAA6R,EAAArS,QAAAI,OAAA,CACA4b,eAAA;AAGAvc,EAAAO,QAAAQ,ICZAhB,OAAA,wBAAA,CAAA,UAAA,kBAAA,SAAAC,EAAAwc,GAGApc,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAAyb,EAAAjc;AACAP,EAAAO,QAAAQ,ICRAhB,OAAA,sBAAA,CAAA,UAAA,mCAAA,SAAAC,EAAAG,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAkc,EAAAhc,MAAAgc,OAAA9b,OAAA,CACA+b,SAAAvc,EAAAI,QAAAoc,aACAC,QAAAzc,EAAAI,QAAAqc;AAEAH,EAAAI,IAAA,WACAna,KAAAoa,MAAA,QAAA,CACAvE,KAAA,QACA,WACA7V,KAAAoa,MAAA,UAAA,CACAvE,KAAA,mBAEA7V,KAAAoa,MAAA,eAAA,CACAvE,KAAA,kBAGA7V,KAAAoa,MAAA;AAEA,IAAA/b,EAAA0b;AACAzc,EAAAO,QAAAQ,ICzBAhB,OAAA,kCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAsc,MAAApc,OAAA,CACAqc,OAAAvc,MAAAsD,OAAAC,UACAF,KAAArD,MAAAsD,OAAAC,UACA+L,QAAAtP,MAAAsD,OAAAC,QAAA,iBACAiZ,YAAA,WACAva,KAAA4B,OAAAC,MAAA7B,KAAA8B,YAQAuM,MAAA,WAEA,OADArO,KAAAoB,KAAAoZ,iBACAxa,KAAAoB,KAAAqZ,gCAEArY,QAAA,CACAK,KAAA,SAAAC,EAAAC,GACA,IAAA+X,EAAA,OAAA3b,OAAA2D,EAAAiY,aAAA;AAEA,OAAAhY,GACA,IAAA,OACA3C,KAAAoN,WAAAnN,IAAAya,GAAA;AACA;AAEA,IAAA,OACA1a,KAAAoN,WAAAnN,IAAAya,GAAA;AACA;AAEA,IAAA,SACA1a,KAAAoN,WAAAwN,eAAAF,KAIAG,eAAA,SAAApS,GACA,IAAA4G,EAAAyF,OAAAgG,OAAA;AAEA,IAAA/c,MAAAgd,QAAA1L,GAAA,CAIA,QAAA5G,EAAAjK,IAAA,aAAA6Q,EAAAjM,MAAA,QACAiM,EAAA,IAAAtQ,OAAAsQ;AAGA,IAAAnO,EAAAlB,KAAAoB,KAAA8N,cAAAzG,EAAA4G;AACArP,KAAAqN,QAAAO,UAAAnF,GACAzI,KAAAgb,aAAA,gBAAAvS,EAAAvH;AAKA5D,EAAAO,QAAAQ,IC7DAhB,OAAA,4BAAA,CAAA,UAAA,sBAAA,mCAAA,SAAAC,EAAA2d,EAAAxd,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAsc,MAAApc,OAAA,CACAid,cAAA,EAAAD,EAAAE,YAAA,iBACAC,SAAA,WACA,IAAAC,EAAArb,KAAAxB,IAAA,8BAAAf,EAAAI,QAAAyd,eAEAC,EAAAvb,KAAAxB,IAAA,gCAAA;AAEA6c,GAAAE,GACAvb,KAAAgb,aAAA,gBAAAK,EAAAE;AAKAje,EAAAO,QAAAQ,ICrBAhB,OAAA,+BAAA,CAAA,UAAA,4BAAA,mCAAA,SAAAC,EAAAiL,EAAA9K,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAsc,MAAApc,OAAA,CACAoP,QAAAtP,MAAAsD,OAAAC,QAAA,iBACAF,KAAArD,MAAAsD,OAAAC,UACA+M,MAAA,WACA,IACArB,EADAhN,KAAAxB,IAAA,cAAAgd,OACAxO,OAAAyO,SAAA3R,KAAA,SAAA4R,GACA,IAAAC,EAAA;AAEA,OAAA5d,MAAAgd,QAAAW,GACAC,GAGAje,OAAAkI,KAAA8V,GAAAtF,QAAA,SAAAzX,GACA,IAAA8J,EAAAF,EAAA1K,QAAA6K;AAEAD,EAAAE,cAAA+S,EAAA/c,IACAgd,EAAAC,KAAAnT,KAEAkT,IACA,SAAAvb,GACA+L,QAAAxC,MAAAvJ;AAEA,OAAArC,MAAA8d,KAAA9J,KAAA,CACA/E,OAAAA,EACA8O,aAAAre,EAAAI,QAAAie,aAAA3B,IAAA,SAAAxM,GACA,IAAAlF,EAAAF,EAAA1K,QAAA6K;AAGA,OADAD,EAAAE,cAAAgF,GACAlF,OAIAsT,gBAAA,SAAA3O,GACApN,KAAA4B,OAAAC,MAAA7B,KAAA8B,WAEAsL,EAAAnN,IAAA,WAAAsI,EAAA1K,QAAA6K,WAEAtG,QAAA,CACA4Z,SAAA,WACA,IAAAnZ,EAAA7C,KAEAsN,EAAAtN,KAAAoN,WAAA5O,IAAA;AACA8O,EAAArN,IAAA,KAAAqN,EAAA9O,IAAA,QAAAkb,aACA1Z,KAAAqN,QAAAO,UAAAN,GAAAxD,KAAA,WACAjH,EAAAzB,KAAAyM,mBAAAP,GAEAzK,EAAAoZ,SAAA,YAAAjP,OAAAsB,WAAAhB,IACA,SAAAlN,GACA+L,QAAAxC,MAAA,qBAAA2D,EAAAlN,MAGA8b,YAAA,SAAAzT,GACA,IAAAiC,EAAA1K;AAEAA,KAAAqN,QAAA6O,YAAAzT,GAAAqB,KAAA,WACAY,EAAAuR,SAAA,YAAAjP,OAAAkL,aAAAzP,IACA,SAAArI,GACA+L,QAAAxC,MAAA,yBAAAlB,EAAArI;AAMA9C,EAAAO,QAAAQ,ICvEAhB,OAAA,4BAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAsc,MAAApc,OAAA,CACAmD,KAAArD,MAAAsD,OAAAC,UACA+M,MAAA,SAAA8N,GACA,OAAAnc,KAAAoB,KAAA5C,IAAA,UAAA4d,OAAA,KAAAD,EAAAxd;AAIArB,EAAAO,QAAAQ,ICfAhB,OAAA,yCAAA,CAAA,UAAA,uBAAA,SAAAC,EAAA2d,GAGAvd,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AASA,IAAAQ,EAAAN,MAAAsc,MAAApc,OAAA,CACAmD,KAAArD,MAAAsD,OAAAC,UACA4Z,cAAA,EAAAD,EAAAE,YAAA,iBACA9M,MAAA,SAAA8N,GACA,IAAA1T,EAAAzI,KAAAic,SAAA,SACA/a,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,OAAAD,EAAAnF;AAMA,OAJA9V,IACAA,EAAAlB,KAAAqc,2BAAA5T,EAAA0T,EAAAnF,OAGA9V,GAEA6a,gBAAA,SAAA3O,EAAAiB,GACArO,KAAA4B,OAAAwL,EAAAiB,GAEAtQ,MAAA0D,IAAAC,aAAA,cAAA,WAtBAoT,OAAAwH,WAAA,KACAve,MAAAc,EAAA,uBAAAsD,WAyBAC,QAAA,CACAma,cAAA,WACA,IAAA1Z,EAAA7C,KAEAyI,EAAAzI,KAAAic,SAAA,SACA/a,EAAAlB,KAAAoN,WAAA5O,IAAA;AACAwB,KAAAC,IAAA,4BAAAwI,EAAAjK,IAAA,OACAwB,KAAAC,IAAA,8BAAAiB,EAAA1C,IAAA,SAEAwB,KAAAxB,IAAA,eAAA4X,QAAA,SAAA3N,GACAA,EAAAjK,IAAA,YAAAge,QAAA,WAAA,KAGAtb,EAAAjB,IAAA,WAAA,GAEAiB,EAAAjB,IAAA,kBAAA,GACAiB,EAAAjB,IAAA,kBAAA,GACAlC,MAAA0D,IAAAmD,MAAA5E,KAAA,WACA,OAAA6C,EAAAiM,KAAA,OAAA,SAAA,SACA;AAKAxR,EAAAO,QAAAQ,IC3DAhB,OAAA,oCAAA,CAAA,UAAA,0CAAA,SAAAC,EAAA4S,GAGAxS,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAA6R,EAAArS,QAAAI,OAAA,CACAoe,2BAAA,SAAA5T,EAAA4G,GACA,OAAArP,KAAAoB,KAAA8N,cAAAzG,EAAA,IAAA4G;AAIA/R,EAAAO,QAAAQ,ICdAhB,OAAA,yCAAA,CAAA,UAAA,0CAAA,SAAAC,EAAA4S,GAGAxS,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAA6R,EAAArS,QAAAI,OAAA,CACAoe,2BAAA,SAAA5T,EAAA4G,GACA,OAAArP,KAAAoB,KAAA0O,kBAAArH,EAAA4G;AAIA/R,EAAAO,QAAAQ,ICdAhB,OAAA,kCAAA,CAAA,UAAA,kCAAA,qCAAA,SAAAC,EAAAG,EAAAgf,GAGA/e,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAwT,EAAAtT,MAAAsT,QAAAtT,MAAAuT,MACAC,EAAAF,EAAA,GAAA,CACAM,YAAA;AAEAJ,EAAAF,EAAAE,EAAA9T,EAAAI,QAAA0T;AAEA,IAAAlT,EAAAoe,EAAA5e,QAAAI,OAAA,CACA0T,WAAAJ,EAAAI;AAGArU,EAAAO,QAAAQ,ICjBAhB,OAAA,6BAAA,CAAA,UAAA,4BAAA,SAAAC,EAAAof,GAGAhf,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAke,EAAA7e,aCTAR,OAAA,6BAAA,CAAA,UAAA,4BAAA,8BAAA,mCAAA,8BAAA,kCAAA,SAAA,uBAAA,SAAAC,EAAAiL,EAAAoU,EAAAC,EAAA9O,EAAArQ,EAAA6G,EAAA2W,GAQA,SAAA4B,EAAAC,GAAA,OAAAD,EAAA,mBAAAE,QAAA,iBAAAA,OAAAC,SAAA,SAAAF,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAG,UAAA,gBAAAJ,IAAAA,GALApf,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AASA,IAAAQ,EAAAN,MAAAof,QAAAlf,OAAA,CAEAmf,KAAArf,MAAAsD,OAAAC,UACAgZ,OAAAvc,MAAAsD,OAAAC,UAEA4Z,cAAA,EAAAD,EAAAE,YAAA,iBACA9N,QAAAtP,MAAAsD,OAAAC,QAAA,iBAEA+b,IAAAtf,MAAAsD,OAAAC,QAAA,iBACAgc,KAAAvf,MAAAsD,OAAAC,QAAA,kBAMA0L,OAAA,KAOAwN,eAAA,WACAxa,KAAAyV,UAAA8H,OAAAtb,GAAA,YAAAjC,KAAAwd,yBAAAtR,KAAAlM,OACAA,KAAAyV,UAAA8H,OAAAtb,GAAA,UAAAjC,KAAAyd,uBAAAvR,KAAAlM,OACAA,KAAAyV,UAAA8H,OAAAtb,GAAA,UAAAjC,KAAA0d,uBAAAxR,KAAAlM,QAQAya,6BAAA,WACA,IAAA5X,EAAA7C;AAEAA,KAAAC,IAAA,SAAA;AACA,IAAA0d,EAAA3d,KAAAxB,IAAA;AACA,OAAA,IAAAT,MAAA8d,KAAAhS,QAAA,SAAAR,EAAAC,GACAqU,EAAAnC,OAAAxO,OAAAyO,SAAA3R,KAAA,SAAA8T,GACA7f,MAAAgd,QAAArd,OAAAkI,KAAAgY,KACAzR,QAAAC,MAAA,sDAEAvJ,EAAAwK,QAAAwQ,kBAAA/T,KAAA,SAAAgU,GACAjb,EAAAgL,mBAAAiQ,EAAArV,OAEA5F,EAAAkb,oBAAAD,EAAArV,MAAAqV,EAAAtF,UAEAnP,QAGA3L,OAAAkI,KAAAgY,GAAAxH,QAAA,SAAAzX,GACA,IAAA8J,EAAAF,EAAA1K,QAAA6K;AAEAD,EAAAE,cAAA,CACAhK,GAAAA,EACA4V,KAAAqJ,EAAAjf,GAAA4V,KACA+D,SAAAsF,EAAAjf,GAAA2Z,SACAC,OAAAqF,EAAAjf,GAAA4Z,OACAxO,SAAA6T,EAAAjf,GAAAoL,WAGAlH,EAAAgL,mBAAApF,GAEA5F,EAAAkb,oBAAAtV,EAAAmV,EAAAjf,GAAA6Z,YAEAnP,MAEA,SAAAjJ,GACAyC,EAAAmb,IAAA,QAAA,+BAAA5d,GAEAkJ,SASA2U,cAAA,SAAAxV,GACAzI,KAAAke,+BAAAzV,EAAAjK,IAAA,aAAA2f,QAAA1V,IAEAoF,mBAAA,SAAApF,GACAzI,KAAAie,cAAAxV,GACAzI,KAAAgN,OAAAsB,WAAA7F,IAUA2V,YAAA,SAAA3V,EAAAvH,EAAA8M,GACAhO,KAAAke,+BAAAzV,EAAAjK,IAAA,aAAAqH,KAAA4C,EAAAvH,EAAA8M,IAUAI,gBAAA,SAAA3F,EAAAvH,EAAA+F,GACA,IAAA3G,EAAA,CACA+d,MAAAnd,EAAA1C,IAAA,sBACA8f,QAAApd,EAAA1C,IAAA,iBAAA,SAAA,OACA+f,YAAArd,EAAA1C,IAAA;AAEAwB,KAAAke,+BAAAzV,EAAAjK,IAAA,aAAA4P,gBAAA3F,EAAAnI,EAAA2G,IAOA0I,kBAAA,SAAAlH,EAAAnI,EAAA2G,GACA,OAAAwB,EAAAjK,IAAA,aACA,IAAA,MACAwB,KAAAqd,IAAA1N,kBAAAlH,EAAAnI,EAAA2G,KAIAuX,aAAA,SAAA/V,EAAAvH,GACA,OAAAuH,EAAAjK,IAAA,aACA,IAAA,MACAwB,KAAAqd,IAAAoB,MAAAhW,EAAAvH,KAIA+O,YAAA,SAAAxH,EAAAvH,EAAA8O,GACA,OAAAvH,EAAAjK,IAAA,aACA,IAAA,MACAwB,KAAAqd,IAAApN,YAAAxH,EAAAvH,EAAA8O,KAIA0O,sBAAA,SAAA/X,GACA,IAAAzF;AAEA,OAAAyF,EAAAgY,SACA,IAAA,MACAzd,EAAAlB,KAAA4e,eAAAjY,EAAAkY,MAAA;AACA;AAEA,IAAA,OACA3d,EAAAlB,KAAA8e,WAAAnY,EAAArG,OAAA,OAAAqG,EAAAkY,MAAA,QAIA3d,IACAA,EAAAjB,IAAA,aAAA,GAEA8e,MAAAC,QAAArY,EAAAsY,OAAAC,UACAhe,EAAAjB,IAAA,WAAA0G,EAAAsY,OAAAC,WAIAC,yBAAA,SAAAxY,GACA,IAAAzF,EAAAlB,KAAA4e,eAAAjY,EAAArG,OAAA;AAEAY,GACAA,EAAA8W,QAAArR,EAAAkY,MAAAN,cAGAa,8BAAA,SAAAzY,GAGA,IAAAzF,EAAAlB,KAAA4e,eAAAjY,EAAArG,OAAA;AAEAY,GACAA,EAAA+W,WAAAtR,EAAAkY,MAAAN,cAGAK,eAAA,SAAAS,GAIA,IAAAzG,EAAAyG,EAAAjc,MAAA,sCAAA,GACAqF,EAAAzI,KAAAgN,OAAAoP,OAAA,kBAAAxD;AAEA,GAAA7a,MAAAgd,QAAAtS,GACA0D,QAAA6C,KAAA,mCAAA4J;IADA,CAKA,IAAA1X,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,qBAAAiD;AAEA,IAAAthB,MAAAgd,QAAA7Z,GAKA,OAAAA;AAJAiL,QAAA6C,KAAA,+CAAAqQ,KAWAP,WAAA,SAAAQ,EAAAD,GACA,IAAA5W,EAAAzI,KAAAgN,OAAAoP,OAAA,oBAAAkD;AAEA,GAAAvhB,MAAAgd,QAAAtS,GACA0D,QAAA6C,KAAA,4CAAAsQ;IADA,CAKA,IAAApe,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,qBAAAiD;AAEA,IAAAthB,MAAAgd,QAAA7Z,GAKA,OAAAA;AAJAiL,QAAA6C,KAAA,+CAAAqQ,KAMA/F,eAAA,SAAA3S,GACA,GAAA,WAAAkW,EAAAlW,EAAAkY,OAAA,CACA,IAAAU,EAAA5Y,EAAAkY,MAAA,OACApW,EAAAzI,KAAAgN,OAAAoP,OAAA,oBAAAmD;AAEAxhB,MAAA0H,UAAAgD,IACAA,EAAA6Q,eAAA3S,EAAArG,OAAAie,eAIAiB,mBAAA,SAAA7Y,GACA,IAAAiS;AAEA,WAAAiE,EAAAlW,EAAArG,QACAsY,EAAAjS,EAAArG,OAAA,OAAA8C,MAAA,kBAAA,GACA,iBAAAuD,EAAAkY,QACAjG,EAAAjS,EAAAkY,MAAAzb,MAAA,mBAAA;AAGA,IAAAqF,EAAAzI,KAAAgN,OAAAoP,OAAA,kBAAAxD;AAEA,IAAA7a,MAAAgd,QAAAtS,GAAA,CACA,IAAAvH,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,qBAAAzV,EAAArG,OAAA;AAEAvC,MAAAgd,QAAA7Z,KACAiL,QAAA6C,KAAA,0DAAArI,GACAzF,EAAAlB,KAAAkP,cAAAzG,EAAA9B,EAAArG,OAAA;AAGA,IAAAmf,EAAAve,EAAA1C,IAAA,SACAkhB,EAAA/Y,EAAAsY,OAAAjP;AACA9O,EAAAjB,IAAA,QAAAyf,GAEA3hB,MAAA0H,UAAAga,IAAAC,IAAAD,IAAAve,EAAA1C,IAAA,YACAmhB,aAAAC,kBAAA,WACA,IAAAD,aAAAze,EAAAqT,KAAA,CACA9H,KAAA,cAAA1N,OAAA2gB,SAaA3B,oBAAA,SAAAtV,EAAA+P,GACA,IAAA9N,EAAA1K;AAEAwY,EAAApC,QAAA,SAAA/G,GACA3E,EAAAwE,cAAAzG,EAAA4G,MAGAH,cAAA,SAAAzG,EAAA4G,GACA,IAAAwQ,EAAA7f,KAAAke,+BAAAzV,EAAAjK,IAAA,aAEA0C,EAAAyb,EAAA9e,QAAA6K,OAAA,CACAD,MAAAA,EACA8L,KAAAlF,EACAoH,mBAAAoJ,EAAAC,kBAAArX,EAAA4G;AAYA,OATArP,KAAAoe,YAAA3V,EAAAvH,EAAA,QACAuH,EAAAjK,IAAA,YAAA8P,WAAApN,GAEAlB,KAAAqN,QAAAO,UAAAnF,GAEAvH,EAAA1C,IAAA,aACAwB,KAAA8C,iBAAA2F,EAAAvH,EAAAoD,EAAAzG,QAAAwW,MAAA,GAAAtR,MAAA,cAGA7B,GAEA4B,iBAAA,SAAA2F,EAAAvH,EAAAuD,GACA,IAGAsb,EAHAjT,EAAA9M,KAEAggB,EAAAle,UAAA9C,OAAA,QAAAgN,IAAAlK,UAAA,GAAAA,UAAA,GAAA;AASA,GALAie,EADA7e,EAAA1C,IAAA,kCACA,EAAA8F,EAAAzG,SAAAqD,EAAA1C,IAAA,kCAAAuG,SAAAib,EAAA,QAEA1b,EAAAzG,QAAAwW,MAAAtP,SAAAib,EAAA,SAGAvb,EAAAwb,SAAAF,EAAA,OAKA,OAAA/f,KAAAkgB,oBAAAzX,EAAAvH,EAAAuD,GAAA1B,MAAA,WAEA,OAAA+J,EAAAhK,iBAAA2F,EAAAvH,EAAAuD,EAAAM,SAAA,EAAA;AANA7D,EAAAjB,IAAA,gCAAAwE,IASAyb,oBAAA,SAAAzX,EAAAvH,EAAAuD,GACA,IAAA0b,EAAAngB,KAEAogB,EAAA,GAAArhB,OAAAtB,EAAAI,QAAAwiB,cAAA,KAAAthB,OAAA0J,EAAAjK,IAAA,QAAAqQ,cAAA,cAAA9P,OAAAmC,EAAA1C,IAAA,QAAA;AAEA,OADA4hB,GAAA3b,EAAAoC,OAAA,cACA7G,KAAAod,KAAAkD,QAAAF,EAAA,CACApS,KAAA,MACAuS,SAAA,SACAzW,KAAA,SAAA0W,GACAziB,MAAAS,IAAAgiB,EAAA,kBAAApK,QAAA,SAAAzP,GACAwZ,EAAAnC,IAAA,eAAArX;AAEA,IAAA8Z,EAAA3S,EAAAjQ,QAAA6K,OAAA,CACAsF,KAAA,eACAvJ,KAAA,IAAAwJ,KAAAtH,EAAA+Z,WACAxS,SAAAvH,EAAAga,KACA1Z,QAAAN,EAAA3C;AAGA9C,EAAA6W,WAAA0I;AAEA,IAAAG,EAAA7iB,MAAAS,IAAAgiB,EAAA;AACAtf,EAAAjB,IAAA,gCAAAqE,EAAAzG,QAAAwW,IAAAuM,EAAA9a,QAAA,MAAA,SACA/C,MAAA,SAAA4G,GAGA,MAFAwW,EAAAnC,IAAA,aAAA,iCAAArU,GAEAA,KAGAmG,kBAAA,SAAArH,EAAAoY,GACA,IAAAhB,EAAA7f,KAAAke,+BAAAzV,EAAAjK,IAAA,aAEA0C,EAAA0b,EAAA/e,QAAA6K,OAAA,CACAD,MAAAA,EACA8L,KAAAsM,EACApK,mBAAAoJ,EAAAC,kBAAArX,EAAAoY;AAOA,OAFA7gB,KAAAoe,YAAA3V,EAAAvH,EAAA,UACAuH,EAAAjK,IAAA,YAAA8P,WAAApN,GACAA,GAEAoO,cAAA,SAAA7G,EAAA4G,GACA,IAAAnO,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,OAAA/M;AAIA,OAHArP,KAAAwe,aAAA/V,EAAAvH,GACAuH,EAAAjK,IAAA,YAAA0Z,aAAAhX,GACAlB,KAAAqN,QAAAO,UAAAnF,GACAvH,GAEAgd,+BAAA,SAAA5F,GACA,OAAAtY,KAAAxB,IAAA8Z,EAAAoB,cAUA8D,yBAAA,SAAA7W,GAGA,OAFA3G,KAAAge,IAAA,GAAAjf,OAAA4H,EAAAgY,QAAA,cAAAhY,GAEAA,EAAA,UACA,IAAA,OACA,IAAA8B,EAAAzI,KAAAgN,OAAAoP,OAAA,oBAAAzV,EAAAkY,MAAA;AAEA9gB,MAAAgd,QAAAtS,KACAA,EAAAzI,KAAAgN,OAAA+J,KAAA,SAAAtO,GACA,OAAAA,EAAAjK,IAAA,8BAAAoQ,SAAAjI,EAAAkY,MAAA,WAIA9gB,MAAAgd,QAAAtS,GAGA0D,QAAA6C,KAAA,wCAAArI,GAFA3G,KAAAxB,IAAAmI,EAAAgY,SAAAmC,oBAAArY,EAAA9B,KAkBA8W,uBAAA,SAAA9W,GAGA,OAFA3G,KAAAge,IAAA,GAAAjf,OAAA4H,EAAAgY,QAAA,YAAA,aAAAhY,GAEAA,EAAA,UACA,IAAA,UACA,eAAAA,EAAAsY,OAAA,UACAjf,KAAA0e,sBAAA/X;AAGA;AAEA,IAAA,OACA3G,KAAA+gB,kBAAApa;AACA;AAEA,IAAA,QACA3G,KAAAof,8BAAAzY;AACA;AAEA,IAAA,OACA,OAAAA,EAAAsY,OAAA,UACA,IAAA,UACA,IAAA,KACAjf,KAAAke,+BAAAvX,EAAAgY,SAAAqC,oBAAAra,GAIA;AAEA,IAAA,SACA,OAAAA,EAAAsY,OAAA,UACA,IAAA,QACAjf,KAAAwf,mBAAA7Y;AACA;AAEA,IAAA,UACA3G,KAAAsZ,eAAA3S;AACA;AAEA,IAAA,WACA3G,KAAAsd,KAAA2D,qBAAAta;AACA;AAEA,IAAA,QACAwF,QAAA6C,KAAA,2BAAArI,EAAAkY,MAAA,OAAAlY,EAAAsY,OAAAhY,YAYA8Z,kBAAA,SAAApa,GACA,GAAAA,EAAAsY,OAAA,UAAA,UAAAtY,EAAAsY,OAAA,SAAA,CAEA,IAAA/d,EAAAlB,KAAA8e,WAAAnY,EAAArG,OAAA,OAAAqG,EAAAkY,MAAA;AAEA9gB,MAAA0H,UAAAvE,GACAA,EAAAjB,IAAA,aAAA,GAEAkM,QAAA6C,KAAA,2CAAArI,QAGA3G,KAAAmf,yBAAAxY,IAQA+W,uBAAA,SAAA/W,GACA3G,KAAAge,IAAA,aAAArX,IAOAqX,IAAA,WACA,IAAAkD,GAEAA,EAAAlhB,KAAAsa,QAAA0D,IAAAnc,MAAAqf,EAAApf;AAIAxE,EAAAO,QAAAQ,ICrgBAhB,OAAA,wCAAA,CAAA,UAAA,4CAAA,SAAAC,EAAA6jB,GAGAzjB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA2iB,EAAAtjB,aCTAR,OAAA,gDAAA,CAAA,UAAA,8BAAA,SAAAC,EAAA8jB,GAGA1jB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IAAAQ,EAAA+iB,EAAAvjB;AACAP,EAAAO,QAAAQ,ICRAhB,OAAA,+BAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAof,QAAAlf,OAAA,CACAojB,SAAA,EACAC,aAAA,KACAC,YAAA,KACAnc,KAAA,WACApF,KAAA4B,OAAAC,MAAA7B,KAAA8B,WAEA9B,KAAAC,IAAA,eAAA,CAAA,aAAA,QAAA,OAAA,QAAA,UAAA,cAAA,eAAA,OAAA,iBAAA,gBAAA,eAAA,aAAA,MAAA,OAAA,aAAA,iBACAD,KAAAC,IAAA,cAAA,CAAA,aAAA,QAAA,OAAA,QAAA,OAAA,eAAA,iBAAA,gBAAA,aAAA,MAAA,OAAA,UAAA,cAAA,kBAEA+d,IAAA,SAAAhQ,GACA,IAAAhO,KAAAshB,aAAA1S,SAAAZ,GACA,MAAA,IAAAwT,MAAA,kCAAAziB,OAAAiP,EAAA;AAGA,GAAAhO,KAAAuhB,YAAA3S,SAAAZ,IAAAhO,KAAAqhB,QAAA,CACA,IAAAlF,EAAA4C,MAAA7B,UAAAnO,MAAAhH,KAAAjG;AACAqa,EAAA,GAAA,IAAApd,OAAAod,EAAA,GAAA,KACAhQ,QAAAC,MAAAvK,MAAA,KAAAsa,KAGAsF,IAAA,SAAAzT,GACAhO,KAAAuhB,YAAAG,UAAA1T,IAEA2T,OAAA,SAAA3T,GACAhO,KAAAuhB,YAAArJ,aAAAlK,IAEA4T,QAAA,WACA5hB,KAAAC,IAAA,WAAA,IAEA4hB,OAAA,WACA7hB,KAAAC,IAAA,WAAA;AAIA3C,EAAAO,QAAAQ,IC3CAhB,OAAA,+BAAA,CAAA,UAAA,+BAAA,mCAAA,SAAAC,EAAAgH,EAAA7G,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AACA,IACAW,EADAT,MACAS,IAEAH,EAAAiG,EAAAzG,QAAAI,OAAA,CACA6jB,cAAAtjB,EAAAf,EAAAI,QAAA;AAGAP,EAAAO,QAAAQ,ICdAhB,OAAA,sCAAA,CAAA,UAAA,4BAAA,sBAAA,kCAAA,mCAAA,SAAAC,EAAAiL,EAAAwZ,EAAAC,EAAAvkB,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAof,QAAAlf,OAAA,CACA0f,GAAA,KACAvY,KAAA,WACApF,KAAA4B,OAAAC,MAAA7B,KAAA8B;AAEA,IAAA6b,EAAA,IAAAoE,EAAAlkB,QAAA,CACAokB,QAAA,CAAAD,EAAAnkB,QAAAA;AAEA8f,EAAAuE,OAAAC,MAAA,SAAA,MACAxE,EAAAyE,QAAAP,OAAA,YACA7hB,KAAAC,IAAA,KAAA0d,IAEAE,gBAAA,WACA,IAAAwE,EAAA5kB,EAAAI,QAAAie,aAAA/E,KAAA,SAAAuL,GACA,OAAAA,EAAA3jB,KAAAlB,EAAAI,QAAAyd,iBAGAa,EAAA,CACAxd,GAAA0jB,EAAA1jB,GACA4V,KAAA8N,EAAA9N,KACA+D,SAAA+J,EAAA/J,SACAC,OAAA8J,EAAA9J,OACAC,SAAA,CAAA,eAAA,UAAA,cAAA,iBAAA,cACAzO,SAAAsY,EAAAtY;AAGA,OADAoS,EAAA5D,OAAArK,SAAA4G,OAAAgG,OAAA,qBACA9a,KAAA2d,GAAAnC,OAAAxO,OAAAuV,MAAApG,GAAArS,KAAA,WACAqC,QAAAC,MAAA,kBAAA;AACA,IAAAoM,EAAA2D,EAAA3D;OACA2D,EAAA3D;AAEA,IAAA/P,EAAAF,EAAA1K,QAAA6K;AAGA,OADAD,EAAAE,cAAAwT,GACA,CACA1T,MAAAA,EACA+P,SAAAA,MAIA5K,UAAA,SAAAnF,GACA,OAAAzI,KAAA2d,GAAAnC,OAAAxO,OAAAuV,MAAA9Z,EAAAG,aAAAkB,KAAA,WACA,OAAAqC,QAAAC,MAAA,kBAAA,eAAArN,OAAA0J,EAAAjK,IAAA,YACAuE,MAAA,SAAAgJ,GACA,OAAAI,QAAAxC,MAAA,uBAAAoC,MAGAmQ,YAAA,SAAAzT,GACA,OAAAzI,KAAA2d,GAAAnC,OAAAxO,OAAA2U,OAAAlZ,EAAAjK,IAAA,OAAAsL,KAAA,WACA,OAAAqC,QAAAC,MAAA,kBAAA,iBAAArN,OAAA0J,EAAAjK,IAAA,QAAA;AAKAlB,EAAAO,QAAAQ,IC9DAhB,OAAA,sCAAA,CAAA,UAAA,4DAAA,SAAAC,EAAAklB,GAgBA,SAAAC,EAAAha,EAAAia,GACA,IAAAC,EAAA,CACAhE,QAAA,MACAE,MAAApW,EAAAjK,IAAA;AAEA,OAAAT,MAAAc,EAAAZ,OAAA,GAAA0kB,EAAAD,GAaA,SAAAE,EAAAna,EAAAnI,EAAA2G,GAEA,OAAAwb,EAAAha,EAAA,CACA6V,QAAA,OACAhe,OAAAA,EACA2e,OAAA,CACAX,QALAxc,UAAA9C,OAAA,QAAAgN,IAAAlK,UAAA,GAAAA,UAAA,GAAA,UAMAmF,QAAAA,KAtCAvJ,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AA6CA,IAAAQ,EAAAN,MAAAof,QAAAlf,OAAA,CACAqc,OAAAvc,MAAAsD,OAAAC,UACAF,KAAArD,MAAAsD,OAAAC,UASA6c,QAAA,SAAA1V,GACA,IAAAoa,EAAA,CACAxE,MAAA5V,EAAAjK,IAAA,qBACA8f,QAAA,SACAC,YAAA9V,EAAAjK,IAAA;AAEA2N,QAAAC,MAAA,eAAAyW,GACA7iB,KAAAyV,UAAAqN,gBAAAplB,OAAAgL,OAAAma;AACA,IAAAE,EAAAN,EAAAha,EAAA,CACAwW,OAAA,CACAX,QAAA,cACA0E,KAAAva,EAAAjK,IAAA,mBACA+Z,OAAA9P,EAAAjK,IAAA,mBACAqa,KAAAc,SAAAlR,EAAAjK,IAAA,eAAA,IACAsa,OAAArQ,EAAAjK,IAAA;AAGAwB,KAAAge,IAAA,MAAA,4BAAA+E,GACA/iB,KAAAyV,UAAA8H,OAAA0F,KAAA,cAAAF,IAEAjC,oBAAA,SAAArY,EAAA9B,GACA,IAAAzF,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,qBAAAzV,EAAArG,OAAA;AAEAY,GACAlB,KAAAkjB,eAAAza,EAAAvH,IAQA2E,KAAA,SAAA4C,EAAAvH,EAAA8M,GACA,OAAAA,GACA,IAAA,OACAhO,KAAAyV,UAAAqN,gBAAAplB,OAAAgL,OAAA,CACA4V,QAAAtQ,EACAqQ,MAAAnd,EAAA1C,IAAA,sBACA+f,YAAArd,EAAA1C,IAAA;AAEA,IAAA2kB,EAAAV,EAAAha,EAAA,CACA6V,QAAA,OACAhe,OAAAY,EAAA1C,IAAA,sBACAygB,OAAA;AAEAjf,KAAAge,IAAA,MAAA,kBAAAmF,GACAnjB,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAE;AACA;AAEA,IAAA,SACAjiB,EAAAjB,IAAA,aAAA,KASAmO,gBAAA,SAAA3F,EAAAnI,EAAA2G,GACA,IAAAN,EAAAic,EAAAna,EAAAnI,EAAA2G;AACAjH,KAAAge,IAAA,OAAA,sBAAArX,GACA3G,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAtc,IAOAgJ,kBAAA,SAAAlH,EAAAnI,EAAA2G,GACA,IAAAN,EAAAic,EAAAna,EAAAnI,EAAA2G,EAAA;AACAjH,KAAAge,IAAA,OAAA,sBAAArX,GACA3G,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAtc,IAQAqa,oBAAA,SAAAra,GACA,IAAAiS,EAAAjS,EAAAkY,MAAA,OAAAzb,MAAA,mBAAA,GACAqF,EAAAzI,KAAAxB,IAAA,eAAA4d,OAAA,kBAAAxD;AAEA,GAAA7a,MAAAgd,QAAAtS,GACA0D,QAAA6C,KAAA,mCAAArI;IADA,CAKA,IAAAzF,EAAAlB,KAAAojB,qBAAA3a,EAAA9B,GACA8Z,GAAA,EAAA+B,EAAA3kB,SAAA8I;AAEA8Z,EAAAjiB,IAAA,cAAAiK,EAAAjK,IAAA,iBACA0C,EAAA6W,WAAA0I,KAQAhC,MAAA,SAAAhW,EAAAvH,GACA,IAAAA,EAAA1C,IAAA,iBAAA,CAGAwB,KAAAyV,UAAAqN,gBAAAplB,OAAAgL,OAAA,CACA4V,QAAA,OACAD,MAAAnd,EAAA1C,IAAA,sBACA+f,YAAArd,EAAA1C,IAAA;AAEA,IAAA6kB,EAAAZ,EAAAha,EAAA,CACA6V,QAAA,QACAhe,OAAAY,EAAA1C,IAAA,sBACAygB,OAAA;AAEAjf,KAAAge,IAAA,QAAA,kBAAAqF,GACArjB,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAI,KAQApT,YAAA,SAAAxH,EAAAvH,EAAA8O,GACA,IAAAsT,EAAAb,EAAAha,EAAA,CACA6V,QAAA,SACAhe,OAAAY,EAAA1C,IAAA,sBACAygB,OAAA,CACAX,QAAA,QACAtO,MAAAA;AAGAhQ,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAK,IAOAJ,eAAA,SAAAza,EAAAvH,GACA,IAAAqiB,EAAAd,EAAAha,EAAA,CACA6V,QAAA,UACAhe,OAAAY,EAAA1C,IAAA,sBACAygB,OAAA,CACAX,QAAA;AAGAte,KAAAge,IAAA,MAAA,6BAAAuF,GACAvjB,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAM,IAWAzD,kBAAA,SAAArX,EAAA4G,GACA,MAAA,SAAAtQ,OAAA0J,EAAAjK,IAAA,mBAAA,KAAAO,OAAAsQ,IAWA+T,qBAAA,SAAA3a,EAAA9B,GACA,IAAA6c,EAAAtiB;AAoBA,OAlBAuH,EAAAjK,IAAA,kBAAAmI,EAAArG,OAAAie,aAEAiF,EAAA7c,EAAAkY,MAAAN,aAAA5X,EAAAkY,MAAA,QACA3d,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,OAAAoH,MAGAtiB,EAAAlB,KAAAoB,KAAA0O,kBAAArH,EAAA+a,MAIAA,EAAA7c,EAAArG,OAAAie,aACArd,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,OAAAoH,MAGAtiB,EAAAlB,KAAAoB,KAAA8N,cAAAzG,EAAA+a,KAIAtiB,GAOA8c,IAAA,WACA,IAAAkD,GAEAA,EAAAlhB,KAAAsa,QAAA0D,IAAAnc,MAAAqf,EAAApf;AAIAxE,EAAAO,QAAAQ,IC7QAhB,OAAA,uCAAA,CAAA,UAAA,4DAAA,SAAAC,EAAAklB,GAgBA,SAAAC,EAAAha,EAAAia,GACA,IAAAC,EAAA,CACAhE,QAAA,OACAE,MAAApW,EAAAjK,IAAA;AAEA,OAAAT,MAAAc,EAAAZ,OAAA,GAAA0kB,EAAAD,GAlBAhlB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AA6CA,IAAAQ,EAAAN,MAAAof,QAAAlf,OAAA,CACAqc,OAAAvc,MAAAsD,OAAAC,UACAF,KAAArD,MAAAsD,OAAAC,UAKA6c,QAAA,SAAA1V,GACA,IAAAoW,EAAApW,EAAAjK,IAAA;AACAwB,KAAAyV,UAAAqN,gBAAAplB,OAAAgL,OAAA,CACA2V,MAAAQ,EACAP,QAAA,SACAC,YAAA9V,EAAAjK,IAAA;AAEA,IAAAilB,EAAA,CACA5E,MAAAA,EACAF,QAAA,OACAM,OAAA,CACAX,QAAA,cACApb,SAAAuF,EAAAjK,IAAA,mBACAua,SAAAtQ,EAAAjK,IAAA,mBACA+Z,OAAA9P,EAAAjK,IAAA,mBACAqa,KAAAc,SAAAlR,EAAAjK,IAAA,eAAA,IACAklB,SAAA,iBAGAC,EAAA,CACArF,QAAA,UACAK,QAAA,OACAE,MAAAA;AAEA7e,KAAAge,IAAA,OAAA,gCACAhe,KAAAyV,UAAA8H,OAAA0F,KAAA,cAAAQ,GACAzjB,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAU,IAEA7C,oBAAA,SAAArY,EAAA9B,GACA,IAAA0Y,EAAA1Y,EAAArG,OAAA,OAAAoO,MAAA,KAAA,GACAxN,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,qBAAAiD;AAEAne,EACAlB,KAAAkjB,eAAAza,EAAAvH,GAEAiL,QAAA6C,KAAA,0CAAArI,IAYAd,KAAA,SAAA4C,EAAAvH,EAAA8M,GACAhO,KAAAyV,UAAAqN,gBAAAplB,OAAAgL,OAAA,CACA4V,QAAAtQ,EACAqQ,MAAAnd,EAAA1C,IAAA,sBACA+f,YAAArd,EAAA1C,IAAA;AAEA,IAAA2kB,EAAAV,EAAAha,EAAA,CACA6V,QAAA,OACAO,MAAA,CACAP,QAAA,SACAD,MAAA5V,EAAAjK,IAAA,qBACA+f,YAAA9V,EAAAjK,IAAA,oBAEA8B,OAAA,CACA+d,MAAAnd,EAAA1C,IAAA,sBACA8f,QAAAtQ;AAGAhO,KAAAge,IAAA,OAAA,kBAAAmF,GACAnjB,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAE,IAOA/U,gBAAA,SAAA3F,EAAAnI,EAAA2G,GACA,IAAAN,EAlGA,SAAA8B,EAAAnI,EAAA2G,GAEA,OAAAwb,EAAAha,EAAA,CACA6V,QAAA,OACAhe,OAAAA,EACA2e,OAAA,CACAX,QALAxc,UAAA9C,OAAA,QAAAgN,IAAAlK,UAAA,GAAAA,UAAA,GAAA,UAMAmF,QAAAA,KA2FA2b,CAAAna,EAAAnI,EAAA2G;AACAjH,KAAAge,IAAA,OAAA,sBAAArX,GACA3G,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAtc,IAEAsa,qBAAA,SAAAta,GACA,GAAA,SAAAA,EAAArG,OAAA,SAAA,CACA,IAAAsjB,EAAAjd,EAAArG,OAAA,OAIAY,EAHAlB,KAAAxB,IAAA,eAAAuY,KAAA,SAAAtO,GACA,OAAAA,EAAAjK,IAAA,uBAAAoQ,SAAAgV,KAEAplB,IAAA,YAAA4d,OAAA,qBAAAwH;AAEA1iB,IACA,YAAAyF,EAAAsY,OAAA4E,SACA3iB,EAAA+W,WAAAtR,EAAAkY,MAAAN,aAEArd,EAAA8W,QAAArR,EAAAkY,MAAAN,mBAIApS,QAAAC,MAAA,mBAAAzF,EAAAkY,MAAA,OAAAlY,EAAAsY,OAAA4E,SAAAld,EAAAsY,OAAA6E,SASA9C,oBAAA,SAAAra,GACA,IAAA5I,MAAAgd,QAAApU,EAAAsY,OAAAhY,SAAA,CAIA,IAAAwB,EAAAzI,KAAA+jB,mBAAApd;AAEA,GAAA5I,MAAAgd,QAAAtS,GACA0D,QAAA6C,KAAA,mCAAArI;IADA,CAKA,IAAAzF,EAAAlB,KAAAojB,qBAAA3a,EAAA9B,GACA8Z,GAAA,EAAA+B,EAAA3kB,SAAA8I;AAEA8Z,EAAAjiB,IAAA,cAAAiK,EAAAjK,IAAA,iBACA0C,EAAA6W,WAAA0I,MAWAyC,eAAA,SAAAza,EAAAvH,GACA,IAAAqiB,EAAAd,EAAAha,EAAA,CACA6V,QAAA,UACAhe,OAAAY,EAAA1C,IAAA,sBACAygB,OAAA,CACAX,QAAA;AAGAte,KAAAge,IAAA,OAAA,6BAAAuF,GACAvjB,KAAAyV,UAAA8H,OAAA0F,KAAA,UAAAM,IAWAzD,kBAAA,SAAArX,EAAA4G,GACA,OAAAA,GAUA0U,mBAAA,SAAApd,GACA,IAAAid,EAAAjd,EAAArG,OAAA;AAEA,MAAA,SAAAqG,EAAArG,OAAA,SACAN,KAAAxB,IAAA,eAAAuY,KAAA,SAAAtO,GACA,OAAAA,EAAAjK,IAAA,uBAAAoQ,SAAAgV,KAGA5jB,KAAAxB,IAAA,eAAA4d,OAAA,oBAAAwH,IAYAR,qBAAA,SAAA3a,EAAA9B,GACA,IACAzF,EADA0iB,EAAAjd,EAAArG,OAAA;AAiBA,MAdA,SAAAqG,EAAArG,OAAA,UACAY,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,qBAAAwH,MAGA1iB,EAAAlB,KAAAoB,KAAA8N,cAAAzG,EAAAmb,KAGA1iB,EAAAuH,EAAAjK,IAAA,YAAA4d,OAAA,qBAAAzV,EAAAkY,MAAA,WAGA3d,EAAAlB,KAAAoB,KAAA0O,kBAAArH,EAAA9B,EAAAkY,MAAA,SAIA3d,GAOA8c,IAAA,WACA,IAAAkD,GAEAA,EAAAlhB,KAAAsa,QAAA0D,IAAAnc,MAAAqf,EAAApf;AAIAxE,EAAAO,QAAAQ,IC/QAhB,OAAA,sCAAA,CAAA,UAAA,mCAAA,mCAAA,SAAAC,EAAA0mB,EAAAvmB,GAGAC,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAomB,EAAAD,EAAAnmB,QAAAI;AAEAgmB,EAAAC,YAAA,CACAC,aAAA,WACA,MAAA,CACAjW,SAAA,KACAmN,aAAA5d,EAAAI,QAAAyd,eACAC,eAAA;AAIA,IAAAld,EAAA4lB;AACA3mB,EAAAO,QAAAQ,ICpBAhB,OAAA,qCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,wvBACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,kCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,kyGACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,uCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,gUACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ;AChBAhB,OAAA,qCAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,8jBACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,4CAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,aAAA;AAEA,IAAAQ,EAAAN,MAAAwC,SAAAC,SAAA,CACA7B,GAAA,WACA8B,MAAA,uRACAC,KAAA,CACAC,WAAA;AAIArD,EAAAO,QAAAQ,IChBAhB,OAAA,sCAAA,CAAA,UAAA,sCAAA,SAAAC,EAAA8mB,GAGA1mB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA4lB,EAAAvmB,aCTAR,OAAA,mCAAA,CAAA,UAAA,mCAAA,SAAAC,EAAAe,GAGAX,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAH,EAAAR,aCTAR,OAAA,mCAAA,CAAA,UAAA,mCAAA,SAAAC,EAAA+mB,GAGA3mB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA6lB,EAAAxmB,aCTAR,OAAA,gCAAA,CAAA,UAAA,gCAAA,SAAAC,EAAAgnB,GAGA5mB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA8lB,EAAAzmB,aCTAR,OAAA,qCAAA,CAAA,UAAA,qCAAA,SAAAC,EAAAinB,GAGA7mB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAA+lB,EAAA1mB,aCTAR,OAAA,kCAAA,CAAA,UAAA,kCAAA,SAAAC,EAAAknB,GAGA9mB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAgmB,EAAA3mB,aCTAR,OAAA,qCAAA,CAAA,UAAA,qCAAA,SAAAC,EAAAmnB,GAGA/mB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAimB,EAAA5mB,aCTAR,OAAA,iCAAA,CAAA,UAAA,iCAAA,SAAAC,EAAAonB,GAGAhnB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAkmB,EAAA7mB,aCTAR,OAAA,uCAAA,CAAA,UAAA,uCAAA,SAAAC,EAAAqnB,GAGAjnB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAmmB,EAAA9mB,aCTAR,OAAA,mCAAA,CAAA,UAAA,mCAAA,SAAAC,EAAAsnB,GAGAlnB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAomB,EAAA/mB,aCTAR,OAAA,mCAAA,CAAA,UAAA,mCAAA,SAAAC,EAAAunB,GAGAnnB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAqmB,EAAAhnB,aCTAR,OAAA,oCAAA,CAAA,UAAA,oCAAA,SAAAC,EAAAwnB,GAGApnB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAsmB,EAAAjnB,aCTAR,OAAA,iCAAA,CAAA,UAAA,iCAAA,SAAAC,EAAAynB,GAGArnB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAumB,EAAAlnB,aCTAR,OAAA,gCAAA,CAAA,UAAA,gCAAA,SAAAC,EAAA0nB,GAGAtnB,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAF,OAAAC,eAAAL,EAAA,UAAA,CACAiB,YAAA,EACAC,IAAA,WACA,OAAAwmB,EAAAnnB,aCTAR,OAAA,2DAAA,CAAA,UAAA,+BAAA,SAAAC,EAAAwQ,GAGApQ,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,QAEA,SAAA8I,GAQA,OAPAmH,EAAAjQ,QAAA6K,OAAA,CACAsF,KAAA,OAAArH,EAAAsY,OAAA,SAAA,kBAAA,eACAxa,KAAA,IAAAwJ,KAAAtH,EAAAse,WACA/W,SAAAvH,EAAAkY,MAAAN,aAAA5X,EAAAkY,MAAA,OACA5X,QAAAN,EAAAsY,OAAAhY,aCbA5J,OAAA,+CAAA,CAAA,WAAA,SAAAC,GAGAI,OAAAC,eAAAL,EAAA,aAAA,CACAM,OAAA,IAEAN,EAAAO,QAEA,SAAAqnB,GAMA,IALA,IAAAC,EAAA,IAAAC,QAAA,EAAAF,EAAAlmB,OAAA,GAAA,GACAqmB,GAAAH,EAAAC,GAAArf,QAAA,KAAA,KAAAA,QAAA,KAAA,KACAwf,EAAAxQ,OAAAyQ,KAAAF,GACAG,EAAA,IAAAC,WAAAH,EAAAtmB,QAEA0mB,EAAA,EAAAA,EAAAJ,EAAAtmB,SAAA0mB,EACAF,EAAAE,GAAAJ,EAAAK,WAAAD;AAGA,OAAAF,KClBAnoB,OAAA,kCAAA,GAAA,WAEA,IACA,IAAAuoB,EAAAC,kCACAC,EAAA/jB,SAAAgkB,cAAA,cAAAH,EAAA,MAAAI,aAAA,WAGAC,EAAA,CAAApoB,QAFA6O,KAAAwZ,MAAAC,SAAAL;AAMA,OAFApoB,OAAAC,eAAAsoB,EAAA,aAAA,CAAAroB,OAAA,IAEAqoB,EAEA,MAAAla,GACA,MAAA,IAAAyV,MAAA,kDAAAoE,EAAA,SCbAQ,cACAC,QAAA,oBAAA,QAAA3d,OAAA,CAAA6L,KAAA,eAAAvC,QAAA","file":"hyperchannel.js","sourcesContent":["'use strict';\n\n\n","define(\"hyperchannel/app\", [\"exports\", \"hyperchannel/resolver\", \"ember-load-initializers\", \"hyperchannel/config/environment\"], function (_exports, _resolver, _emberLoadInitializers, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n  var _default = App;\n  _exports.default = _default;\n});","define(\"hyperchannel/components/-lf-get-outlet-state\", [\"exports\", \"liquid-fire/components/-lf-get-outlet-state\"], function (_exports, _lfGetOutletState) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfGetOutletState.default;\n    }\n  });\n});","define(\"hyperchannel/components/app-container/component\", [\"exports\", \"ember-gestures/mixins/recognizers\"], function (_exports, _recognizers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  function isElementOf(id, element) {\n    return element.id === id || Ember.$(element).parents(\"#\".concat(id)).length > 0;\n  }\n\n  var _default = Ember.Component.extend(_recognizers.default, {\n    tagName: 'div',\n    classNames: ['app-container'],\n    classNameBindings: ['showGlobalMenu:global-menu-open', 'showChannelMenu:channel-menu-open'],\n    recognizers: 'swipeleft swiperight tap',\n    // Hammer.js manager options\n    // Used by the ember-gestures recognizer Mixin,\n    // needed to fix swipe gestures in Chrome.\n    managerOptions: Ember.computed('', function () {\n      return {\n        domEvents: true,\n        touchAction: 'auto',\n        inputClass: Hammer.SUPPORT_POINTER_EVENTS ? Hammer.PointerEventInput : Hammer.TouchInput\n      };\n    }),\n    swipeLeft: function swipeLeft() {\n      this.set('showGlobalMenu', false);\n    },\n    swipeRight: function swipeRight() {\n      this.set('showGlobalMenu', true);\n    },\n    tap: function tap(e) {\n      if (this.showGlobalMenu && !isElementOf('channel-header', e.target) && !isElementOf('global', e.target)) {\n        this.set('showGlobalMenu', false);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/app-container/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"F9s5KxsP\",\n    \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[14,1],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/app-container/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-container/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  function scrollToBottom() {\n    Ember.$('#channel-content').animate({\n      scrollTop: Ember.$('#channel-content ul').height()\n    }, '500');\n  }\n\n  var _default = Ember.Component.extend({\n    elementId: 'channel',\n    newMessage: '',\n    channel: null,\n    scrollingDisabled: false,\n    coms: Ember.inject.service(),\n    messagesUpdated: Ember.observer('channel.messages.[]', function () {\n      if (!this.scrollingDisabled) {\n        Ember.run.scheduleOnce('afterRender', scrollToBottom);\n      }\n    }),\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      Ember.run.scheduleOnce('afterRender', scrollToBottom); // We need to define an empty handler for swipe events on the\n      // #channel-content element, so that the actual handler of the app container\n      // component gets triggered\n\n      Ember.run.scheduleOnce('afterRender', function () {\n        Hammer(document.getElementById('channel-content')).on('swipe', function () {});\n      });\n    },\n    focusMessageInputField: function focusMessageInputField() {\n      var inputEl = this.$('#message-field').get(0);\n      inputEl.focus();\n    },\n    actions: {\n      processMessageOrCommand: function processMessageOrCommand() {\n        if (this.newMessage.substr(0, 1) === \"/\") {\n          this.onCommand(this.newMessage);\n        } else {\n          this.onMessage(this.newMessage);\n        }\n      },\n      menu: function menu(which, what) {\n        this.menu(which, what);\n      },\n      loadPreviousMessages: function loadPreviousMessages() {\n        var _this = this;\n\n        this.set('scrollingDisabled', true);\n        this.coms.loadLastMessages(this.get('channel.space'), this.channel, this.get('channel.searchedPreviousLogsUntilDate')).catch(function () {// TODO what to do here?\n        }).finally(function () {\n          _this.set('scrollingDisabled', false);\n        });\n      },\n      addUsernameMentionToMessage: function addUsernameMentionToMessage(username) {\n        var msg = this.newMessage;\n\n        if (!msg.match(new RegExp(\"^\".concat(username)))) {\n          this.set('newMessage', \"\".concat(username, \": \").concat(msg));\n        }\n\n        this.focusMessageInputField();\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-container/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"0S0wPR1S\",\n    \"block\": \"{\\\"symbols\\\":[\\\"username\\\",\\\"message\\\"],\\\"statements\\\":[[7,\\\"main\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[11,\\\"id\\\",\\\"channel-header\\\"],[11,\\\"onClick\\\",\\\"\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[11,\\\"id\\\",\\\"channel-name\\\"],[12,\\\"class\\\",[27,\\\"if\\\",[[23,[\\\"channel\\\",\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null]],[9],[1,[23,[\\\"channel\\\",\\\"name\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"id\\\",\\\"channel-title\\\"],[9],[1,[23,[\\\"channel\\\",\\\"formattedTopic\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"nav\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-megaphone\\\"],[9],[10],[10],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-mute\\\"],[9],[10],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[3,\\\"action\\\",[[22,0,[]],\\\"menu\\\",\\\"global\\\",\\\"toggle\\\"]],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"section\\\"],[11,\\\"id\\\",\\\"channel-content\\\"],[11,\\\"class\\\",\\\"main\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"load-previous\\\"],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n        Load previous messages\\\\n      \\\"],[3,\\\"action\\\",[[22,0,[]],\\\"loadPreviousMessages\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"channel\\\",\\\"sortedMessages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n          \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"type\\\"]]],[[\\\"message\\\",\\\"onUsernameClick\\\"],[[22,2,[]],[27,\\\"action\\\",[[22,0,[]],\\\"addUsernameMentionToMessage\\\"],null]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"no-messages discreet\\\"],[9],[0,\\\"No recent messages to display.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"no-messages discreet\\\"],[9],[0,\\\"No Kosmos logs configured for this channel. \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"https://wiki.kosmos.org/Setting_up_channel_logs\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[11,\\\"rel\\\",\\\"noopener\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Learn more\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"footer\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"section\\\"],[11,\\\"id\\\",\\\"new-message\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"form\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"channel-input-field\\\",null,[[\\\"value\\\",\\\"placeholder\\\",\\\"name\\\",\\\"id\\\",\\\"autocomplete\\\"],[[23,[\\\"newMessage\\\"]],\\\"Type a message and hit enter\\\",\\\"chat-message\\\",\\\"message-field\\\",\\\"off\\\"]]],false],[0,\\\"\\\\n      \\\"],[3,\\\"action\\\",[[22,0,[]],\\\"processMessageOrCommand\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"aside\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"nav\\\"],[9],[0,\\\"\\\\n      \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],[[\\\"class\\\"],[\\\"active\\\"]],{\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-users\\\"],[9],[10]],\\\"parameters\\\":[]},null],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-paperclip\\\"],[9],[10],[10],[4,\\\"link-to\\\",[\\\"settings\\\"],null,{\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-cog\\\"],[9],[10]],\\\"parameters\\\":[]},null],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-resize-enlarge\\\"],[9],[10],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"section\\\"],[11,\\\"id\\\",\\\"user-list\\\"],[11,\\\"class\\\",\\\"main\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"channel\\\",\\\"sortedUserList\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[9],[1,[27,\\\"link-to-username\\\",null,[[\\\"username\\\"],[[22,1,[]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-input-field/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.TextField.extend({\n    keyUp: function keyUp(ev) {\n      // console.debug('keyUp', ev);\n      if (ev.altKey) {\n        switch (ev.key) {\n          case 'k':\n            this._insertAtCaret(\"\\x03\");\n\n            break;\n        }\n      }\n    },\n    _insertAtCaret: function _insertAtCaret(myValue) {\n      var el = this.$().get(0);\n\n      if (document.selection) {\n        el.focus();\n        el = document.selection.createRange();\n        el.text = myValue;\n        el.focus();\n      } else if (el.selectionStart || el.selectionStart === '0') {\n        var startPos = el.selectionStart;\n        var endPos = el.selectionEnd;\n        var scrollTop = el.scrollTop;\n        el.value = el.value.substring(0, startPos) + myValue + el.value.substring(endPos, el.value.length);\n        el.focus();\n        el.selectionStart = startPos + myValue.length;\n        el.selectionEnd = startPos + myValue.length;\n        el.scrollTop = scrollTop;\n      } else {\n        el.value += myValue;\n        el.focus();\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-nav/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'ul'\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-nav/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"jmQdhKTd\",\n    \"block\": \"{\\\"symbols\\\":[\\\"space\\\",\\\"channel\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[9],[4,\\\"link-to\\\",[\\\"space\\\",[22,1,[]]],null,{\\\"statements\\\":[[1,[22,1,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"sortedChannels\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,2,[\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null],\\\" \\\",[22,2,[\\\"unreadMessagesClass\\\"]]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"isUserChannel\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",[\\\"space.user-channel\\\",[22,1,[]],[22,2,[]]],null,{\\\"statements\\\":[[1,[22,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",[\\\"space.channel\\\",[22,1,[]],[22,2,[]]],null,{\\\"statements\\\":[[1,[22,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"      \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"join-channel\\\"],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"+\\\"],[3,\\\"action\\\",[[22,0,[]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"joinChannel\\\"]],[22,1,[]]],null]]],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/date-headline/component\", [\"exports\", \"moment\", \"hyperchannel/config/environment\"], function (_exports, _moment, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    classNames: ['date-headline'],\n    updateInterval: 120000,\n    // 2 minutes\n    headline: Ember.computed('message.date', function () {\n      var _this = this;\n\n      var date = (0, _moment.default)(this.get('message.date'));\n\n      var scheduleUpdate = function scheduleUpdate() {\n        // don't schedule updates during testing, because it makes the tests time out\n        if (!_environment.default.environment === 'testing') {\n          Ember.run.later(function () {\n            _this.notifyPropertyChange('message.date');\n          }, _this.updateInterval);\n        }\n      };\n\n      if (date.isSame((0, _moment.default)(), 'day')) {\n        scheduleUpdate();\n        return 'Today';\n      }\n\n      if (date.isSame((0, _moment.default)().subtract(1, 'day'), 'day')) {\n        scheduleUpdate();\n        return 'Yesterday';\n      }\n\n      return this.get('message.date').toLocaleDateString();\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/date-headline/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"sg793hA3\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"h3\\\"],[9],[1,[21,\\\"headline\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/date-headline/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/from-elsewhere\", [\"exports\", \"ember-elsewhere/components/from-elsewhere\"], function (_exports, _fromElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _fromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/illiquid-model\", [\"exports\", \"liquid-fire/components/illiquid-model\"], function (_exports, _illiquidModel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _illiquidModel.default;\n    }\n  });\n});","define(\"hyperchannel/components/link-to-username/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    username: null,\n    roles: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('roles', {\n        '@': 'op',\n        '%': 'half-op',\n        '+': 'voice'\n      });\n    },\n    role: Ember.computed('username', 'roles', function () {\n      var role = this.roles[this.username[0]];\n\n      if (Ember.isPresent(role)) {\n        return role;\n      }\n\n      return 'normal';\n    }),\n    usernameWithoutPrefix: Ember.computed('username', 'roles', function () {\n      var regex = RegExp(\"^[\\\\\".concat(Object.keys(this.roles).join('\\\\'), \"]\"));\n      return this.username.replace(regex, '');\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/link-to-username/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"FWPQMR6p\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"link-to\\\",[\\\"space.user-channel\\\",[23,[\\\"usernameWithoutPrefix\\\"]]],[[\\\"class\\\"],[[23,[\\\"role\\\"]]]],{\\\"statements\\\":[[1,[21,\\\"username\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/link-to-username/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/liquid-bind\", [\"exports\", \"liquid-fire/components/liquid-bind\"], function (_exports, _liquidBind) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidBind.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-child\", [\"exports\", \"liquid-fire/components/liquid-child\"], function (_exports, _liquidChild) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidChild.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-container\", [\"exports\", \"liquid-fire/components/liquid-container\"], function (_exports, _liquidContainer) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidContainer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-if\", [\"exports\", \"liquid-fire/components/liquid-if\"], function (_exports, _liquidIf) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidIf.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-measured\", [\"exports\", \"liquid-fire/components/liquid-measured\"], function (_exports, _liquidMeasured) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidMeasured.default;\n    }\n  });\n  Object.defineProperty(_exports, \"measure\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidMeasured.measure;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-outlet\", [\"exports\", \"liquid-fire/components/liquid-outlet\"], function (_exports, _liquidOutlet) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidOutlet.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-spacer\", [\"exports\", \"liquid-fire/components/liquid-spacer\"], function (_exports, _liquidSpacer) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidSpacer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-sync\", [\"exports\", \"liquid-fire/components/liquid-sync\"], function (_exports, _liquidSync) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidSync.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-unless\", [\"exports\", \"liquid-fire/components/liquid-unless\"], function (_exports, _liquidUnless) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidUnless.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-versions\", [\"exports\", \"liquid-fire/components/liquid-versions\"], function (_exports, _liquidVersions) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidVersions.default;\n    }\n  });\n});","define(\"hyperchannel/components/message-chat-me/component\", [\"exports\", \"hyperchannel/components/message-chat/component\"], function (_exports, _component) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _component.default.extend({\n    classNames: ['chat-message', 'chat-me-message']\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat-me/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"W7PBYqy/\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"username\\\"],[12,\\\"data-username\\\",[23,[\\\"message\\\",\\\"nickname\\\"]]],[9],[1,[23,[\\\"message\\\",\\\"nickname\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"message\\\"],[9],[1,[21,\\\"formattedContent\\\"],false],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/message-chat-me/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat/component\", [\"exports\", \"moment\"], function (_exports, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global linkifyStr */\n  var _default = Ember.Component.extend({\n    tagName: 'div',\n    classNames: ['chat-message'],\n    message: null,\n    datetime: Ember.computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD[T]HH:mm');\n    }),\n    dateTitle: Ember.computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD [at] HH:mm');\n    }),\n    formattedContent: Ember.computed('message.content', function () {\n      var content = this.get('message.content');\n      var out; // Images\n\n      if (content.match(/^(http)s?:\\/\\/.*(gif|png|jpg|jpeg)$/i)) {\n        out = \"<br><a href=\\\"\".concat(content, \"\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener\\\">\") + \"<img src=\\\"\".concat(content, \"\\\" class=\\\"from-image-url\\\" alt=\\\"\").concat(content, \"\\\">\") + \"</a>\";\n      } // Other links\n      else {\n          out = linkifyStr(content, {\n            linkAttributes: {\n              rel: 'nofollow noopener'\n            },\n            validate: {\n              url: function url(value) {\n                return /^(http)s?:\\/\\//.test(value);\n              },\n              email: function email() {\n                return false;\n              }\n            }\n          });\n        } // Colors\n\n\n      out = out.replace(/\\u0003(\\d+)/g, '<span class=\"color-$1\">').replace(/\"color-(\\d)\"/g, '\"color-0$1\"').replace(/\\u0002/g, '<span class=\"bold\">').replace(/\\u001D/g, '<span class=\"italic\">').replace(/\\u000f/g, '</span>');\n      return Ember.String.htmlSafe(out);\n    }),\n    actions: {\n      usernameClick: function usernameClick(username) {\n        this.onUsernameClick(username);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"iTV2P2p9\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"chat-message__username\\\"],[12,\\\"data-username\\\",[23,[\\\"message\\\",\\\"nickname\\\"]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"usernameClick\\\",[23,[\\\"message\\\",\\\"nickname\\\"]]],null]],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n  \\\"],[1,[23,[\\\"message\\\",\\\"nickname\\\"]],false],[0,\\\":\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"time\\\"],[11,\\\"class\\\",\\\"chat-message__date\\\"],[12,\\\"datetime\\\",[21,\\\"datetime\\\"]],[12,\\\"title\\\",[21,\\\"dateTitle\\\"]],[9],[0,\\\"\\\\n  \\\"],[1,[27,\\\"moment-format\\\",[[23,[\\\"message\\\",\\\"date\\\"]],\\\"HH:mm\\\"],null],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"chat-message__message\\\"],[9],[0,\\\"\\\\n  \\\"],[1,[21,\\\"formattedContent\\\"],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/message-chat/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/modal-target/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    modalAnimation: function modalAnimation() {\n      return this.lookup('explode').call(this, {\n        pick: '.modal-background',\n        use: ['fade', {\n          maxOpacity: 0.5\n        }]\n      }, {\n        pick: '.modal-dialog',\n        use: 'scale'\n      });\n    },\n    actions: {\n      outsideClick: function outsideClick(modal) {\n        if (modal && modal.onOutsideClick) {\n          modal.onOutsideClick();\n        }\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/modal-target/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"eJNR9e3l\",\n    \"block\": \"{\\\"symbols\\\":[\\\"modal\\\",\\\"currentModal\\\"],\\\"statements\\\":[[4,\\\"from-elsewhere\\\",null,[[\\\"name\\\"],[\\\"modal\\\"]],{\\\"statements\\\":[[4,\\\"liquid-bind\\\",[[22,1,[]]],[[\\\"containerless\\\",\\\"use\\\"],[true,[23,[\\\"modalAnimation\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-container\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-background\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"outsideClick\\\",[22,2,[]]],null]],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-dialog\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"body\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,2,[]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/modal-target/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/multiple-from-elsewhere\", [\"exports\", \"ember-elsewhere/components/multiple-from-elsewhere\"], function (_exports, _multipleFromElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _multipleFromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/notification-topic-change/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'div',\n    classNames: ['topic-change-notification']\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/notification-topic-change/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"Okfpt44z\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"Topic was changed to \\\\\\\"\\\"],[1,[23,[\\\"message\\\",\\\"content\\\"]],false],[0,\\\"\\\\\\\" by \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"username\\\"],[12,\\\"data-username\\\",[23,[\\\"message\\\",\\\"nickname\\\"]]],[9],[1,[23,[\\\"message\\\",\\\"nickname\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/notification-topic-change/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/space-setting-modal/component\", [\"exports\", \"hyperchannel/models/space\"], function (_exports, _space) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    settings: null,\n    space: null,\n    init: function init() {\n      this._super.apply(this, arguments); // create a clone of the settings that we can operate on\n\n\n      var space = _space.default.create();\n\n      space.setProperties(this.settings.serialize());\n      this.set('space', space);\n    },\n    actions: {\n      save: function save() {\n        this.onSave(this.space);\n      },\n      cancel: function cancel() {\n        this.onCancel();\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/space-setting-modal/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"+LmXRplj\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"h1\\\"],[9],[0,\\\"Space Setting\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"form\\\"],[11,\\\"name\\\",\\\"add-space\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"protocol\\\"]],\\\"required\\\",\\\"IRC\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[23,[\\\"space\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled-modal\\\"]]],false],[0,\\\"\\\\n    \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"tls-enabled-modal\\\"],[9],[0,\\\"Secure (TLS)\\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"type\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"password\\\",[23,[\\\"space\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"input\\\"],[11,\\\"value\\\",\\\"Save\\\"],[11,\\\"type\\\",\\\"submit\\\"],[9],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Cancel\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/space-setting-modal/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/to-elsewhere\", [\"exports\", \"ember-elsewhere/components/to-elsewhere\"], function (_exports, _toElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/web-push-subscription/component\", [\"exports\", \"hyperchannel/utils/url-base64-to-uint8-array\"], function (_exports, _urlBase64ToUint8Array) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var _default = Ember.Component.extend({\n    botkaURL: null,\n    username: null,\n    subscribed: false,\n    webPushBaseURL: Ember.computed('botkaURL', function () {\n      return this.botkaURL + '/web-push';\n    }),\n    init: function init() {\n      var _this = this;\n\n      this._super.apply(this, arguments);\n\n      navigator.serviceWorker.ready.then(function (registration) {\n        return registration.pushManager.getSubscription();\n      }).then(function (subscription) {\n        if (subscription) {\n          _this.set('subscribed', true);\n        }\n      });\n    },\n    actions: {\n      subscribe: function subscribe() {\n        var _this2 = this;\n\n        navigator.serviceWorker.ready.then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          regeneratorRuntime.mark(function _callee(registration) {\n            var response, vapidPublicKey, convertedVapidKey;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return fetch(this.webPushBaseURL + '/vapid-public-key');\n\n                  case 2:\n                    response = _context.sent;\n                    _context.next = 5;\n                    return response.text();\n\n                  case 5:\n                    vapidPublicKey = _context.sent;\n                    // Chrome doesn't accept the base64-encoded (string) vapidPublicKey yet\n                    convertedVapidKey = (0, _urlBase64ToUint8Array.default)(vapidPublicKey); // Subscribe the user\n\n                    return _context.abrupt(\"return\", registration.pushManager.subscribe({\n                      userVisibleOnly: true,\n                      applicationServerKey: convertedVapidKey\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }().bind(this)).then(function (subscription) {\n          console.debug('Subscribed', subscription.endpoint);\n          return fetch(_this2.webPushBaseURL + '/register', {\n            method: 'post',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              user: _this2.username,\n              subscription: subscription\n            })\n          });\n        }).then(this.set('subscribed', true));\n      },\n      unsubscribe: function unsubscribe() {\n        var _this3 = this;\n\n        navigator.serviceWorker.ready.then(function (registration) {\n          return registration.pushManager.getSubscription();\n        }).then(function (subscription) {\n          return subscription.unsubscribe().then(function () {\n            console.debug('Unsubscribed', subscription.endpoint);\n            return fetch(_this3.webPushBaseURL + '/unregister', {\n              method: 'post',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify({\n                subscription: subscription\n              })\n            });\n          });\n        }).then(this.set('subscribed', false));\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/web-push-subscription/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"/TR1lyza\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"p\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"i\\\"],[9],[0,\\\"username:\\\"],[10],[0,\\\" \\\"],[1,[21,\\\"username\\\"],false],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n  \\\"],[7,\\\"i\\\"],[9],[0,\\\"base URL:\\\"],[10],[0,\\\" \\\"],[1,[21,\\\"webPushBaseURL\\\"],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"subscribed\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Disable push notifications\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"unsubscribe\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Receive push notifications\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"subscribe\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[10]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/web-push-subscription/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    coms: Ember.inject.service(),\n    spaces: Ember.computed.alias('coms.spaces'),\n    showGlobalMenu: false,\n    showChannelMenu: false\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/index\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    application: Ember.inject.controller()\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/settings\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    application: Ember.inject.controller(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    newSpace: null,\n    selectedSpacePreset: null,\n    showSpaceSettingModal: Ember.computed.notEmpty('selectedSpacePreset'),\n    actions: {\n      addSpaceFromPreset: function addSpaceFromPreset(preset) {\n        this.set('selectedSpacePreset', preset);\n      },\n      saveSpace: function saveSpace(space) {\n        var _this = this;\n\n        this.set('selectedSpacePreset', null);\n        this.storage.saveSpace(space).then(function () {\n          _this.coms.connectAndAddSpace(space);\n        });\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/base_channel\", [\"exports\", \"hyperchannel/models/message\"], function (_exports, _message) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    newMessage: null,\n    space: Ember.inject.controller(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    createMessage: function createMessage(message, type) {\n      return _message.default.create({\n        type: type,\n        date: new Date(),\n        nickname: this.get('space.model.server.nickname'),\n        content: message\n      });\n    },\n    actions: {\n      sendMessage: function sendMessage(newMessage) {\n        var message = this.createMessage(newMessage, 'message-chat');\n        this.coms.transferMessage(this.get('space.model'), this.model, message.get('content'));\n        this.get('model.messages').pushObject(message);\n        this.set('newMessage', null);\n      },\n      executeCommand: function executeCommand(newMessage) {\n        var availableCommands = [\"help\", \"join\", \"leave\", \"me\", \"msg\", \"part\", \"topic\"];\n        var commandText = newMessage.substr(1);\n        var commandSplitted = commandText.split(\" \");\n        var command = commandSplitted[0];\n\n        if (availableCommands.includes(command.toLowerCase())) {\n          this.send(command + 'Command', commandSplitted.slice(1));\n        } else {\n          console.warn('[channel]', 'Unknown command', commandText);\n        }\n\n        this.set('newMessage', null);\n      },\n      joinCommand: function joinCommand(args) {\n        var space = this.get('space.model');\n        var channel = this.coms.createChannel(space, args[0]);\n        this.storage.saveSpace(space);\n        this.transitionToRoute('space.channel', space, channel);\n      },\n      partCommand: function partCommand() {\n        var space = this.get('space.model');\n        var channelName = this.get('model.name');\n        this.coms.removeChannel(space, channelName);\n        var lastChannel = space.get('channels.lastObject');\n\n        if (Ember.isPresent(lastChannel)) {\n          this.transitionToRoute('space.channel', space, lastChannel);\n        } else {\n          this.transitionToRoute('space', space);\n        }\n      },\n      leaveCommand: function leaveCommand() {\n        this.send('partCommand');\n      },\n      helpCommand: function helpCommand() {},\n      meCommand: function meCommand(args) {\n        var newMessage = args.join(' ');\n        var message = this.createMessage(newMessage, 'message-chat-me');\n        this.coms.transferMeMessage(this.get('space.model'), this.get('model.sockethubChannelId'), message.get('content'));\n        this.get('model.messages').pushObject(message);\n      },\n      msgCommand: function msgCommand(args) {\n        var username = args.shift();\n        this.coms.createUserChannel(this.get('space.model'), username); // TODO fix this, sockethub sends a failure event with error\n        // \"TypeError: Cannot read property 'indexOf' of undefined\"\n        // this.get('coms').transferMessage(this.get('space.model'), username, args.join(' '));\n      },\n      topicCommand: function topicCommand(args) {\n        var channel = this.model;\n        var topic = args.join(' ');\n        this.coms.changeTopic(this.get('space.model'), channel, topic);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/channel\", [\"exports\", \"hyperchannel/controllers/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/user_channel\", [\"exports\", \"hyperchannel/controllers/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/pan\", [\"exports\", \"ember-gestures/recognizers/pan\"], function (_exports, _pan) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _pan.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/pinch\", [\"exports\", \"ember-gestures/recognizers/pinch\"], function (_exports, _pinch) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _pinch.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/press\", [\"exports\", \"ember-gestures/recognizers/press\"], function (_exports, _press) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _press.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/rotate\", [\"exports\", \"ember-gestures/recognizers/rotate\"], function (_exports, _rotate) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _rotate.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swipe\", [\"exports\", \"ember-gestures/recognizers/swipe\"], function (_exports, _swipe) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _swipe.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swipeleft\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    include: [],\n    exclude: [],\n    options: {\n      threshold: 25,\n      direction: Hammer.DIRECTION_LEFT\n    },\n    eventName: 'swipeleft',\n    recognizer: 'swipe'\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swiperight\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    include: [],\n    exclude: [],\n    options: {\n      threshold: 25,\n      direction: Hammer.DIRECTION_RIGHT\n    },\n    eventName: 'swiperight',\n    recognizer: 'swipe'\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/tap\", [\"exports\", \"ember-gestures/recognizers/tap\"], function (_exports, _tap) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _tap.default;\n    }\n  });\n});","define(\"hyperchannel/ember-gestures/recognizers/vertical-pan\", [\"exports\", \"ember-gestures/recognizers/vertical-pan\"], function (_exports, _verticalPan) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _verticalPan.default;\n    }\n  });\n});","define(\"hyperchannel/ember-gestures/recognizers/vertical-swipe\", [\"exports\", \"ember-gestures/recognizers/vertical-swipe\"], function (_exports, _verticalSwipe) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _verticalSwipe.default;\n    }\n  });\n});","define(\"hyperchannel/event_dispatcher\", [\"exports\", \"ember-gestures/event_dispatcher\", \"hyperchannel/config/environment\"], function (_exports, _event_dispatcher, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var assign = Ember.assign || Ember.merge;\n  var gestures = assign({}, {\n    emberUseCapture: false,\n    removeTracking: false,\n    useFastPaths: false\n  });\n  gestures = assign(gestures, _environment.default.gestures);\n\n  var _default = _event_dispatcher.default.extend({\n    useCapture: gestures.emberUseCapture,\n    removeTracking: gestures.removeTracking,\n    useFastPaths: gestures.useFastPaths\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/helpers/app-version\", [\"exports\", \"hyperchannel/config/environment\", \"ember-cli-app-version/utils/regexp\"], function (_exports, _environment, _regexp) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.appVersion = appVersion;\n  _exports.default = void 0;\n\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var version = _environment.default.APP.version; // e.g. 1.0.0-alpha.1+4jds75hf\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n\n    var versionOnly = hash.versionOnly || hash.hideSha;\n    var shaOnly = hash.shaOnly || hash.hideVersion;\n    var match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      } // Fallback to just version\n\n\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  var _default = Ember.Helper.helper(appVersion);\n\n  _exports.default = _default;\n});","define(\"hyperchannel/helpers/is-after\", [\"exports\", \"ember-moment/helpers/is-after\"], function (_exports, _isAfter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isAfter.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-before\", [\"exports\", \"ember-moment/helpers/is-before\"], function (_exports, _isBefore) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isBefore.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-between\", [\"exports\", \"ember-moment/helpers/is-between\"], function (_exports, _isBetween) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isBetween.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same-or-after\", [\"exports\", \"ember-moment/helpers/is-same-or-after\"], function (_exports, _isSameOrAfter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSameOrAfter.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same-or-before\", [\"exports\", \"ember-moment/helpers/is-same-or-before\"], function (_exports, _isSameOrBefore) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSameOrBefore.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same\", [\"exports\", \"ember-moment/helpers/is-same\"], function (_exports, _isSame) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSame.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/lf-lock-model\", [\"exports\", \"liquid-fire/helpers/lf-lock-model\"], function (_exports, _lfLockModel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfLockModel.default;\n    }\n  });\n  Object.defineProperty(_exports, \"lfLockModel\", {\n    enumerable: true,\n    get: function get() {\n      return _lfLockModel.lfLockModel;\n    }\n  });\n});","define(\"hyperchannel/helpers/lf-or\", [\"exports\", \"liquid-fire/helpers/lf-or\"], function (_exports, _lfOr) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfOr.default;\n    }\n  });\n  Object.defineProperty(_exports, \"lfOr\", {\n    enumerable: true,\n    get: function get() {\n      return _lfOr.lfOr;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-add\", [\"exports\", \"ember-moment/helpers/moment-add\"], function (_exports, _momentAdd) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentAdd.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-calendar\", [\"exports\", \"ember-moment/helpers/moment-calendar\"], function (_exports, _momentCalendar) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentCalendar.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-diff\", [\"exports\", \"ember-moment/helpers/moment-diff\"], function (_exports, _momentDiff) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentDiff.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-duration\", [\"exports\", \"ember-moment/helpers/moment-duration\"], function (_exports, _momentDuration) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentDuration.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-format\", [\"exports\", \"ember-moment/helpers/moment-format\"], function (_exports, _momentFormat) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFormat.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-from-now\", [\"exports\", \"ember-moment/helpers/moment-from-now\"], function (_exports, _momentFromNow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFromNow.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-from\", [\"exports\", \"ember-moment/helpers/moment-from\"], function (_exports, _momentFrom) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFrom.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-subtract\", [\"exports\", \"ember-moment/helpers/moment-subtract\"], function (_exports, _momentSubtract) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentSubtract.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to-date\", [\"exports\", \"ember-moment/helpers/moment-to-date\"], function (_exports, _momentToDate) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentToDate.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to-now\", [\"exports\", \"ember-moment/helpers/moment-to-now\"], function (_exports, _momentToNow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentToNow.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to\", [\"exports\", \"ember-moment/helpers/moment-to\"], function (_exports, _momentTo) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentTo.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-unix\", [\"exports\", \"ember-moment/helpers/unix\"], function (_exports, _unix) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _unix.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment\", [\"exports\", \"ember-moment/helpers/moment\"], function (_exports, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _moment.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/now\", [\"exports\", \"ember-moment/helpers/now\"], function (_exports, _now) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _now.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/route-action\", [\"exports\", \"ember-route-action-helper/helpers/route-action\"], function (_exports, _routeAction) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _routeAction.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/unix\", [\"exports\", \"ember-moment/helpers/unix\"], function (_exports, _unix) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _unix.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/utc\", [\"exports\", \"ember-moment/helpers/utc\"], function (_exports, _utc) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _utc.default;\n    }\n  });\n  Object.defineProperty(_exports, \"utc\", {\n    enumerable: true,\n    get: function get() {\n      return _utc.utc;\n    }\n  });\n});","define(\"hyperchannel/initializers/app-version\", [\"exports\", \"ember-cli-app-version/initializer-factory\", \"hyperchannel/config/environment\"], function (_exports, _initializerFactory, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var name, version;\n\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  var _default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/container-debug-adapter\", [\"exports\", \"ember-resolver/resolvers/classic/container-debug-adapter\"], function (_exports, _containerDebugAdapter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = {\n    name: 'container-debug-adapter',\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/ember-hammertime\", [\"exports\", \"ember-hammertime/components/component\"], function (_exports, _component) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  // activate touch action css\n  var _default = {\n    name: 'ember-hammertime',\n    initialize: function initialize() {}\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/export-application-global\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.initialize = initialize;\n  _exports.default = void 0;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  var _default = {\n    name: 'export-application-global',\n    initialize: initialize\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/hammer\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    name: 'hammer',\n    initialize: function initialize() {\n      // Enable text selection.\n      // It's disabled by default to improve UX on desktop, so text wouldn't\n      // be selected when panning.\n      delete Hammer.defaults.cssProps.userSelect;\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/liquid-fire\", [\"exports\", \"liquid-fire/ember-internals\", \"liquid-fire/velocity-ext\"], function (_exports, _emberInternals, _velocityExt) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  (0, _emberInternals.initialize)();\n  var _default = {\n    name: 'liquid-fire',\n    initialize: function initialize() {}\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/sockethub\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global SockethubClient */\n\n  /* global io */\n  // TODO move settings into config file\n  var sockethub = new SockethubClient(io(_environment.default.sockethubURL, {\n    path: '/sockethub'\n  }));\n  var _default = {\n    name: 'sockethub',\n    initialize: function initialize(app) {\n      app.register('sockethub:client', sockethub, {\n        instantiate: false,\n        singleton: true\n      });\n      app.inject('controller', 'sockethub', 'sockethub:client');\n      app.inject('route', 'sockethub', 'sockethub:client');\n      app.inject('component', 'sockethub', 'sockethub:client');\n      app.inject('service', 'sockethub', 'sockethub:client');\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/instance-initializers/ember-gestures\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = {\n    name: 'ember-gestures',\n    initialize: function initialize(instance) {\n      if (typeof instance.lookup === \"function\") {\n        instance.lookup('service:-gestures');\n      } else {\n        // This can be removed when we no-longer support ember 1.12 and 1.13\n        Ember.getOwner(instance).lookup('service:-gestures');\n      }\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/instance-initializers/remotestorage\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.initialize = initialize;\n  _exports.default = void 0;\n\n  function initialize(appInstance) {\n    var storage = appInstance.lookup('service:remotestorage');\n    var remoteStorage = storage.get('rs'); // Add to window global for debugging/development\n\n    window.remoteStorage = remoteStorage;\n    var rsEvents = ['ready', 'not-connected', 'connected', 'disconnected', 'error', 'features-loaded', 'connecting', 'authing', 'wire-busy', 'wire-done', 'network-offline', 'network-online'];\n    rsEvents.forEach(function (evt) {\n      remoteStorage.on(evt, function () {\n        return console.debug(\"[remotestorage] RS event: \".concat(evt));\n      });\n    });\n  }\n\n  var _default = {\n    name: 'remotestorage',\n    initialize: initialize\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/models/base_channel\", [\"exports\", \"hyperchannel/models/message\", \"moment\"], function (_exports, _message, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    space: null,\n    name: '',\n    userList: null,\n    messages: null,\n    connected: false,\n    sockethubChannelId: null,\n    topic: null,\n    unreadMessages: false,\n    unreadMentions: false,\n    visible: false,\n    // Current/active channel\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('messages', []);\n      this.set('userList', []);\n    },\n    isLogged: Ember.computed('space.loggedChannels.[]', 'name', function () {\n      var _this = this;\n\n      var loggedChannel = this.get('space.loggedChannels').find(function (channelName) {\n        return channelName === _this.name;\n      });\n      return Ember.isPresent(loggedChannel);\n    }),\n    slug: Ember.computed('name', function () {\n      // This could be based on server type in the future. E.g. IRC would be\n      // server URL, while Campfire would be another id.\n      return this.name.replace(/#/g, '');\n    }),\n    unreadMessagesClass: Ember.computed('visible', 'unreadMessages', 'unreadMentions', function () {\n      if (this.visible || !this.unreadMessages) {\n        return null;\n      }\n\n      return this.unreadMentions ? 'unread-mentions' : 'unread-messages';\n    }),\n    sortedMessages: Ember.computed('messages.@each.date', function () {\n      return this.messages.sortBy('date');\n    }),\n    sortedUserList: Ember.computed('userList.[]', function () {\n      return this.get('userList').sort(function (a, b) {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      });\n    }),\n    addDateHeadline: function addDateHeadline(newMessage) {\n      var headlineDate = (0, _moment.default)(newMessage.get('date')).startOf('day').toDate();\n      var existingDateHeadline = this.messages.find(function (message) {\n        return message.get('type') === 'date-headline' && message.get('date').toString() === headlineDate.toString();\n      });\n\n      if (existingDateHeadline) {\n        return;\n      }\n\n      var dateMessage = _message.default.create({\n        type: 'date-headline',\n        date: headlineDate\n      });\n\n      this.messages.pushObject(dateMessage);\n    },\n    addMessage: function addMessage(message) {\n      this.addDateHeadline(message);\n      this.messages.pushObject(message);\n\n      if (!this.visible) {\n        this.set('unreadMessages', true);\n\n        if (message.get('content').match(this.get('space.userNickname'))) {\n          this.set('unreadMentions', true);\n        }\n      }\n    },\n    addUser: function addUser(username) {\n      if (!this.userList.includes(username)) {\n        this.userList.pushObject(username);\n      }\n    },\n    removeUser: function removeUser(username) {\n      this.userList.removeObject(username);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/channel\", [\"exports\", \"hyperchannel/models/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global linkifyStr */\n  var _default = _base_channel.default.extend({\n    searchedPreviousLogsUntilDate: null,\n    formattedTopic: Ember.computed('topic', function () {\n      if (this.topic !== null) {\n        var topic = linkifyStr(this.topic, {\n          defaultProtocol: 'https',\n          linkAttributes: {\n            rel: 'nofollow'\n          }\n        });\n        return new Ember.String.htmlSafe(topic);\n      } else {\n        return '';\n      }\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/message\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    type: null,\n    date: null,\n    nickname: null,\n    content: null\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    name: null,\n    protocol: 'IRC',\n    server: null,\n    channels: null,\n    // Channel instances\n    botkaURL: null,\n    // Kosmos bot\n    // Keep a list of all old sockethubPersonIds, because there might\n    // still be coming events from Sockethub for those.\n    previousSockethubPersonIds: null,\n    channelSorting: null,\n    sortedChannels: Ember.computed.sort('channels', 'channelSorting'),\n    init: function init() {\n      this.set('channelSorting', ['name']);\n      this.set('channels', []);\n      this.set('previousSockethubPersonIds', []);\n      this.set('server', {\n        hostname: null,\n        port: 7000,\n        secure: true,\n        username: null,\n        password: null,\n        nickname: null,\n        nickServ: {\n          password: null\n        }\n      });\n\n      this._super.apply(this, arguments);\n    },\n    channelNames: Ember.computed('channels.@each.name', function () {\n      return this.channels.mapBy('name');\n    }),\n    sockethubChannelIds: Ember.computed('channels.@each.sockethubChannelId', function () {\n      return this.channels.mapBy('sockethubChannelId');\n    }),\n    loggedChannels: Ember.computed('name', 'protocol', function () {\n      if (this.name === 'Freenode' && this.protocol === 'IRC') {\n        return ['#5apps', '#kosmos', '#kosmos-dev', '#remotestorage', '#hackerbeach', '#unhosted', '#sockethub', '#opensourcedesign', '#openknot', '#emberjs', '#indieweb', '#mastodon'];\n      } else {\n        return [];\n      }\n    }),\n    userNickname: Ember.computed.alias('server.nickname'),\n    updateUsername: function updateUsername(username) {\n      // keep track of old name for later reference\n      this.previousSockethubPersonIds.pushObject(this.sockethubPersonId);\n\n      switch (this.protocol) {\n        case 'IRC':\n          this.set('server.nickname', username);\n          break;\n\n        case 'XMPP':\n          this.set('server.username', username);\n          break;\n      }\n    },\n    sockethubPersonId: Ember.computed('protocol', 'server.{hostname,username,nickname}', function () {\n      var personID;\n\n      switch (this.protocol) {\n        case 'IRC':\n          // TODO - remove the use of any URI protocol part\n          personID = \"irc://\".concat(this.get('server.nickname'), \"@\").concat(this.get('server.hostname'));\n          break;\n\n        case 'XMPP':\n          // TODO - why isn't the full JID user+host+resource?\n          personID = \"\".concat(this.get('server.username'), \"/hyperchannel\");\n          break;\n      }\n\n      return personID;\n    }),\n    serialize: function serialize() {\n      var _this = this;\n\n      var serialized = {\n        id: this.id || this.name.dasherize(),\n        name: this.name,\n        protocol: this.protocol,\n        server: {\n          hostname: this.get('server.hostname'),\n          port: parseInt(this.get('server.port'), 10),\n          secure: this.get('server.secure'),\n          nickname: this.get('server.nickname')\n        },\n        channels: this.channelNames || []\n      };\n\n      if (Ember.isPresent(this.botkaURL)) {\n        serialized.botkaURL = this.botkaURL;\n      }\n\n      ['username', 'password', 'nickname'].forEach(function (prop) {\n        // TODO credentials need to be encrypted and probably stored elsewhere\n        if (Ember.isPresent(_this.get(\"server.\".concat(prop)))) {\n          serialized.server[prop] = _this.get(\"server.\".concat(prop));\n        }\n      });\n      return serialized;\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/user_channel\", [\"exports\", \"hyperchannel/models/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    isUserChannel: true\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/resolver\", [\"exports\", \"ember-resolver\"], function (_exports, _emberResolver) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _emberResolver.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/router\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n  Router.map(function () {\n    this.route('space', {\n      path: '/:id'\n    }, function () {\n      this.route('channel', {\n        path: '/channel/:slug'\n      });\n      this.route('user-channel', {\n        path: '/user/:slug'\n      });\n    });\n    this.route('settings');\n  });\n  var _default = Router;\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    beforeModel: function beforeModel() {\n      this._super.apply(this, arguments); // See a list of allowed types in logger.js\n      // Add or remove all your log types here:\n      // this.get('logger').add('message');\n      // this.get('logger').remove('join');\n      // this.get('logger').disable();\n      // this.get('logger').enable();\n\n    },\n    model: function model() {\n      this.coms.setupListeners();\n      return this.coms.instantiateSpacesAndChannels();\n    },\n    actions: {\n      menu: function menu(which, what) {\n        var menuProp = \"show\".concat(which.capitalize(), \"Menu\");\n\n        switch (what) {\n          case 'show':\n            this.controller.set(menuProp, true);\n            break;\n\n          case 'hide':\n            this.controller.set(menuProp, false);\n            break;\n\n          case 'toggle':\n            this.controller.toggleProperty(menuProp);\n            break;\n        }\n      },\n      openNewChannel: function openNewChannel(space) {\n        var channelName = window.prompt('Join channel');\n\n        if (Ember.isEmpty(channelName)) {\n          return;\n        }\n\n        if (space.get('protocol') === 'IRC' && !channelName.match(/^#/)) {\n          channelName = \"#\".concat(channelName);\n        }\n\n        var channel = this.coms.createChannel(space, channelName);\n        this.storage.saveSpace(space);\n        this.transitionTo('space.channel', space, channel);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/index\", [\"exports\", \"ember-local-storage\", \"hyperchannel/config/environment\"], function (_exports, _emberLocalStorage, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    redirect: function redirect() {\n      var currentSpace = this.get('userSettings.currentSpace') || _environment.default.defaultSpaceId;\n\n      var currentChannel = this.get('userSettings.currentChannel') || 'kosmos';\n\n      if (currentSpace && currentChannel) {\n        this.transitionTo('space.channel', currentSpace, currentChannel);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/settings\", [\"exports\", \"hyperchannel/models/space\", \"hyperchannel/config/environment\"], function (_exports, _space, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    storage: Ember.inject.service('remotestorage'),\n    coms: Ember.inject.service(),\n    model: function model() {\n      var rsKosmos = this.get('storage.rs').kosmos;\n      var spaces = rsKosmos.spaces.getAll().then(function (res) {\n        var col = [];\n\n        if (Ember.isEmpty(res)) {\n          return col;\n        }\n\n        Object.keys(res).forEach(function (id) {\n          var space = _space.default.create();\n\n          space.setProperties(res[id]);\n          col.push(space);\n        });\n        return col;\n      }, function (e) {\n        console.error(e);\n      });\n      return Ember.RSVP.hash({\n        spaces: spaces,\n        spacePresets: _environment.default.spacePresets.map(function (preset) {\n          var space = _space.default.create();\n\n          space.setProperties(preset);\n          return space;\n        })\n      });\n    },\n    setupController: function setupController(controller) {\n      this._super.apply(this, arguments);\n\n      controller.set('newSpace', _space.default.create());\n    },\n    actions: {\n      addSpace: function addSpace() {\n        var _this = this;\n\n        var newSpace = this.controller.get('newSpace');\n        newSpace.set('id', newSpace.get('name').dasherize());\n        this.storage.saveSpace(newSpace).then(function () {\n          _this.coms.connectAndAddSpace(newSpace);\n\n          _this.modelFor('settings').spaces.pushObject(newSpace);\n        }, function (e) {\n          console.error('error saving in RS', newSpace, e);\n        });\n      },\n      removeSpace: function removeSpace(space) {\n        var _this2 = this;\n\n        this.storage.removeSpace(space).then(function () {\n          _this2.modelFor('settings').spaces.removeObject(space);\n        }, function (e) {\n          console.error('error deleting from RS', space, e);\n        });\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    coms: Ember.inject.service(),\n    model: function model(params) {\n      return this.coms.get('spaces').findBy('id', params.id);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/base_channel\", [\"exports\", \"ember-local-storage\"], function (_exports, _emberLocalStorage) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function focusMessageInput() {\n    if (window.innerWidth > 900) {\n      Ember.$('input#message-field').focus();\n    } else {// Don't auto-focus on small screens\n    }\n  }\n\n  var _default = Ember.Route.extend({\n    coms: Ember.inject.service(),\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    model: function model(params) {\n      var space = this.modelFor('space');\n      var channel = space.get('channels').findBy('slug', params.slug);\n\n      if (!channel) {\n        channel = this.createChannelOrUserChannel(space, params.slug);\n      }\n\n      return channel;\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n\n      Ember.run.scheduleOnce('afterRender', function () {\n        focusMessageInput();\n      });\n    },\n    actions: {\n      didTransition: function didTransition() {\n        var _this = this;\n\n        var space = this.modelFor('space');\n        var channel = this.controller.get('model');\n        this.set('userSettings.currentSpace', space.get('id'));\n        this.set('userSettings.currentChannel', channel.get('slug')); // Mark all other channels as inactive/invisible\n\n        this.get('coms.spaces').forEach(function (space) {\n          space.get('channels').setEach('visible', false);\n        }); // Mark channel as active/visible\n\n        channel.set('visible', true); // Mark unread messages as read\n\n        channel.set('unreadMessages', false);\n        channel.set('unreadMentions', false);\n        Ember.run.later(this, function () {\n          return _this.send('menu', 'global', 'hide');\n        }, 500);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/channel\", [\"exports\", \"hyperchannel/routes/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.coms.createChannel(space, \"#\" + channelName);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/user_channel\", [\"exports\", \"hyperchannel/routes/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.coms.createUserChannel(space, channelName);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/-gestures\", [\"exports\", \"hyperchannel/config/environment\", \"ember-gestures/services/-gestures\"], function (_exports, _environment, _gestures) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var assign = Ember.assign || Ember.merge;\n  var gestures = assign({}, {\n    useCapture: false\n  });\n  gestures = assign(gestures, _environment.default.gestures);\n\n  var _default = _gestures.default.extend({\n    useCapture: gestures.useCapture\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/ajax\", [\"exports\", \"ember-ajax/services/ajax\"], function (_exports, _ajax) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _ajax.default;\n    }\n  });\n});","define(\"hyperchannel/services/coms\", [\"exports\", \"hyperchannel/models/space\", \"hyperchannel/models/channel\", \"hyperchannel/models/user_channel\", \"hyperchannel/models/message\", \"hyperchannel/config/environment\", \"moment\", \"ember-local-storage\"], function (_exports, _space, _channel, _user_channel, _message, _environment, _moment, _emberLocalStorage) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  /**\n   * This service provides the central command interface for communicating with\n   * chat servers/networks\n   * @module hyperchannel/services/coms\n   */\n  var _default = Ember.Service.extend({\n    // Utils\n    ajax: Ember.inject.service(),\n    logger: Ember.inject.service(),\n    // Data storage\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    storage: Ember.inject.service('remotestorage'),\n    // Message transport\n    irc: Ember.inject.service('sockethub-irc'),\n    xmpp: Ember.inject.service('sockethub-xmpp'),\n\n    /**\n     * A collection of all space model instances\n     * @type {Space[]}\n     */\n    spaces: null,\n\n    /**\n     * This is called from the application route on app startup. Sets up all\n     * listeners for incoming Sockethub messages.\n     * @public\n     */\n    setupListeners: function setupListeners() {\n      this.sockethub.socket.on('completed', this.handleSockethubCompleted.bind(this));\n      this.sockethub.socket.on('message', this.handleSockethubMessage.bind(this));\n      this.sockethub.socket.on('failure', this.handleSockethubFailure.bind(this));\n    },\n\n    /**\n     * This is called from the application route on app startup. Instantiates,\n     * connects, and joins all either configured/saved or default spaces/channels\n     * @public\n     */\n    instantiateSpacesAndChannels: function instantiateSpacesAndChannels() {\n      var _this = this;\n\n      this.set('spaces', []);\n      var rs = this.get('storage.rs');\n      return new Ember.RSVP.Promise(function (resolve, reject) {\n        rs.kosmos.spaces.getAll().then(function (spaceData) {\n          if (Ember.isEmpty(Object.keys(spaceData))) {\n            console.debug('No space data found in RS. Adding default space...');\n\n            _this.storage.addDefaultSpace().then(function (data) {\n              _this.connectAndAddSpace(data.space);\n\n              _this.instantiateChannels(data.space, data.channels);\n\n              resolve();\n            });\n          } else {\n            Object.keys(spaceData).forEach(function (id) {\n              var space = _space.default.create();\n\n              space.setProperties({\n                id: id,\n                name: spaceData[id].name,\n                protocol: spaceData[id].protocol,\n                server: spaceData[id].server,\n                botkaURL: spaceData[id].botkaURL\n              });\n\n              _this.connectAndAddSpace(space);\n\n              _this.instantiateChannels(space, spaceData[id].channels);\n            });\n            resolve();\n          }\n        }, function (e) {\n          _this.log('error', 'couldn\\'d load spaces from RS', e);\n\n          reject();\n        });\n      });\n    },\n\n    /**\n     * Invokes the connect function on the appropriate transport service\n     * @public\n     */\n    connectServer: function connectServer(space) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).connect(space);\n    },\n    connectAndAddSpace: function connectAndAddSpace(space) {\n      this.connectServer(space);\n      this.spaces.pushObject(space);\n    },\n\n    /**\n     * Invokes the channel-join function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\"\n     * @public\n     */\n    joinChannel: function joinChannel(space, channel, type) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).join(space, channel, type);\n    },\n\n    /**\n     * Invokes the send-message function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} content\n     * @public\n     */\n    transferMessage: function transferMessage(space, channel, content) {\n      var target = {\n        '@id': channel.get('sockethubChannelId'),\n        '@type': channel.get('isUserChannel') ? 'person' : 'room',\n        displayName: channel.get('name')\n      };\n      this.getServiceForSockethubPlatform(space.get('protocol')).transferMessage(space, target, content);\n    },\n\n    /**\n     * Invokes the send-action-message function on the appropriate transport service\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.transferMeMessage(space, target, content);\n          break;\n      }\n    },\n    leaveChannel: function leaveChannel(space, channel) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.leave(space, channel);\n          break;\n      }\n    },\n    changeTopic: function changeTopic(space, channel, topic) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.changeTopic(space, channel, topic);\n          break;\n      }\n    },\n    updateChannelUserList: function updateChannelUserList(message) {\n      var channel;\n\n      switch (message.context) {\n        case 'irc':\n          channel = this.getChannelById(message.actor['@id']);\n          break;\n\n        case 'xmpp':\n          channel = this.getChannel(message.target['@id'], message.actor['@id']);\n          break;\n      }\n\n      if (channel) {\n        channel.set('connected', true);\n\n        if (Array.isArray(message.object.members)) {\n          channel.set('userList', message.object.members);\n        }\n      }\n    },\n    addUserToChannelUserList: function addUserToChannelUserList(message) {\n      var channel = this.getChannelById(message.target['@id']);\n\n      if (channel) {\n        channel.addUser(message.actor.displayName);\n      }\n    },\n    removeUserFromChannelUserList: function removeUserFromChannelUserList(message) {\n      // TODO handle user quit leaves (multiple channels)\n      // e.g. target is `{ @type: 'service', @id: 'irc://irc.freenode.net' }`\n      var channel = this.getChannelById(message.target['@id']);\n\n      if (channel) {\n        channel.removeUser(message.actor.displayName);\n      }\n    },\n    getChannelById: function getChannelById(channelId) {\n      // TODO handle multiple spaces with same hostname:\n      // This method should return an array of channels for all spaces with the\n      // same hostname\n      var hostname = channelId.match(/(?:irc:\\/\\/)?(?:.+@)?(.+?)(?:\\/|$)/)[1];\n      var space = this.spaces.findBy('server.hostname', hostname);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space by hostname', hostname);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (Ember.isEmpty(channel)) {\n        console.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n\n    /**\n     * @param {String} personId\n     * @param {String} channelId\n     */\n    getChannel: function getChannel(personId, channelId) {\n      var space = this.spaces.findBy('sockethubPersonId', personId);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space by sockethubPersonId', personId);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (Ember.isEmpty(channel)) {\n        console.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n    updateUsername: function updateUsername(message) {\n      if (_typeof(message.actor) === 'object') {\n        var actorId = message.actor['@id'];\n        var space = this.spaces.findBy('sockethubPersonId', actorId);\n\n        if (Ember.isPresent(space)) {\n          space.updateUsername(message.target.displayName);\n        }\n      }\n    },\n    updateChannelTopic: function updateChannelTopic(message) {\n      var hostname;\n\n      if (_typeof(message.target) === 'object') {\n        hostname = message.target['@id'].match(/irc:\\/\\/(.+)\\//)[1];\n      } else if (typeof message.actor === 'string') {\n        hostname = message.actor.match(/irc:\\/\\/.+@(.+)/)[1];\n      }\n\n      var space = this.spaces.findBy('server.hostname', hostname);\n\n      if (!Ember.isEmpty(space)) {\n        var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n        if (Ember.isEmpty(channel)) {\n          console.warn('No channel for update topic message found. Creating it.', message);\n          channel = this.createChannel(space, message.target['displayName']);\n        }\n\n        var currentTopic = channel.get('topic');\n        var newTopic = message.object.topic;\n        channel.set('topic', newTopic);\n\n        if (Ember.isPresent(currentTopic) && newTopic !== currentTopic && !channel.get('visible')) {\n          Notification.requestPermission(function () {\n            new Notification(channel.name, {\n              body: \"New Topic: \".concat(newTopic)\n            });\n          });\n        } // let notification = Message.create({\n        //   type: 'notification-topic-change',\n        //   date: new Date(message.published),\n        //   nickname: message.actor.displayName,\n        //   content: message.object.topic\n        // });\n        // channel.get('messages').pushObject(notification);\n\n      }\n    },\n    instantiateChannels: function instantiateChannels(space, channels) {\n      var _this2 = this;\n\n      channels.forEach(function (channelName) {\n        _this2.createChannel(space, channelName);\n      });\n    },\n    createChannel: function createChannel(space, channelName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _channel.default.create({\n        space: space,\n        name: channelName,\n        sockethubChannelId: platform.generateChannelId(space, channelName)\n      });\n\n      this.joinChannel(space, channel, \"room\");\n      space.get('channels').pushObject(channel); // TODO Do we need this on startup? Could overwrite updates from remote.\n\n      this.storage.saveSpace(space);\n\n      if (channel.get('isLogged')) {\n        this.loadLastMessages(space, channel, _moment.default.utc(), 2).catch(function () {});\n      }\n\n      return channel;\n    },\n    loadLastMessages: function loadLastMessages(space, channel, date) {\n      var _this3 = this;\n\n      var maximumDays = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 14;\n      var searchUntilDate;\n\n      if (channel.get('searchedPreviousLogsUntilDate')) {\n        searchUntilDate = (0, _moment.default)(channel.get('searchedPreviousLogsUntilDate')).subtract(maximumDays, 'days');\n      } else {\n        searchUntilDate = _moment.default.utc().subtract(maximumDays, 'days');\n      }\n\n      if (date.isBefore(searchUntilDate, 'day')) {\n        channel.set('searchedPreviousLogsUntilDate', date);\n        return;\n      }\n\n      return this.loadArchiveMessages(space, channel, date).catch(function () {\n        // didn't find any archive for this day, restart searching for the previous day\n        return _this3.loadLastMessages(space, channel, date.subtract(1, 'day'));\n      });\n    },\n    loadArchiveMessages: function loadArchiveMessages(space, channel, date) {\n      var _this4 = this;\n\n      var logsUrl = \"\".concat(_environment.default.publicLogsUrl, \"/\").concat(space.get('name').toLowerCase(), \"/channels/\").concat(channel.get('slug'), \"/\");\n      logsUrl += date.format('YYYY/MM/DD');\n      return this.ajax.request(logsUrl, {\n        type: 'GET',\n        dataType: 'json'\n      }).then(function (archive) {\n        Ember.get(archive, 'today.messages').forEach(function (message) {\n          _this4.log('chat_message', message);\n\n          var channelMessage = _message.default.create({\n            type: 'message-chat',\n            date: new Date(message.timestamp),\n            nickname: message.from,\n            content: message.text\n          });\n\n          channel.addMessage(channelMessage);\n        });\n        var previous = Ember.get(archive, 'today.previous');\n        channel.set('searchedPreviousLogsUntilDate', _moment.default.utc(previous.replace(/\\//g, '-')));\n      }).catch(function (error) {\n        _this4.log('ajax-error', 'couldn\\'t load archive document', error);\n\n        throw error;\n      });\n    },\n    createUserChannel: function createUserChannel(space, userName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _user_channel.default.create({\n        space: space,\n        name: userName,\n        sockethubChannelId: platform.generateChannelId(space, userName)\n      }); // TODO check if this is necesarry for XMPP,\n      // because for IRC it is not\n\n\n      this.joinChannel(space, channel, \"person\");\n      space.get('channels').pushObject(channel);\n      return channel;\n    },\n    removeChannel: function removeChannel(space, channelName) {\n      var channel = space.get('channels').findBy('name', channelName);\n      this.leaveChannel(space, channel);\n      space.get('channels').removeObject(channel);\n      this.storage.saveSpace(space);\n      return channel;\n    },\n    getServiceForSockethubPlatform: function getServiceForSockethubPlatform(protocol) {\n      return this.get(protocol.dasherize());\n    },\n\n    /*\n     * @private\n     *\n     * Handles completed Sockethub actions:\n     *\n     *     - Successfully joined a channel\n     */\n    handleSockethubCompleted: function handleSockethubCompleted(message) {\n      this.log(\"\".concat(message.context, \"_completed\"), message);\n\n      switch (message['@type']) {\n        case 'join':\n          var space = this.spaces.findBy('sockethubPersonId', message.actor['@id']); // try to find space by older sockethubPersonId\n\n          if (Ember.isEmpty(space)) {\n            space = this.spaces.find(function (space) {\n              return space.get('previousSockethubPersonIds').includes(message.actor['@id']);\n            });\n          }\n\n          if (!Ember.isEmpty(space)) {\n            this.get(message.context).handleJoinCompleted(space, message);\n          } else {\n            console.warn('Could not find space for join message', message);\n          }\n\n          break;\n      }\n    },\n\n    /**\n     * Handles incoming Sockethub messages:\n     * - Attendance list for channel\n     * - Another user joined or left a channel\n     * - Received a channel message (normal or me/action)\n     * - A channel topic was updated\n     * - The username/address changed\n     * @private\n     */\n    handleSockethubMessage: function handleSockethubMessage(message) {\n      this.log(\"\".concat(message.context, \"_message\"), 'SH message', message);\n\n      switch (message['@type']) {\n        case 'observe':\n          if (message.object['@type'] === 'attendance') {\n            this.updateChannelUserList(message);\n          }\n\n          break;\n\n        case 'join':\n          this.handleChannelJoin(message);\n          break;\n\n        case 'leave':\n          this.removeUserFromChannelUserList(message);\n          break;\n\n        case 'send':\n          switch (message.object['@type']) {\n            case 'message':\n            case 'me':\n              this.getServiceForSockethubPlatform(message.context).addMessageToChannel(message);\n              break;\n          }\n\n          break;\n\n        case 'update':\n          switch (message.object['@type']) {\n            case 'topic':\n              this.updateChannelTopic(message);\n              break;\n\n            case 'address':\n              this.updateUsername(message);\n              break;\n\n            case 'presence':\n              this.xmpp.handlePresenceUpdate(message);\n              break;\n\n            case 'error':\n              console.warn('Got error update message', message.actor['@id'], message.object.content);\n              break;\n          }\n\n          break;\n      }\n    },\n\n    /**\n     * Handles the various checks assosciated with channel joins\n     * @private\n     */\n    handleChannelJoin: function handleChannelJoin(message) {\n      if (message.object['@type'] && message.object['@type'] === 'error') {\n        // failed to join a channel\n        var channel = this.getChannel(message.target['@id'], message.actor['@id']);\n\n        if (Ember.isPresent(channel)) {\n          channel.set('connected', false);\n        } else {\n          console.warn('Could not find channel for error message', message);\n        }\n      } else {\n        this.addUserToChannelUserList(message);\n      }\n    },\n\n    /**\n     * Handles incoming Sockethub errors/failures\n     * @private\n     */\n    handleSockethubFailure: function handleSockethubFailure(message) {\n      this.log('sh_failure', message);\n    },\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/ember-elsewhere\", [\"exports\", \"ember-elsewhere/services/ember-elsewhere\"], function (_exports, _emberElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _emberElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/services/liquid-fire-transitions\", [\"exports\", \"liquid-fire/transition-map\"], function (_exports, _transitionMap) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _transitionMap.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/services/logger\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Service.extend({\n    enabled: true,\n    allowedTypes: null,\n    activeTypes: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('allowedTypes', ['connection', 'error', 'join', 'leave', 'message', 'irc_message', 'xmpp_message', 'send', 'xmpp_completed', 'irc_completed', 'sh_completed', 'sh_failure', 'irc', 'xmpp', 'ajax-error', 'chat_message']);\n      this.set('activeTypes', ['connection', 'error', 'join', 'leave', 'send', 'sh_completed', 'xmpp_completed', 'irc_completed', 'sh_failure', 'irc', 'xmpp', 'message', 'irc_message', 'xmpp_message']);\n    },\n    log: function log(type) {\n      if (!this.allowedTypes.includes(type)) {\n        throw new Error(\"You specified a unknown type: \\\"\".concat(type, \"\\\".\"));\n      }\n\n      if (this.activeTypes.includes(type) && this.enabled) {\n        var params = Array.prototype.slice.call(arguments);\n        params[0] = \"[\".concat(params[0], \"]\");\n        console.debug.apply(null, params);\n      }\n    },\n    add: function add(type) {\n      this.activeTypes.addObject(type);\n    },\n    remove: function remove(type) {\n      this.activeTypes.removeObject(type);\n    },\n    disable: function disable() {\n      this.set('enabled', false);\n    },\n    enable: function enable() {\n      this.set('enabled', true);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/moment\", [\"exports\", \"ember-moment/services/moment\", \"hyperchannel/config/environment\"], function (_exports, _moment, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _Ember = Ember,\n      get = _Ember.get;\n\n  var _default = _moment.default.extend({\n    defaultFormat: get(_environment.default, 'moment.outputFormat')\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/remotestorage\", [\"exports\", \"hyperchannel/models/space\", \"npm:remotestoragejs\", \"npm:remotestorage-module-kosmos\", \"hyperchannel/config/environment\"], function (_exports, _space, _npmRemotestoragejs, _npmRemotestorageModuleKosmos, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Service.extend({\n    rs: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      var rs = new _npmRemotestoragejs.default({\n        modules: [_npmRemotestorageModuleKosmos.default.default]\n      });\n      rs.access.claim('kosmos', 'rw');\n      rs.caching.enable('/kosmos/');\n      this.set('rs', rs);\n    },\n    addDefaultSpace: function addDefaultSpace() {\n      var spaceConfig = _environment.default.spacePresets.find(function (s) {\n        return s.id === _environment.default.defaultSpaceId;\n      });\n\n      var params = {\n        id: spaceConfig.id,\n        name: spaceConfig.name,\n        protocol: spaceConfig.protocol,\n        server: spaceConfig.server,\n        channels: ['#hackerbeach', '#kosmos', '#kosmos-dev', '#kosmos-random', '#sockethub'],\n        botkaURL: spaceConfig.botkaURL\n      };\n      params.server.nickname = window.prompt(\"Choose a nickname\");\n      return this.rs.kosmos.spaces.store(params).then(function () {\n        console.debug('[remotestorage]', 'created/stored default space');\n        var channels = params.channels;\n        delete params.channels;\n\n        var space = _space.default.create();\n\n        space.setProperties(params);\n        return {\n          space: space,\n          channels: channels\n        };\n      });\n    },\n    saveSpace: function saveSpace(space) {\n      return this.rs.kosmos.spaces.store(space.serialize()).then(function () {\n        return console.debug('[remotestorage]', \"saved space \".concat(space.get('name')));\n      }).catch(function (err) {\n        return console.error('saving space failed:', err);\n      });\n    },\n    removeSpace: function removeSpace(space) {\n      return this.rs.kosmos.spaces.remove(space.get('id')).then(function () {\n        return console.debug('[remotestorage]', \"removed space \".concat(space.get('name'), \" from RS\"));\n      });\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/sockethub-irc\", [\"exports\", \"hyperchannel/utils/channel-message-from-sockethub-object\"], function (_exports, _channelMessageFromSockethubObject) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param {Space} space - space model the activity belongs to\n   * @param {Object} details - the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'irc',\n      actor: space.get('sockethubPersonId')\n    };\n    return Ember.$.extend({}, baseObject, details);\n  }\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n\n\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n  /**\n   * This service provides helpers for SocketHub IRC communications\n   * @module hyperchannel/services/sockethub-irc\n   */\n\n\n  var _default = Ember.Service.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n\n    /**\n     * - Creates an ActivityStreams person object for\n     *   future use\n     * - Emits credentials for future IRC server messages,\n     *   like e.g. `join`\n     * @public\n     */\n    connect: function connect(space) {\n      var actorObject = {\n        '@id': space.get('sockethubPersonId'),\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      };\n      console.debug('actor object', actorObject);\n      this.sockethub.ActivityStreams.Object.create(actorObject);\n      var credentials = buildActivityObject(space, {\n        object: {\n          '@type': 'credentials',\n          nick: space.get('server.nickname'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          secure: space.get('server.secure')\n        }\n      });\n      this.log('irc', 'connecting to IRC network', credentials);\n      this.sockethub.socket.emit('credentials', credentials);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n      if (channel) {\n        this.observeChannel(space, channel);\n      }\n    },\n\n    /**\n     * Join a channel/room\n     * @public\n     */\n    join: function join(space, channel, type) {\n      switch (type) {\n        case 'room':\n          this.sockethub.ActivityStreams.Object.create({\n            '@type': type,\n            '@id': channel.get('sockethubChannelId'),\n            displayName: channel.get('name')\n          });\n          var joinMsg = buildActivityObject(space, {\n            '@type': 'join',\n            target: channel.get('sockethubChannelId'),\n            object: {}\n          });\n          this.log('irc', 'joining channel', joinMsg);\n          this.sockethub.socket.emit('message', joinMsg);\n          break;\n\n        case 'person':\n          channel.set('connected', true);\n          break;\n      }\n    },\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n    /**\n     * Send an action chat message to a channel\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content, 'me');\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      var hostname = message.actor['@id'].match(/irc:\\/\\/.+@(.+)/)[1];\n      var space = this.get('coms.spaces').findBy('server.hostname', hostname);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message); // TODO should check for message and update sent status if exists\n\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n    /**\n     * Leave a channel\n     * @public\n     */\n    leave: function leave(space, channel) {\n      if (!channel.get('isUserChannel')) {\n        // TODO Do we really need to create this room for leaving? It should\n        // already have been created when joining.\n        this.sockethub.ActivityStreams.Object.create({\n          '@type': \"room\",\n          '@id': channel.get('sockethubChannelId'),\n          displayName: channel.get('name')\n        });\n        var leaveMsg = buildActivityObject(space, {\n          '@type': 'leave',\n          target: channel.get('sockethubChannelId'),\n          object: {}\n        });\n        this.log('leave', 'leaving channel', leaveMsg);\n        this.sockethub.socket.emit('message', leaveMsg);\n      }\n    },\n\n    /**\n     * Send a channel topic change\n     * @public\n     */\n    changeTopic: function changeTopic(space, channel, topic) {\n      var topicMsg = buildActivityObject(space, {\n        '@type': 'update',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'topic',\n          topic: topic\n        }\n      });\n      this.sockethub.socket.emit('message', topicMsg);\n    },\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n      this.log('irc', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return \"irc://\".concat(space.get('server.hostname'), \"/\").concat(channelName);\n    },\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelName, channel;\n\n      if (space.get('userNickname') === message.target.displayName) {\n        // direct message\n        targetChannelName = message.actor.displayName || message.actor['@id'];\n        channel = space.get('channels').findBy('name', targetChannelName);\n\n        if (!channel) {\n          channel = this.coms.createUserChannel(space, targetChannelName);\n        }\n      } else {\n        // channel message\n        targetChannelName = message.target.displayName;\n        channel = space.get('channels').findBy('name', targetChannelName);\n\n        if (!channel) {\n          channel = this.coms.createChannel(space, targetChannelName);\n        }\n      }\n\n      return channel;\n    },\n\n    /**\n     * Utility function for easier logging\n     * @protected\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/sockethub-xmpp\", [\"exports\", \"hyperchannel/utils/channel-message-from-sockethub-object\"], function (_exports, _channelMessageFromSockethubObject) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param space {Space} space model the activity belongs to\n   * @param details {Object} the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'xmpp',\n      actor: space.get('sockethubPersonId')\n    };\n    return Ember.$.extend({}, baseObject, details);\n  }\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n\n\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n  /**\n   * This service provides helpers for SocketHub XMPP communications\n   * @module hyperchannel/services/sockethub-xmpp\n   */\n\n\n  var _default = Ember.Service.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n\n    /**\n     * @public\n     */\n    connect: function connect(space) {\n      var actor = space.get('sockethubPersonId');\n      this.sockethub.ActivityStreams.Object.create({\n        '@id': actor,\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      });\n      var credentialsJob = {\n        actor: actor,\n        context: 'xmpp',\n        object: {\n          '@type': 'credentials',\n          username: space.get('server.username'),\n          password: space.get('server.password'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          resource: 'hyperchannel'\n        }\n      };\n      var connectJob = {\n        '@type': 'connect',\n        context: 'xmpp',\n        actor: actor\n      };\n      this.log('xmpp', 'connecting to XMPP server...');\n      this.sockethub.socket.emit('credentials', credentialsJob);\n      this.sockethub.socket.emit('message', connectJob);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channelId = message.target['@id'].split('/')[0];\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (channel) {\n        this.observeChannel(space, channel);\n      } else {\n        console.warn('Could not find channel for join message', message);\n      }\n    },\n\n    /**\n     * Join a channel/room\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\".\n     * @public\n     */\n    join: function join(space, channel, type) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@type': type,\n        '@id': channel.get('sockethubChannelId'),\n        displayName: channel.get('name')\n      });\n      var joinMsg = buildActivityObject(space, {\n        '@type': 'join',\n        actor: {\n          '@type': 'person',\n          '@id': space.get('sockethubPersonId'),\n          displayName: space.get('server.nickname')\n        },\n        target: {\n          '@id': channel.get('sockethubChannelId'),\n          '@type': type\n        }\n      });\n      this.log('xmpp', 'joining channel', joinMsg);\n      this.sockethub.socket.emit('message', joinMsg);\n    },\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n    handlePresenceUpdate: function handlePresenceUpdate(message) {\n      if (message.target['@type'] === 'room') {\n        var targetChannelId = message.target['@id'];\n        var space = this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n        var channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (channel) {\n          if (message.object.presence === 'offline') {\n            channel.removeUser(message.actor.displayName);\n          } else {\n            channel.addUser(message.actor.displayName);\n          }\n        }\n      } else {\n        console.debug('Presence update:', message.actor['@id'], message.object.presence, message.object.status);\n      }\n    },\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      if (Ember.isEmpty(message.object.content)) {\n        return;\n      }\n\n      var space = this.getSpaceForMessage(message);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message); // TODO should check for message and update sent status if exists\n\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n      this.log('xmpp', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return channelName;\n    },\n\n    /**\n     * Get the space for a given message.\n     *\n     * @param {Object} message\n     * @returns {Space} space\n     * @public\n     */\n    getSpaceForMessage: function getSpaceForMessage(message) {\n      var targetChannelId = message.target['@id'];\n\n      if (message.target['@type'] === 'room') {\n        return this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n      } else {\n        return this.get('coms.spaces').findBy('sockethubPersonId', targetChannelId);\n      }\n    },\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelId = message.target['@id'];\n      var channel;\n\n      if (message.target['@type'] === 'room') {\n        channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (!channel) {\n          channel = this.coms.createChannel(space, targetChannelId);\n        }\n      } else {\n        channel = space.get('channels').findBy('sockethubChannelId', message.actor['@id']);\n\n        if (!channel) {\n          channel = this.coms.createUserChannel(space, message.actor['@id']);\n        }\n      }\n\n      return channel;\n    },\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/storages/user-settings\", [\"exports\", \"ember-local-storage/local/object\", \"hyperchannel/config/environment\"], function (_exports, _object, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var Storage = _object.default.extend();\n\n  Storage.reopenClass({\n    initialState: function initialState() {\n      return {\n        nickname: null,\n        currentSpace: _environment.default.defaultSpaceId,\n        currentChannel: 'kosmos'\n      };\n    }\n  });\n  var _default = Storage;\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"a9420KGw\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"app-container\\\",null,[[\\\"showGlobalMenu\\\",\\\"showChannelMenu\\\"],[[23,[\\\"showGlobalMenu\\\"]],[23,[\\\"showChannelMenu\\\"]]]],{\\\"statements\\\":[[0,\\\"  \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"global\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"header\\\"],[11,\\\"id\\\",\\\"sitename\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"h1\\\"],[9],[0,\\\"Kosmos\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"main\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"nav\\\"],[11,\\\"id\\\",\\\"channels\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"channel-nav\\\",null,[[\\\"spaces\\\",\\\"joinChannel\\\"],[[23,[\\\"spaces\\\"]],[27,\\\"route-action\\\",[\\\"openNewChannel\\\"],null]]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[1,[21,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[1,[21,\\\"modal-target\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/application.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/settings\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"afA8SuH0\",\n    \"block\": \"{\\\"symbols\\\":[\\\"spacePreset\\\",\\\"space\\\"],\\\"statements\\\":[[7,\\\"section\\\"],[11,\\\"id\\\",\\\"settings\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Settings\\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Spaces\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"model\\\",\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"h3\\\"],[9],[1,[22,2,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n      \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"delete\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeSpace\\\",[22,2,[]]]],[10],[0,\\\"\\\\n      \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Presets\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"model\\\",\\\"spacePresets\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"h3\\\"],[9],[1,[22,1,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n      \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"add\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"addSpaceFromPreset\\\",[22,1,[]]]],[10],[0,\\\"\\\\n      \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Add new space\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"form\\\"],[11,\\\"name\\\",\\\"add-space\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[23,[\\\"newSpace\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled\\\"]]],false],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"tls-enabled\\\"],[9],[0,\\\"Secure (TLS)\\\"],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"type\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"password\\\",[23,[\\\"newSpace\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"input\\\"],[11,\\\"value\\\",\\\"Save\\\"],[11,\\\"type\\\",\\\"submit\\\"],[9],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[3,\\\"action\\\",[[22,0,[]],\\\"addSpace\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showSpaceSettingModal\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[27,\\\"to-elsewhere\\\",null,[[\\\"named\\\",\\\"send\\\"],[\\\"modal\\\",[27,\\\"hash\\\",null,[[\\\"body\\\",\\\"onOutsideClick\\\"],[[27,\\\"component\\\",[\\\"space-setting-modal\\\"],[[\\\"settings\\\",\\\"onSave\\\",\\\"onCancel\\\"],[[23,[\\\"selectedSpacePreset\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"saveSpace\\\"],null],[27,\\\"action\\\",[[22,0,[]],[27,\\\"mut\\\",[[23,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]],[27,\\\"action\\\",[[22,0,[]],[27,\\\"mut\\\",[[23,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/settings.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/channel\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"mgWPpc5k\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\",\\\"menu\\\"],[[23,[\\\"model\\\"]],[23,[\\\"newMessage\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"sendMessage\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"executeCommand\\\"],null],[27,\\\"route-action\\\",[\\\"menu\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/channel.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/index\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"2CSHcqV2\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"section\\\"],[11,\\\"id\\\",\\\"space\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[9],[1,[23,[\\\"model\\\",\\\"name\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"discreet\\\"],[9],[1,[23,[\\\"model\\\",\\\"server\\\",\\\"hostname\\\"]],false],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n      \\\"],[1,[27,\\\"web-push-subscription\\\",null,[[\\\"botkaURL\\\",\\\"username\\\"],[[23,[\\\"model\\\",\\\"botkaURL\\\"]],[23,[\\\"model\\\",\\\"userNickname\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/index.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/user_channel\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"8FTGKIyw\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\"],[[23,[\\\"model\\\"]],[23,[\\\"newMessage\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"sendMessage\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"executeCommand\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/user_channel.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/transitions/cross-fade\", [\"exports\", \"liquid-fire/transitions/cross-fade\"], function (_exports, _crossFade) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _crossFade.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/default\", [\"exports\", \"liquid-fire/transitions/default\"], function (_exports, _default) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _default.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/explode\", [\"exports\", \"liquid-fire/transitions/explode\"], function (_exports, _explode) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _explode.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/fade\", [\"exports\", \"liquid-fire/transitions/fade\"], function (_exports, _fade) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _fade.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/flex-grow\", [\"exports\", \"liquid-fire/transitions/flex-grow\"], function (_exports, _flexGrow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _flexGrow.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/fly-to\", [\"exports\", \"liquid-fire/transitions/fly-to\"], function (_exports, _flyTo) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _flyTo.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/move-over\", [\"exports\", \"liquid-fire/transitions/move-over\"], function (_exports, _moveOver) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _moveOver.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/scale\", [\"exports\", \"liquid-fire/transitions/scale\"], function (_exports, _scale) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _scale.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/scroll-then\", [\"exports\", \"liquid-fire/transitions/scroll-then\"], function (_exports, _scrollThen) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _scrollThen.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-down\", [\"exports\", \"liquid-fire/transitions/to-down\"], function (_exports, _toDown) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toDown.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-left\", [\"exports\", \"liquid-fire/transitions/to-left\"], function (_exports, _toLeft) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toLeft.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-right\", [\"exports\", \"liquid-fire/transitions/to-right\"], function (_exports, _toRight) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toRight.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-up\", [\"exports\", \"liquid-fire/transitions/to-up\"], function (_exports, _toUp) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toUp.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/wait\", [\"exports\", \"liquid-fire/transitions/wait\"], function (_exports, _wait) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _wait.default;\n    }\n  });\n});","define(\"hyperchannel/utils/channel-message-from-sockethub-object\", [\"exports\", \"hyperchannel/models/message\"], function (_exports, _message) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = channelMessageFromSockethubObject;\n\n  function channelMessageFromSockethubObject(message) {\n    var channelMessage = _message.default.create({\n      type: message.object['@type'] === 'me' ? 'message-chat-me' : 'message-chat',\n      date: new Date(message.published),\n      nickname: message.actor.displayName || message.actor['@id'],\n      content: message.object.content\n    });\n\n    return channelMessage;\n  }\n});","define(\"hyperchannel/utils/url-base64-to-uint8-array\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = urlBase64ToUint8Array;\n\n  function urlBase64ToUint8Array(base64String) {\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\n    var base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    var rawData = window.atob(base64);\n    var outputArray = new Uint8Array(rawData.length);\n\n    for (var i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n});","define('hyperchannel/config/environment', [], function() {\n  var prefix = 'hyperchannel';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","\n          if (!runningTests) {\n            require(\"hyperchannel/app\")[\"default\"].create({\"name\":\"hyperchannel\",\"version\":\"0.3.0+34f78800\"});\n          }\n        \n"]}