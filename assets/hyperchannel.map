{"version":3,"sources":["vendor/ember-cli/app-prefix.js","hyperchannel/app.js","hyperchannel/components/app-container/component.js","hyperchannel/components/app-container/template.js","hyperchannel/components/app-version.js","hyperchannel/components/channel-container/component.js","hyperchannel/components/channel-container/template.js","hyperchannel/components/channel-input-field/component.js","hyperchannel/components/channel-nav/component.js","hyperchannel/components/channel-nav/template.js","hyperchannel/components/date-headline/component.js","hyperchannel/components/date-headline/template.js","hyperchannel/components/message-chat-me/component.js","hyperchannel/components/message-chat-me/template.js","hyperchannel/components/message-chat/component.js","hyperchannel/components/message-chat/template.js","hyperchannel/components/notification-topic-change/component.js","hyperchannel/components/notification-topic-change/template.js","hyperchannel/controllers/application.js","hyperchannel/controllers/index.js","hyperchannel/controllers/settings.js","hyperchannel/controllers/space.js","hyperchannel/controllers/space/base_channel.js","hyperchannel/controllers/space/channel.js","hyperchannel/controllers/space/user_channel.js","hyperchannel/ember-gestures/recognizers/pan.js","hyperchannel/ember-gestures/recognizers/pinch.js","hyperchannel/ember-gestures/recognizers/press.js","hyperchannel/ember-gestures/recognizers/rotate.js","hyperchannel/ember-gestures/recognizers/swipe.js","hyperchannel/ember-gestures/recognizers/swipeleft.js","hyperchannel/ember-gestures/recognizers/swiperight.js","hyperchannel/ember-gestures/recognizers/tap.js","hyperchannel/ember-gestures/recognizers/vertical-pan.js","hyperchannel/ember-gestures/recognizers/vertical-swipe.js","hyperchannel/event_dispatcher.js","hyperchannel/helpers/is-after.js","hyperchannel/helpers/is-before.js","hyperchannel/helpers/is-between.js","hyperchannel/helpers/is-same-or-after.js","hyperchannel/helpers/is-same-or-before.js","hyperchannel/helpers/is-same.js","hyperchannel/helpers/moment-add.js","hyperchannel/helpers/moment-calendar.js","hyperchannel/helpers/moment-duration.js","hyperchannel/helpers/moment-format.js","hyperchannel/helpers/moment-from-now.js","hyperchannel/helpers/moment-from.js","hyperchannel/helpers/moment-subtract.js","hyperchannel/helpers/moment-to-date.js","hyperchannel/helpers/moment-to-now.js","hyperchannel/helpers/moment-to.js","hyperchannel/helpers/moment-unix.js","hyperchannel/helpers/moment.js","hyperchannel/helpers/now.js","hyperchannel/helpers/route-action.js","hyperchannel/helpers/unix.js","hyperchannel/initializers/app-version.js","hyperchannel/initializers/container-debug-adapter.js","hyperchannel/initializers/ember-hammertime.js","hyperchannel/initializers/export-application-global.js","hyperchannel/initializers/hammer.js","hyperchannel/initializers/sockethub.js","hyperchannel/instance-initializers/ember-gestures.js","hyperchannel/instance-initializers/remotestorage.js","hyperchannel/models/base_channel.js","hyperchannel/models/channel.js","hyperchannel/models/message.js","hyperchannel/models/space.js","hyperchannel/models/user_channel.js","hyperchannel/resolver.js","hyperchannel/router.js","hyperchannel/routes/application.js","hyperchannel/routes/index.js","hyperchannel/routes/settings.js","hyperchannel/routes/space.js","hyperchannel/routes/space/base_channel.js","hyperchannel/routes/space/channel.js","hyperchannel/routes/space/user_channel.js","hyperchannel/services/-gestures.js","hyperchannel/services/ajax.js","hyperchannel/services/coms.js","hyperchannel/services/logger.js","hyperchannel/services/moment.js","hyperchannel/services/remotestorage.js","hyperchannel/services/sockethub-irc.js","hyperchannel/storages/user-settings.js","hyperchannel/templates/application.js","hyperchannel/templates/index.js","hyperchannel/templates/settings.js","hyperchannel/templates/space/channel.js","hyperchannel/templates/space/user_channel.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"names":["define","exports","_ember","_hyperchannelResolver","_emberLoadInitializers","_hyperchannelConfigEnvironment","App","undefined","MODEL_FACTORY_INJECTIONS","Application","extend","modulePrefix","podModulePrefix","Resolver","_emberGesturesMixinsRecognizers","isElementOf","id","element","$","parents","length","Component","tagName","classNames","classNameBindings","recognizers","swipeLeft","this","set","swipeRight","tap","e","get","target","Ember","HTMLBars","template","meta","revision","loc","source","start","line","column","end","moduleName","isEmpty","arity","cachedFragment","hasRendered","buildFragment","dom","el0","createDocumentFragment","el1","createComment","appendChild","createTextNode","buildRenderNodes","fragment","contextualElement","morphs","Array","createMorphAt","insertBoundary","statements","locals","templates","_emberCliAppVersionComponentsAppVersion","name","APP","version","scrollToBottom","animate","scrollTop","height","observer","run","service","inject","elementId","newMessage","channel","scrollingDisabled","coms","messagesUpdated","scheduleOnce","actions","processMessageOrCommand","substr","attrs","onCommand","onMessage","menu","which","what","sendAction","loadPreviousMessages","_this","loadLastMessages","child0","createElement","setAttribute","el2","element0","childAt","createElementMorph","child1","child2","el3","child3","child4","child5","el4","el5","element1","element2","element3","element4","element5","element6","TextField","keyUp","ev","altKey","key","_insertAtCaret","myValue","el","document","selection","focus","createRange","text","selectionStart","startPos","endPos","selectionEnd","value","substring","createAttrMorph","_moment","updateInterval","headline","computed","date","scheduleUpdate","later","notifyPropertyChange","isSame","subtract","toLocaleDateString","_hyperchannelComponentsMessageChatComponent","htmlSafe","String","message","datetime","format","dateTitle","formattedContent","content","out","match","linkifyStr","linkAttributes","rel","validate","url","test","replace","Controller","alias","spaces","showGlobalMenu","showChannelMenu","application","controller","newSpace","_hyperchannelModelsMessage","space","storage","sendMessage","create","type","Date","nickname","transferMessage","pushObject","executeCommand","availableCommands","commandText","commandSplitted","split","command","includes","toLowerCase","send","slice","Logger","warn","joinCommand","args","createChannel","saveSpace","transitionToRoute","partCommand","channelName","removeChannel","lastChannel","leaveCommand","helpCommand","meCommand","join","transferMeMessage","msgCommand","username","shift","createUserChannel","topicCommand","topic","changeTopic","_hyperchannelControllersSpaceBase_channel","_emberGesturesRecognizersPan","_emberGesturesRecognizersPinch","_emberGesturesRecognizersPress","_emberGesturesRecognizersRotate","_emberGesturesRecognizersSwipe","include","exclude","options","threshold","direction","Hammer","DIRECTION_LEFT","eventName","recognizer","DIRECTION_RIGHT","_emberGesturesRecognizersTap","Object","defineProperty","enumerable","_emberGesturesRecognizersVerticalPan","_emberGesturesRecognizersVerticalSwipe","_emberGesturesEvent_dispatcher","merge","assign","gestures","emberUseCapture","removeTracking","useFastPaths","useCapture","_emberMomentHelpersIsAfter","globalAllowEmpty","_emberMomentHelpersIsBefore","_emberMomentHelpersIsBetween","_emberMomentHelpersIsSameOrAfter","_emberMomentHelpersIsSameOrBefore","_emberMomentHelpersIsSame","_emberMomentHelpersMomentAdd","_emberMomentHelpersMomentCalendar","_emberMomentHelpersMomentDuration","_emberMomentHelpersMomentFormat","_emberMomentHelpersMomentFromNow","_emberMomentHelpersMomentFrom","_emberMomentHelpersMomentSubtract","_emberMomentHelpersMomentToDate","_emberMomentHelpersMomentToNow","_emberMomentHelpersMomentTo","_emberMomentHelpersUnix","unix","_emberMomentHelpersMoment","_emberMomentHelpersNow","_emberRouteActionHelperHelpersRouteAction","_emberCliAppVersionInitializerFactory","initialize","_emberResolverContainerDebugAdapter","app","arguments","register","_emberHammertimeComponentsComponent","exportApplicationGlobal","theGlobal","window","global","self","globalName","classify","reopen","willDestroy","_super","apply","defaults","cssProps","userSelect","sockethub","SockethubClient","io","sockethubURL","path","instantiate","singleton","_emberGetownerPolyfill","instance","lookup","appInstance","remoteStorage","rsEvents","forEach","evt","on","debug","isPresent","userList","messages","connected","sockethubChannelId","unreadMessages","unreadMentions","visible","init","isLogged","loggedChannel","find","slug","unreadMessagesClass","sortedMessages","sortBy","addDateHeadline","headlineDate","startOf","toDate","existingDateHeadline","toString","dateMessage","addMessage","addUser","removeUser","removeObject","_hyperchannelModelsBase_channel","searchedPreviousLogsUntilDate","formattedTopic","defaultProtocol","protocol","server","hostname","port","secure","password","nickServ","channels","channelNames","mapBy","loggedChannels","property","userNickname","sockethubPersonId","channelSorting","sortedChannels","sort","serialize","parseInt","isUserChannel","_emberResolver","Router","location","locationType","rootURL","map","route","Route","logger","beforeModel","model","setupListeners","instantiateSpacesAndChannels","menuProp","capitalize","toggleProperty","openNewChannel","prompt","transitionTo","_emberLocalStorage","userSettings","storageFor","redirect","currentSpace","currentChannel","_hyperchannelModelsSpace","rsKosmos","kosmos","getAll","then","res","col","keys","push","console","error","RSVP","hash","spacePresets","setupController","addSpace","params","store","modelFor","removeSpace","_this2","remove","findBy","focusMessageInput","innerWidth","_Ember$run","createChannelOrUserChannel","didTransition","setEach","_hyperchannelRoutesSpaceBase_channel","_emberGesturesServicesGestures","_emberAjaxServicesAjax","_hyperchannelModelsChannel","_hyperchannelModelsUser_channel","Service","ajax","irc","socket","handleSockethubCompleted","bind","handleSockethubMessage","handleSockethubFailure","rs","Promise","resolve","reject","spaceData","addDefaultSpace","data","connectServer","instantiateChannels","log","connect","joinChannel","leaveChannel","leave","updateChannelUserList","getChannelByMessage","object","members","addUserToChannelUserList","actor","displaName","removeUserFromChannelUserList","displayName","addressWithHostname","updateChannelTopic","currentTopic","newTopic","Notification","requestPermission","body","addMessageToChannel","targetChannelName","messageType","channelMessage","published","_this3","utc","_this4","maximumDays","searchUntilDate","isBefore","loadArchiveMessages","_this5","logsUrl","publicLogsUrl","request","dataType","archive","timestamp","from","previous","userName","observeChannel","_get","enabled","allowedTypes","activeTypes","Error","prototype","call","add","addObject","disable","enable","_emberMomentServicesMoment","defaultFormat","_npmRemotestoragejs","_npmRemotestorageModuleKosmos","rsInstance","access","claim","caching","ActivityStreams","@id","@type","credentials","context","nick","emit","joinMsg","job","topicMsg","person","channelId","observeMsg","_emberLocalStorageLocalObject","Storage","reopenClass","initialState","el6","prefix","metaName","rawConfig","querySelector","getAttribute","config","JSON","parse","unescape","default","err","runningTests","require"],"mappings":"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","file":"hyperchannel.js","sourcesContent":["\"use strict\";\n\n/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","define('hyperchannel/app', ['exports', 'ember', 'hyperchannel/resolver', 'ember-load-initializers', 'hyperchannel/config/environment'], function (exports, _ember, _hyperchannelResolver, _emberLoadInitializers, _hyperchannelConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _hyperchannelConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _hyperchannelConfigEnvironment['default'].podModulePrefix,\n    Resolver: _hyperchannelResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _hyperchannelConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('hyperchannel/components/app-container/component', ['exports', 'ember', 'ember-gestures/mixins/recognizers'], function (exports, _ember, _emberGesturesMixinsRecognizers) {\n\n  function isElementOf(id, element) {\n    return element.id === id || _ember['default'].$(element).parents('#' + id).length > 0;\n  }\n\n  exports['default'] = _ember['default'].Component.extend(_emberGesturesMixinsRecognizers['default'], {\n\n    tagName: 'div',\n    classNames: ['app-container'],\n    classNameBindings: ['showGlobalMenu:global-menu-open', 'showChannelMenu:channel-menu-open'],\n\n    recognizers: 'swipeleft swiperight tap',\n\n    swipeLeft: function swipeLeft() {\n      this.set('showGlobalMenu', false);\n    },\n\n    swipeRight: function swipeRight() {\n      this.set('showGlobalMenu', true);\n    },\n\n    tap: function tap(e) {\n      if (this.get('showGlobalMenu') && !isElementOf('channel-header', e.target) && !isElementOf('global', e.target)) {\n        this.set('showGlobalMenu', false);\n      }\n    }\n\n  });\n});","define(\"hyperchannel/components/app-container/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/components/app-container/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [[\"content\", \"yield\", [\"loc\", [null, [1, 0], [1, 9]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('hyperchannel/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'hyperchannel/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _hyperchannelConfigEnvironment) {\n\n  var name = _hyperchannelConfigEnvironment['default'].APP.name;\n  var version = _hyperchannelConfigEnvironment['default'].APP.version;\n\n  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({\n    version: version,\n    name: name\n  });\n});","define('hyperchannel/components/channel-container/component', ['exports', 'ember'], function (exports, _ember) {\n  var Component = _ember['default'].Component;\n  var observer = _ember['default'].observer;\n  var run = _ember['default'].run;\n  var service = _ember['default'].inject.service;\n\n  function scrollToBottom() {\n    _ember['default'].$('#channel-content').animate({\n      scrollTop: _ember['default'].$('#channel-content ul').height()\n    }, '500');\n  }\n\n  exports['default'] = Component.extend({\n\n    elementId: 'channel',\n    newMessage: '',\n    channel: null,\n    scrollingDisabled: false,\n\n    coms: service(),\n\n    messagesUpdated: observer('channel.messages.[]', function () {\n      if (!this.get('scrollingDisabled')) {\n        run.scheduleOnce('afterRender', scrollToBottom);\n      }\n    }),\n\n    actions: {\n\n      processMessageOrCommand: function processMessageOrCommand() {\n        if (this.get('newMessage').substr(0, 1) === \"/\") {\n          this.attrs.onCommand(this.get('newMessage'));\n        } else {\n          this.attrs.onMessage(this.get('newMessage'));\n        }\n      },\n\n      menu: function menu(which, what) {\n        this.sendAction('menu', which, what);\n      },\n\n      loadPreviousMessages: function loadPreviousMessages() {\n        var _this = this;\n\n        this.set('scrollingDisabled', true);\n        this.get('coms').loadLastMessages(this.get('channel.space'), this.get('channel'), this.get('channel.searchedPreviousLogsUntilDate'))['catch'](function () {\n          // TODO what to do here?\n        })['finally'](function () {\n          _this.set('scrollingDisabled', false);\n        });\n      }\n\n    }\n  });\n});","define(\"hyperchannel/components/channel-container/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 11,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 15,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1, \"class\", \"load-previous\");\n          dom.setAttribute(el1, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n          var el2 = dom.createTextNode(\"\\n        Load previous messages\\n      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(1);\n          morphs[0] = dom.createElementMorph(element0);\n          return morphs;\n        },\n        statements: [[\"element\", \"action\", [\"loadPreviousMessages\"], [], [\"loc\", [null, [12, 9], [12, 42]]], 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })();\n    var child1 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 18,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 22,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);\n          return morphs;\n        },\n        statements: [[\"inline\", \"component\", [[\"get\", \"message.type\", [\"loc\", [null, [20, 22], [20, 34]]], 0, 0, 0, 0]], [\"message\", [\"subexpr\", \"@mut\", [[\"get\", \"message\", [\"loc\", [null, [20, 43], [20, 50]]], 0, 0, 0, 0]], [], [], 0, 0]], [\"loc\", [null, [20, 10], [20, 52]]], 0, 0]],\n        locals: [\"message\"],\n        templates: []\n      };\n    })();\n    var child2 = (function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.8.3\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 23,\n                \"column\": 8\n              },\n              \"end\": {\n                \"line\": 25,\n                \"column\": 8\n              }\n            },\n            \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.setAttribute(el1, \"class\", \"no-messages\");\n            var el2 = dom.createTextNode(\"No recent messages to display.\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n      var child1 = (function () {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.8.3\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 25,\n                \"column\": 8\n              },\n              \"end\": {\n                \"line\": 27,\n                \"column\": 8\n              }\n            },\n            \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            dom.setAttribute(el1, \"class\", \"no-messages\");\n            var el2 = dom.createTextNode(\"No Kosmos logs configured for this channel. \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"a\");\n            dom.setAttribute(el2, \"href\", \"https://wiki.kosmos.org/Setting_up_channel_logs\");\n            dom.setAttribute(el2, \"target\", \"_blank\");\n            dom.setAttribute(el2, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n            var el3 = dom.createTextNode(\"Learn more\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 22,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 28,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [[\"block\", \"if\", [[\"get\", \"channel.isLogged\", [\"loc\", [null, [23, 14], [23, 30]]], 0, 0, 0, 0]], [], 0, 1, [\"loc\", [null, [23, 8], [27, 15]]]]],\n        locals: [],\n        templates: [child0, child1]\n      };\n    })();\n    var child3 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 48,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 48,\n              \"column\": 67\n            }\n          },\n          \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1, \"class\", \"icon-users\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() {\n          return [];\n        },\n        statements: [],\n        locals: [],\n        templates: []\n      };\n    })();\n    var child4 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 48,\n              \"column\": 125\n            },\n            \"end\": {\n              \"line\": 48,\n              \"column\": 172\n            }\n          },\n          \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1, \"class\", \"icon-cog\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() {\n          return [];\n        },\n        statements: [],\n        locals: [],\n        templates: []\n      };\n    })();\n    var child5 = (function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.8.3\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 54,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 54,\n                \"column\": 65\n              }\n            },\n            \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [[\"content\", \"username\", [\"loc\", [null, [54, 53], [54, 65]]], 0, 0, 0, 0]],\n          locals: [],\n          templates: []\n        };\n      })();\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 53,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 55,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n          return morphs;\n        },\n        statements: [[\"block\", \"link-to\", [\"space.userChannel\", [\"get\", \"username\", [\"loc\", [null, [54, 43], [54, 51]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [54, 12], [54, 77]]]]],\n        locals: [\"username\"],\n        templates: [child0]\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 59,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"main\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"header\");\n        dom.setAttribute(el2, \"id\", \"channel-header\");\n        dom.setAttribute(el2, \"onClick\", \"\");\n        dom.setAttribute(el2, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        dom.setAttribute(el3, \"id\", \"channel-name\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        dom.setAttribute(el3, \"id\", \"channel-title\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"nav\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4, \"href\", \"#\");\n        dom.setAttribute(el4, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5, \"class\", \"icon-megaphone\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4, \"href\", \"#\");\n        dom.setAttribute(el4, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5, \"class\", \"icon-mute\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2, \"id\", \"channel-content\");\n        dom.setAttribute(el2, \"class\", \"main\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"footer\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"section\");\n        dom.setAttribute(el3, \"id\", \"new-message\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"form\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"aside\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"nav\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4, \"href\", \"#\");\n        dom.setAttribute(el4, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5, \"class\", \"icon-paperclip\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4, \"href\", \"#\");\n        dom.setAttribute(el4, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5, \"class\", \"icon-resize-enlarge\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"section\");\n        dom.setAttribute(el2, \"id\", \"user-list\");\n        dom.setAttribute(el2, \"class\", \"main\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element1 = dom.childAt(fragment, [0]);\n        var element2 = dom.childAt(element1, [1]);\n        var element3 = dom.childAt(element1, [3]);\n        var element4 = dom.childAt(element1, [5, 1, 1]);\n        var element5 = dom.childAt(fragment, [2]);\n        var element6 = dom.childAt(element5, [1, 1]);\n        var morphs = new Array(10);\n        morphs[0] = dom.createElementMorph(element2);\n        morphs[1] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);\n        morphs[2] = dom.createMorphAt(dom.childAt(element2, [3]), 0, 0);\n        morphs[3] = dom.createMorphAt(element3, 1, 1);\n        morphs[4] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);\n        morphs[5] = dom.createElementMorph(element4);\n        morphs[6] = dom.createMorphAt(element4, 1, 1);\n        morphs[7] = dom.createMorphAt(element6, 1, 1);\n        morphs[8] = dom.createMorphAt(element6, 3, 3);\n        morphs[9] = dom.createMorphAt(dom.childAt(element5, [3, 1]), 1, 1);\n        return morphs;\n      },\n      statements: [[\"element\", \"action\", [\"menu\", \"global\", \"toggle\"], [], [\"loc\", [null, [2, 30], [2, 65]]], 0, 0], [\"content\", \"channel.name\", [\"loc\", [null, [3, 26], [3, 42]]], 0, 0, 0, 0], [\"content\", \"channel.formattedTopic\", [\"loc\", [null, [4, 26], [4, 52]]], 0, 0, 0, 0], [\"block\", \"if\", [[\"get\", \"channel.isLogged\", [\"loc\", [null, [11, 10], [11, 26]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [11, 4], [15, 11]]]], [\"block\", \"each\", [[\"get\", \"channel.sortedMessages\", [\"loc\", [null, [18, 14], [18, 36]]], 0, 0, 0, 0]], [], 1, 2, [\"loc\", [null, [18, 6], [28, 15]]]], [\"element\", \"action\", [\"processMessageOrCommand\"], [\"on\", \"submit\"], [\"loc\", [null, [34, 12], [34, 60]]], 0, 0], [\"inline\", \"channel-input-field\", [], [\"value\", [\"subexpr\", \"@mut\", [[\"get\", \"newMessage\", [\"loc\", [null, [35, 36], [35, 46]]], 0, 0, 0, 0]], [], [], 0, 0], \"placeholder\", \"Type a message and hit enter\", \"name\", \"chat-message\", \"id\", \"message-field\", \"autocomplete\", \"off\"], [\"loc\", [null, [35, 8], [39, 50]]], 0, 0], [\"block\", \"link-to\", [\"index\"], [\"class\", \"active\"], 3, null, [\"loc\", [null, [48, 6], [48, 79]]]], [\"block\", \"link-to\", [\"settings\"], [], 4, null, [\"loc\", [null, [48, 125], [48, 184]]]], [\"block\", \"each\", [[\"get\", \"channel.userList\", [\"loc\", [null, [53, 14], [53, 30]]], 0, 0, 0, 0]], [], 5, null, [\"loc\", [null, [53, 6], [55, 15]]]]],\n      locals: [],\n      templates: [child0, child1, child2, child3, child4, child5]\n    };\n  })());\n});","define('hyperchannel/components/channel-input-field/component', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].TextField.extend({\n\n    keyUp: function keyUp(ev) {\n      // console.debug('keyUp', ev);\n\n      if (ev.altKey) {\n        switch (ev.key) {\n          case 'k':\n            this._insertAtCaret('\\u0003');\n            break;\n        }\n      }\n    },\n\n    _insertAtCaret: function _insertAtCaret(myValue) {\n      var el = this.$().get(0);\n\n      if (document.selection) {\n        el.focus();\n        el = document.selection.createRange();\n        el.text = myValue;\n        el.focus();\n      } else if (el.selectionStart || el.selectionStart === '0') {\n        var startPos = el.selectionStart;\n        var endPos = el.selectionEnd;\n        var scrollTop = el.scrollTop;\n        el.value = el.value.substring(0, startPos) + myValue + el.value.substring(endPos, el.value.length);\n        el.focus();\n        el.selectionStart = startPos + myValue.length;\n        el.selectionEnd = startPos + myValue.length;\n        el.scrollTop = scrollTop;\n      } else {\n        el.value += myValue;\n        el.focus();\n      }\n    }\n\n  });\n});","define('hyperchannel/components/channel-nav/component', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n\n    tagName: 'ul'\n\n  });\n});","define(\"hyperchannel/components/channel-nav/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            \"revision\": \"Ember@2.8.3\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 3,\n                \"column\": 8\n              },\n              \"end\": {\n                \"line\": 3,\n                \"column\": 48\n              }\n            },\n            \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [[\"content\", \"space.name\", [\"loc\", [null, [3, 34], [3, 48]]], 0, 0, 0, 0]],\n          locals: [],\n          templates: []\n        };\n      })();\n      var child1 = (function () {\n        var child0 = (function () {\n          var child0 = (function () {\n            return {\n              meta: {\n                \"revision\": \"Ember@2.8.3\",\n                \"loc\": {\n                  \"source\": null,\n                  \"start\": {\n                    \"line\": 8,\n                    \"column\": 12\n                  },\n                  \"end\": {\n                    \"line\": 8,\n                    \"column\": 74\n                  }\n                },\n                \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n              },\n              isEmpty: false,\n              arity: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n                dom.insertBoundary(fragment, 0);\n                dom.insertBoundary(fragment, null);\n                return morphs;\n              },\n              statements: [[\"content\", \"channel.name\", [\"loc\", [null, [8, 58], [8, 74]]], 0, 0, 0, 0]],\n              locals: [],\n              templates: []\n            };\n          })();\n          return {\n            meta: {\n              \"revision\": \"Ember@2.8.3\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 7,\n                  \"column\": 10\n                },\n                \"end\": {\n                  \"line\": 9,\n                  \"column\": 10\n                }\n              },\n              \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n              return morphs;\n            },\n            statements: [[\"block\", \"link-to\", [\"space.userChannel\", [\"get\", \"space\", [\"loc\", [null, [8, 43], [8, 48]]], 0, 0, 0, 0], [\"get\", \"channel\", [\"loc\", [null, [8, 49], [8, 56]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [8, 12], [8, 86]]]]],\n            locals: [],\n            templates: [child0]\n          };\n        })();\n        var child1 = (function () {\n          var child0 = (function () {\n            return {\n              meta: {\n                \"revision\": \"Ember@2.8.3\",\n                \"loc\": {\n                  \"source\": null,\n                  \"start\": {\n                    \"line\": 10,\n                    \"column\": 12\n                  },\n                  \"end\": {\n                    \"line\": 10,\n                    \"column\": 70\n                  }\n                },\n                \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n              },\n              isEmpty: false,\n              arity: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              buildFragment: function buildFragment(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n                var morphs = new Array(1);\n                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n                dom.insertBoundary(fragment, 0);\n                dom.insertBoundary(fragment, null);\n                return morphs;\n              },\n              statements: [[\"content\", \"channel.name\", [\"loc\", [null, [10, 54], [10, 70]]], 0, 0, 0, 0]],\n              locals: [],\n              templates: []\n            };\n          })();\n          return {\n            meta: {\n              \"revision\": \"Ember@2.8.3\",\n              \"loc\": {\n                \"source\": null,\n                \"start\": {\n                  \"line\": 9,\n                  \"column\": 10\n                },\n                \"end\": {\n                  \"line\": 11,\n                  \"column\": 10\n                }\n              },\n              \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n              return morphs;\n            },\n            statements: [[\"block\", \"link-to\", [\"space.channel\", [\"get\", \"space\", [\"loc\", [null, [10, 39], [10, 44]]], 0, 0, 0, 0], [\"get\", \"channel\", [\"loc\", [null, [10, 45], [10, 52]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [10, 12], [10, 82]]]]],\n            locals: [],\n            templates: [child0]\n          };\n        })();\n        return {\n          meta: {\n            \"revision\": \"Ember@2.8.3\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 5,\n                \"column\": 6\n              },\n              \"end\": {\n                \"line\": 13,\n                \"column\": 6\n              }\n            },\n            \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var element0 = dom.childAt(fragment, [1]);\n            var morphs = new Array(2);\n            morphs[0] = dom.createAttrMorph(element0, 'class');\n            morphs[1] = dom.createMorphAt(element0, 1, 1);\n            return morphs;\n          },\n          statements: [[\"attribute\", \"class\", [\"concat\", [[\"subexpr\", \"if\", [[\"get\", \"channel.connected\", [\"loc\", [null, [6, 24], [6, 41]]], 0, 0, 0, 0], \"connected\", \"disconnected\"], [], [\"loc\", [null, [6, 19], [6, 70]]], 0, 0], \" \", [\"get\", \"channel.unreadMessagesClass\", [\"loc\", [null, [6, 73], [6, 100]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], [\"block\", \"if\", [[\"get\", \"channel.isUserChannel\", [\"loc\", [null, [7, 16], [7, 37]]], 0, 0, 0, 0]], [], 0, 1, [\"loc\", [null, [7, 10], [11, 17]]]]],\n          locals: [\"channel\"],\n          templates: [child0, child1]\n        };\n      })();\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 19,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"h2\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"ul\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"li\");\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"a\");\n          dom.setAttribute(el4, \"class\", \"join-channel\");\n          dom.setAttribute(el4, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n          var el5 = dom.createTextNode(\"+\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element1 = dom.childAt(fragment, [1]);\n          var element2 = dom.childAt(element1, [3]);\n          var element3 = dom.childAt(element2, [3, 1]);\n          var morphs = new Array(3);\n          morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);\n          morphs[1] = dom.createMorphAt(element2, 1, 1);\n          morphs[2] = dom.createElementMorph(element3);\n          return morphs;\n        },\n        statements: [[\"block\", \"link-to\", [\"space\", [\"get\", \"space\", [\"loc\", [null, [3, 27], [3, 32]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [3, 8], [3, 60]]]], [\"block\", \"each\", [[\"get\", \"space.sortedChannels\", [\"loc\", [null, [5, 14], [5, 34]]], 0, 0, 0, 0]], [], 1, null, [\"loc\", [null, [5, 6], [13, 15]]]], [\"element\", \"action\", [[\"subexpr\", \"action\", [[\"get\", \"joinChannel\", [\"loc\", [null, [15, 28], [15, 39]]], 0, 0, 0, 0], [\"get\", \"space\", [\"loc\", [null, [15, 40], [15, 45]]], 0, 0, 0, 0]], [], [\"loc\", [null, [15, 20], [15, 46]]], 0, 0]], [], [\"loc\", [null, [15, 11], [15, 48]]], 0, 0]],\n        locals: [\"space\"],\n        templates: [child0, child1]\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 20,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [[\"block\", \"each\", [[\"get\", \"spaces\", [\"loc\", [null, [1, 8], [1, 14]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [1, 0], [19, 9]]]]],\n      locals: [],\n      templates: [child0]\n    };\n  })());\n});","define('hyperchannel/components/date-headline/component', ['exports', 'ember', 'moment'], function (exports, _ember, _moment) {\n  exports['default'] = _ember['default'].Component.extend({\n\n    classNames: ['date-headline'],\n\n    updateInterval: 120000, // 2 minutes\n\n    headline: _ember['default'].computed('message.date', function () {\n      var _this = this;\n\n      var date = (0, _moment['default'])(this.get('message.date'));\n\n      var scheduleUpdate = function scheduleUpdate() {\n        _ember['default'].run.later(function () {\n          _this.notifyPropertyChange('message.date');\n        }, _this.get('updateInterval'));\n      };\n\n      if (date.isSame((0, _moment['default'])(), 'day')) {\n        scheduleUpdate();\n        return 'Today';\n      }\n\n      if (date.isSame((0, _moment['default'])().subtract(1, 'day'), 'day')) {\n        scheduleUpdate();\n        return 'Yesterday';\n      }\n\n      return this.get('message.date').toLocaleDateString();\n    })\n\n  });\n});","define(\"hyperchannel/components/date-headline/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/components/date-headline/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);\n        return morphs;\n      },\n      statements: [[\"content\", \"headline\", [\"loc\", [null, [1, 4], [1, 16]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('hyperchannel/components/message-chat-me/component', ['exports', 'hyperchannel/components/message-chat/component'], function (exports, _hyperchannelComponentsMessageChatComponent) {\n  exports['default'] = _hyperchannelComponentsMessageChatComponent['default'].extend({\n    classNames: ['chat-message', 'chat-me-message']\n  });\n});","define(\"hyperchannel/components/message-chat-me/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/components/message-chat-me/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1, \"class\", \"username\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1, \"class\", \"message\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createAttrMorph(element0, 'data-username');\n        morphs[1] = dom.createMorphAt(element0, 0, 0);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);\n        return morphs;\n      },\n      statements: [[\"attribute\", \"data-username\", [\"get\", \"message.nickname\", [\"loc\", [null, [1, 39], [1, 55]]], 0, 0, 0, 0], 0, 0, 0, 0], [\"content\", \"message.nickname\", [\"loc\", [null, [1, 58], [1, 78]]], 0, 0, 0, 0], [\"content\", \"formattedContent\", [\"loc\", [null, [2, 22], [2, 42]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('hyperchannel/components/message-chat/component', ['exports', 'ember', 'moment'], function (exports, _ember, _moment) {\n  var computed = _ember['default'].computed;\n  var htmlSafe = _ember['default'].String.htmlSafe;\n  exports['default'] = _ember['default'].Component.extend({\n    tagName: 'div',\n    classNames: ['chat-message'],\n\n    message: null,\n\n    datetime: computed('message.date', function () {\n      return (0, _moment['default'])(this.get('message.date')).format('YYYY-MM-DD[T]HH:mm');\n    }),\n\n    dateTitle: computed('message.date', function () {\n      return (0, _moment['default'])(this.get('message.date')).format('YYYY-MM-DD [at] HH:mm');\n    }),\n\n    formattedContent: computed('message.content', function () {\n      var content = this.get('message.content');\n      var out = undefined;\n\n      // Images\n      if (content.match(/^(http)s?:\\/\\/.*(gif|png|jpg|jpeg)$/i)) {\n        out = '<br><a href=\"' + content + '\" target=\"_blank\" rel=\"nofollow noopener\">' + ('<img src=\"' + content + '\" class=\"from-image-url\" alt=\"' + content + '\">') + '</a>';\n      }\n      // Other links\n      else {\n          out = linkifyStr(content, {\n            linkAttributes: { rel: 'nofollow noopener' },\n            validate: {\n              url: function url(value) {\n                return (/^(http)s?:\\/\\//.test(value)\n                );\n              }\n            }\n          });\n        }\n\n      // Colors\n      out = out.replace(/\\u0003(\\d+)/g, '<span class=\"color-$1\">').replace(/\\\"color-(\\d)\\\"/g, '\"color-0$1\"').replace(/\\u000f/, '</span>');\n\n      return htmlSafe(out);\n    })\n  });\n});","define(\"hyperchannel/components/message-chat/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 12,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/components/message-chat/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1, \"class\", \"chat-message__username\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\":\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"time\");\n        dom.setAttribute(el1, \"class\", \"chat-message__date\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1, \"class\", \"chat-message__message\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(fragment, [2]);\n        var morphs = new Array(6);\n        morphs[0] = dom.createAttrMorph(element0, 'data-username');\n        morphs[1] = dom.createMorphAt(element0, 1, 1);\n        morphs[2] = dom.createAttrMorph(element1, 'datetime');\n        morphs[3] = dom.createAttrMorph(element1, 'title');\n        morphs[4] = dom.createMorphAt(element1, 1, 1);\n        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);\n        return morphs;\n      },\n      statements: [[\"attribute\", \"data-username\", [\"get\", \"message.nickname\", [\"loc\", [null, [1, 53], [1, 69]]], 0, 0, 0, 0], 0, 0, 0, 0], [\"content\", \"message.nickname\", [\"loc\", [null, [2, 2], [2, 22]]], 0, 0, 0, 0], [\"attribute\", \"datetime\", [\"get\", \"datetime\", [\"loc\", [null, [5, 44], [5, 52]]], 0, 0, 0, 0], 0, 0, 0, 0], [\"attribute\", \"title\", [\"get\", \"dateTitle\", [\"loc\", [null, [5, 63], [5, 72]]], 0, 0, 0, 0], 0, 0, 0, 0], [\"inline\", \"moment-format\", [[\"get\", \"message.date\", [\"loc\", [null, [6, 18], [6, 30]]], 0, 0, 0, 0], \"HH:mm\"], [], [\"loc\", [null, [6, 2], [6, 40]]], 0, 0], [\"content\", \"formattedContent\", [\"loc\", [null, [10, 2], [10, 22]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('hyperchannel/components/notification-topic-change/component', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Component.extend({\n\n    tagName: 'div',\n    classNames: ['topic-change-notification']\n\n  });\n});","define(\"hyperchannel/components/notification-topic-change/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/components/notification-topic-change/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Topic was changed to \\\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\\" by \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1, \"class\", \"username\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [3]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n        morphs[1] = dom.createAttrMorph(element0, 'data-username');\n        morphs[2] = dom.createMorphAt(element0, 0, 0);\n        return morphs;\n      },\n      statements: [[\"content\", \"message.content\", [\"loc\", [null, [1, 22], [1, 41]]], 0, 0, 0, 0], [\"attribute\", \"data-username\", [\"get\", \"message.nickname\", [\"loc\", [null, [1, 85], [1, 101]]], 0, 0, 0, 0], 0, 0, 0, 0], [\"content\", \"message.nickname\", [\"loc\", [null, [1, 104], [1, 124]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('hyperchannel/controllers/application', ['exports', 'ember'], function (exports, _ember) {\n  var Controller = _ember['default'].Controller;\n  var alias = _ember['default'].computed.alias;\n  var service = _ember['default'].inject.service;\n  exports['default'] = Controller.extend({\n\n    coms: service(),\n    spaces: alias('coms.spaces'),\n\n    showGlobalMenu: false,\n    showChannelMenu: false\n\n  });\n});","define('hyperchannel/controllers/index', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n\n    application: _ember['default'].inject.controller()\n\n  });\n});","define('hyperchannel/controllers/settings', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({\n\n    application: _ember['default'].inject.controller(),\n\n    newSpace: null\n\n  });\n});","define('hyperchannel/controllers/space', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({});\n});","define('hyperchannel/controllers/space/base_channel', ['exports', 'ember', 'hyperchannel/models/message'], function (exports, _ember, _hyperchannelModelsMessage) {\n  exports['default'] = _ember['default'].Controller.extend({\n\n    newMessage: null,\n    space: _ember['default'].inject.controller(),\n    coms: _ember['default'].inject.service(),\n    storage: _ember['default'].inject.service('remotestorage'),\n\n    actions: {\n      sendMessage: function sendMessage(newMessage) {\n        var message = _hyperchannelModelsMessage['default'].create({\n          type: 'message-chat',\n          date: new Date(),\n          nickname: this.get('space.model.server.nickname'),\n          content: newMessage\n        });\n\n        this.get('coms').transferMessage(this.get('space.model'), this.get('model.sockethubChannelId'), message.get('content'));\n\n        this.get('model.messages').pushObject(message);\n        this.set('newMessage', null);\n      },\n\n      executeCommand: function executeCommand(newMessage) {\n        var availableCommands = [\"help\", \"join\", \"leave\", \"me\", \"msg\", \"part\", \"topic\"];\n        var commandText = newMessage.substr(1);\n        var commandSplitted = commandText.split(\" \");\n        var command = commandSplitted[0];\n\n        if (availableCommands.includes(command.toLowerCase())) {\n          this.send(command + 'Command', commandSplitted.slice(1));\n        } else {\n          _ember['default'].Logger.warn('[channel]', 'Unknown command', commandText);\n        }\n\n        this.set('newMessage', null);\n      },\n\n      joinCommand: function joinCommand(args) {\n        var space = this.get('space.model');\n        var channel = this.get('coms').createChannel(space, args[0]);\n        this.get('storage').saveSpace(space);\n        this.transitionToRoute('space.channel', space, channel);\n      },\n\n      partCommand: function partCommand() {\n        var space = this.get('space.model');\n        var channelName = this.get('model.name');\n        this.get('coms').removeChannel(space, channelName);\n        var lastChannel = space.get('channels.lastObject');\n        this.transitionToRoute('space.channel', space, lastChannel);\n      },\n\n      leaveCommand: function leaveCommand() {\n        this.send('partCommand');\n      },\n\n      helpCommand: function helpCommand() {},\n\n      meCommand: function meCommand(args) {\n        var newMessage = args.join(' ');\n\n        var message = _hyperchannelModelsMessage['default'].create({\n          type: 'message-chat-me',\n          date: new Date(),\n          nickname: this.get('space.model.server.nickname'),\n          content: newMessage\n        });\n\n        this.get('coms').transferMeMessage(this.get('space.model'), this.get('model.sockethubChannelId'), message.get('content'));\n\n        this.get('model.messages').pushObject(message);\n      },\n\n      msgCommand: function msgCommand(args) {\n        var username = args.shift();\n        this.get('coms').createUserChannel(this.get('space.model'), username);\n        // TODO fix this, sockethub sends a failure event with error\n        // \"TypeError: Cannot read property 'indexOf' of undefined\"\n        // this.get('coms').transferMessage(this.get('space.model'), username, args.join(' '));\n      },\n\n      topicCommand: function topicCommand(args) {\n        var channel = this.get('model');\n        var topic = args.join(' ');\n\n        this.get('coms').changeTopic(this.get('space.model'), channel, topic);\n      }\n    }\n\n  });\n});","define('hyperchannel/controllers/space/channel', ['exports', 'hyperchannel/controllers/space/base_channel'], function (exports, _hyperchannelControllersSpaceBase_channel) {\n  exports['default'] = _hyperchannelControllersSpaceBase_channel['default'].extend({});\n});","define('hyperchannel/controllers/space/user_channel', ['exports', 'hyperchannel/controllers/space/base_channel'], function (exports, _hyperchannelControllersSpaceBase_channel) {\n  exports['default'] = _hyperchannelControllersSpaceBase_channel['default'].extend({});\n});","define('hyperchannel/ember-gestures/recognizers/pan', ['exports', 'ember-gestures/recognizers/pan'], function (exports, _emberGesturesRecognizersPan) {\n  exports['default'] = _emberGesturesRecognizersPan['default'];\n});","define('hyperchannel/ember-gestures/recognizers/pinch', ['exports', 'ember-gestures/recognizers/pinch'], function (exports, _emberGesturesRecognizersPinch) {\n  exports['default'] = _emberGesturesRecognizersPinch['default'];\n});","define('hyperchannel/ember-gestures/recognizers/press', ['exports', 'ember-gestures/recognizers/press'], function (exports, _emberGesturesRecognizersPress) {\n  exports['default'] = _emberGesturesRecognizersPress['default'];\n});","define('hyperchannel/ember-gestures/recognizers/rotate', ['exports', 'ember-gestures/recognizers/rotate'], function (exports, _emberGesturesRecognizersRotate) {\n  exports['default'] = _emberGesturesRecognizersRotate['default'];\n});","define('hyperchannel/ember-gestures/recognizers/swipe', ['exports', 'ember-gestures/recognizers/swipe'], function (exports, _emberGesturesRecognizersSwipe) {\n  exports['default'] = _emberGesturesRecognizersSwipe['default'];\n});","define('hyperchannel/ember-gestures/recognizers/swipeleft', ['exports'], function (exports) {\n  /* global Hammer */\n  exports['default'] = {\n    include: [],\n    exclude: [],\n    options: { threshold: 25, direction: Hammer.DIRECTION_LEFT },\n    eventName: 'swipeleft',\n    recognizer: 'swipe'\n  };\n});","define('hyperchannel/ember-gestures/recognizers/swiperight', ['exports'], function (exports) {\n  /* global Hammer */\n  exports['default'] = {\n    include: [],\n    exclude: [],\n    options: { threshold: 25, direction: Hammer.DIRECTION_RIGHT },\n    eventName: 'swiperight',\n    recognizer: 'swipe'\n  };\n});","define('hyperchannel/ember-gestures/recognizers/tap', ['exports', 'ember-gestures/recognizers/tap'], function (exports, _emberGesturesRecognizersTap) {\n  // tap is not configured for double-tap, export single-tap\n  //   if using double-tap\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberGesturesRecognizersTap['default'];\n    }\n  });\n});","define('hyperchannel/ember-gestures/recognizers/vertical-pan', ['exports', 'ember-gestures/recognizers/vertical-pan'], function (exports, _emberGesturesRecognizersVerticalPan) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberGesturesRecognizersVerticalPan['default'];\n    }\n  });\n});","define('hyperchannel/ember-gestures/recognizers/vertical-swipe', ['exports', 'ember-gestures/recognizers/vertical-swipe'], function (exports, _emberGesturesRecognizersVerticalSwipe) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberGesturesRecognizersVerticalSwipe['default'];\n    }\n  });\n});","define('hyperchannel/event_dispatcher', ['exports', 'ember', 'ember-gestures/event_dispatcher', 'hyperchannel/config/environment'], function (exports, _ember, _emberGesturesEvent_dispatcher, _hyperchannelConfigEnvironment) {\n\n  var merge = _ember['default'].assign || _ember['default'].merge;\n\n  var gestures = merge({}, {\n    emberUseCapture: false,\n    removeTracking: false,\n    useFastPaths: false\n  });\n  gestures = merge(gestures, _hyperchannelConfigEnvironment['default'].gestures);\n\n  exports['default'] = _emberGesturesEvent_dispatcher['default'].extend({\n    useCapture: gestures.emberUseCapture,\n    removeTracking: gestures.removeTracking,\n    useFastPaths: gestures.useFastPaths\n  });\n});","define('hyperchannel/helpers/is-after', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-after'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersIsAfter) {\n  exports['default'] = _emberMomentHelpersIsAfter['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-before', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-before'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersIsBefore) {\n  exports['default'] = _emberMomentHelpersIsBefore['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-between', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-between'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersIsBetween) {\n  exports['default'] = _emberMomentHelpersIsBetween['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same-or-after', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same-or-after'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersIsSameOrAfter) {\n  exports['default'] = _emberMomentHelpersIsSameOrAfter['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same-or-before', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same-or-before'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersIsSameOrBefore) {\n  exports['default'] = _emberMomentHelpersIsSameOrBefore['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersIsSame) {\n  exports['default'] = _emberMomentHelpersIsSame['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-add', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-add'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentAdd) {\n  exports['default'] = _emberMomentHelpersMomentAdd['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-calendar', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-calendar'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentCalendar) {\n  exports['default'] = _emberMomentHelpersMomentCalendar['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-duration', ['exports', 'ember-moment/helpers/moment-duration'], function (exports, _emberMomentHelpersMomentDuration) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberMomentHelpersMomentDuration['default'];\n    }\n  });\n});","define('hyperchannel/helpers/moment-format', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-format'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentFormat) {\n  exports['default'] = _emberMomentHelpersMomentFormat['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-from-now', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-from-now'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentFromNow) {\n  exports['default'] = _emberMomentHelpersMomentFromNow['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-from', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-from'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentFrom) {\n  exports['default'] = _emberMomentHelpersMomentFrom['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-subtract', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-subtract'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentSubtract) {\n  exports['default'] = _emberMomentHelpersMomentSubtract['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to-date', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to-date'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentToDate) {\n  exports['default'] = _emberMomentHelpersMomentToDate['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to-now', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to-now'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentToNow) {\n  exports['default'] = _emberMomentHelpersMomentToNow['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentHelpersMomentTo) {\n  exports['default'] = _emberMomentHelpersMomentTo['default'].extend({\n    globalAllowEmpty: !!_ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _emberMomentHelpersUnix) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberMomentHelpersUnix['default'];\n    }\n  });\n  Object.defineProperty(exports, 'unix', {\n    enumerable: true,\n    get: function get() {\n      return _emberMomentHelpersUnix.unix;\n    }\n  });\n});","define('hyperchannel/helpers/moment', ['exports', 'ember-moment/helpers/moment'], function (exports, _emberMomentHelpersMoment) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberMomentHelpersMoment['default'];\n    }\n  });\n});","define('hyperchannel/helpers/now', ['exports', 'ember-moment/helpers/now'], function (exports, _emberMomentHelpersNow) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberMomentHelpersNow['default'];\n    }\n  });\n});","define('hyperchannel/helpers/route-action', ['exports', 'ember-route-action-helper/helpers/route-action'], function (exports, _emberRouteActionHelperHelpersRouteAction) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberRouteActionHelperHelpersRouteAction['default'];\n    }\n  });\n});","define('hyperchannel/helpers/unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _emberMomentHelpersUnix) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberMomentHelpersUnix['default'];\n    }\n  });\n  Object.defineProperty(exports, 'unix', {\n    enumerable: true,\n    get: function get() {\n      return _emberMomentHelpersUnix.unix;\n    }\n  });\n});","define('hyperchannel/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'hyperchannel/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _hyperchannelConfigEnvironment) {\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_hyperchannelConfigEnvironment['default'].APP.name, _hyperchannelConfigEnvironment['default'].APP.version)\n  };\n});","define('hyperchannel/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('hyperchannel/initializers/ember-hammertime', ['exports', 'ember-hammertime/components/component'], function (exports, _emberHammertimeComponentsComponent) {\n  // jshint ignore:line\n\n  exports['default'] = {\n    name: 'ember-hammertime',\n    initialize: function initialize() {}\n  };\n});\n// activate touch action css","define('hyperchannel/initializers/export-application-global', ['exports', 'ember', 'hyperchannel/config/environment'], function (exports, _ember, _hyperchannelConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_hyperchannelConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _hyperchannelConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_hyperchannelConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('hyperchannel/initializers/hammer', ['exports'], function (exports) {\n  /* global Hammer */\n  exports['default'] = {\n    name: 'hammer',\n\n    initialize: function initialize() {\n      // Enable text selection.\n      // It's disabled by default to improve UX on desktop, so text wouldn't\n      // be selected when panning.\n      delete Hammer.defaults.cssProps.userSelect;\n    }\n  };\n});","define('hyperchannel/initializers/sockethub', ['exports', 'hyperchannel/config/environment'], function (exports, _hyperchannelConfigEnvironment) {\n\n  // TODO move settings into config file\n  var sockethub = new SockethubClient(io(_hyperchannelConfigEnvironment['default'].sockethubURL, { path: '/sockethub' }));\n\n  exports['default'] = {\n    name: 'sockethub',\n\n    initialize: function initialize(app) {\n      app.register('sockethub:client', sockethub, { instantiate: false, singleton: true });\n\n      app.inject('controller', 'sockethub', 'sockethub:client');\n      app.inject('route', 'sockethub', 'sockethub:client');\n      app.inject('component', 'sockethub', 'sockethub:client');\n      app.inject('service', 'sockethub', 'sockethub:client');\n    }\n  };\n});\n/* global SockethubClient */\n/* global io */","define('hyperchannel/instance-initializers/ember-gestures', ['exports', 'ember-getowner-polyfill'], function (exports, _emberGetownerPolyfill) {\n  exports['default'] = {\n    name: 'ember-gestures',\n\n    initialize: function initialize(instance) {\n      if (typeof instance.lookup === \"function\") {\n        instance.lookup('service:-gestures');\n      } else {\n        // This can be removed when we no-longer support ember 1.12 and 1.13\n        (0, _emberGetownerPolyfill['default'])(instance).lookup('service:-gestures');\n      }\n    }\n\n  };\n});","define('hyperchannel/instance-initializers/remotestorage', ['exports', 'ember'], function (exports, _ember) {\n  exports.initialize = initialize;\n\n  function initialize(appInstance) {\n    var storage = appInstance.lookup('service:remotestorage');\n    var remoteStorage = storage.get('rs');\n\n    // Add to window global for debugging/development\n    window.remoteStorage = remoteStorage;\n\n    var rsEvents = ['ready', 'not-connected', 'connected', 'disconnected', 'error', 'features-loaded', 'connecting', 'authing', 'wire-busy', 'wire-done', 'network-offline', 'network-online'];\n\n    rsEvents.forEach(function (evt) {\n      remoteStorage.on(evt, function () {\n        return _ember['default'].Logger.debug('[remotestorage] RS event: ' + evt);\n      });\n    });\n  }\n\n  exports['default'] = {\n    name: 'remotestorage',\n    initialize: initialize\n  };\n});","define('hyperchannel/models/base_channel', ['exports', 'ember', 'hyperchannel/models/message', 'moment'], function (exports, _ember, _hyperchannelModelsMessage, _moment) {\n  var computed = _ember['default'].computed;\n  var isPresent = _ember['default'].isPresent;\n  exports['default'] = _ember['default'].Object.extend({\n\n    space: null,\n    name: '',\n    userList: null,\n    messages: null,\n    connected: false,\n    sockethubChannelId: null,\n    topic: null,\n    unreadMessages: false,\n    unreadMentions: false,\n    visible: false, // Current/active channel\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('messages', []);\n      this.set('userList', []);\n    },\n\n    isLogged: computed('space.loggedChannels.[]', 'name', function () {\n      var _this = this;\n\n      var loggedChannel = this.get('space.loggedChannels').find(function (channelName) {\n        return channelName === _this.get('name');\n      });\n\n      return isPresent(loggedChannel);\n    }),\n\n    slug: computed('name', function () {\n      // This could be based on server type in the future. E.g. IRC would be\n      // server URL, while Campfire would be another id.\n      return this.get('name').replace(/#/g, '');\n    }),\n\n    unreadMessagesClass: computed('visible', 'unreadMessages', 'unreadMentions', function () {\n      if (this.get('visible') || !this.get('unreadMessages')) {\n        return null;\n      }\n      return this.get('unreadMentions') ? 'unread-mentions' : 'unread-messages';\n    }),\n\n    sortedMessages: computed('messages.@each.date', function () {\n      return this.get('messages').sortBy('date');\n    }),\n\n    addDateHeadline: function addDateHeadline(newMessage) {\n      var headlineDate = (0, _moment['default'])(newMessage.get('date')).startOf('day').toDate();\n\n      var existingDateHeadline = this.get('messages').find(function (message) {\n        return message.get('type') === 'date-headline' && message.get('date').toString() === headlineDate.toString();\n      });\n\n      if (existingDateHeadline) {\n        return;\n      }\n\n      var dateMessage = _hyperchannelModelsMessage['default'].create({ type: 'date-headline', date: headlineDate });\n      this.get('messages').pushObject(dateMessage);\n    },\n\n    addMessage: function addMessage(message) {\n      this.addDateHeadline(message);\n\n      this.get('messages').pushObject(message);\n\n      if (!this.get('visible')) {\n        this.set('unreadMessages', true);\n        if (message.get('content').match(this.get('space.userNickname'))) {\n          this.set('unreadMentions', true);\n        }\n      }\n    },\n\n    addUser: function addUser(username) {\n      this.get('userList').pushObject(username);\n    },\n\n    removeUser: function removeUser(username) {\n      this.get('userList').removeObject(username);\n    }\n\n  });\n});","define('hyperchannel/models/channel', ['exports', 'ember', 'hyperchannel/models/base_channel'], function (exports, _ember, _hyperchannelModelsBase_channel) {\n  exports['default'] = _hyperchannelModelsBase_channel['default'].extend({\n\n    searchedPreviousLogsUntilDate: null,\n\n    formattedTopic: _ember['default'].computed('topic', function () {\n      if (this.get('topic') !== null) {\n        var topic = linkifyStr(this.get('topic'), {\n          defaultProtocol: 'https',\n          linkAttributes: { rel: 'nofollow' }\n        });\n        return new _ember['default'].String.htmlSafe(topic);\n      } else {\n        return '';\n      }\n    })\n\n  });\n});","define('hyperchannel/models/message', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Object.extend({\n\n    type: null,\n    date: null,\n    nickname: null,\n    content: null\n\n  });\n});","define('hyperchannel/models/space', ['exports', 'ember'], function (exports, _ember) {\n  var computed = _ember['default'].computed;\n  exports['default'] = _ember['default'].Object.extend({\n\n    name: null,\n    protocol: 'IRC',\n    server: {\n      hostname: null,\n      port: 7000,\n      secure: true,\n      username: null,\n      password: null,\n      nickname: null,\n      nickServ: {\n        password: null\n      }\n    },\n    channels: null, // Channel instances\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.set('channels', []);\n    },\n\n    channelNames: computed('channels.@each.name', function () {\n      return this.get('channels').mapBy('name');\n    }),\n\n    loggedChannels: computed('name', 'protocol', function () {\n      if (this.get('name') === 'Freenode' && this.get('protocol') === 'IRC') {\n        return ['#5apps', '#kosmos', '#kosmos-dev', '#remotestorage', '#hackerbeach', '#unhosted', '#sockethub', '#opensourcedesign', '#openknot', '#emberjs', '#indieweb', '#mastodon'];\n      } else {\n        return [];\n      }\n    }),\n\n    id: (function () {\n      // This could be based on server type in the future. E.g. IRC would be\n      // server URL, while Campfire would be another id.\n      return this.get('name').toLowerCase();\n    }).property('name'),\n\n    userNickname: computed.alias('server.nickname'),\n\n    sockethubPersonId: (function () {\n      return 'irc://' + this.get('server.nickname') + '@' + this.get('server.hostname');\n    }).property('server.hostname', 'server.nickname'),\n\n    channelSorting: ['name'],\n    sortedChannels: computed.sort('channels', 'channelSorting'),\n\n    serialize: function serialize() {\n      return {\n        id: this.get('id'),\n        name: this.get('name'),\n        protocol: this.get('protocol'),\n        server: {\n          hostname: this.get('server.hostname'),\n          port: parseInt(this.get('server.port')),\n          secure: this.get('server.secure'),\n          nickname: this.get('server.nickname')\n        },\n        channels: this.get('channelNames') || []\n      };\n    }\n\n  });\n});","define('hyperchannel/models/user_channel', ['exports', 'hyperchannel/models/base_channel'], function (exports, _hyperchannelModelsBase_channel) {\n  exports['default'] = _hyperchannelModelsBase_channel['default'].extend({\n\n    isUserChannel: true\n\n  });\n});","define('hyperchannel/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('hyperchannel/router', ['exports', 'ember', 'hyperchannel/config/environment'], function (exports, _ember, _hyperchannelConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _hyperchannelConfigEnvironment['default'].locationType,\n    rootURL: _hyperchannelConfigEnvironment['default'].rootURL\n  });\n\n  Router.map(function () {\n    this.route('space', { path: '/:id' }, function () {\n      this.route('channel', { path: '/channel/:slug' });\n      this.route('userChannel', { path: '/user/:slug' });\n    });\n\n    this.route('settings');\n  });\n\n  exports['default'] = Router;\n});","define('hyperchannel/routes/application', ['exports', 'ember'], function (exports, _ember) {\n  var Route = _ember['default'].Route;\n  var service = _ember['default'].inject.service;\n  var isEmpty = _ember['default'].isEmpty;\n  exports['default'] = Route.extend({\n    logger: service(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    beforeModel: function beforeModel() {\n      this._super.apply(this, arguments);\n      // See a list of allowed types in logger.js\n      // Add or remove all your log types here:\n      // this.get('logger').add('message');\n      // this.get('logger').remove('join');\n      // this.get('logger').disable();\n      // this.get('logger').enable();\n    },\n\n    model: function model() {\n      this.get('coms').setupListeners();\n      return this.get('coms').instantiateSpacesAndChannels();\n    },\n\n    actions: {\n\n      menu: function menu(which, what) {\n        var menuProp = 'show' + which.capitalize() + 'Menu';\n\n        switch (what) {\n          case 'show':\n            this.controller.set(menuProp, true);\n            break;\n          case 'hide':\n            this.controller.set(menuProp, false);\n            break;\n          case 'toggle':\n            this.controller.toggleProperty(menuProp);\n            break;\n        }\n      },\n\n      openNewChannel: function openNewChannel(space) {\n        var channelName = window.prompt('Join channel');\n\n        if (isEmpty(channelName)) {\n          return;\n        }\n\n        if (!channelName.match(/^#/)) {\n          channelName = '#' + channelName;\n        }\n        var channel = this.get('coms').createChannel(space, channelName);\n        this.get('storage').saveSpace(space);\n        this.transitionTo('space.channel', space, channel);\n      }\n\n    }\n\n  });\n});","define('hyperchannel/routes/index', ['exports', 'ember', 'ember-local-storage'], function (exports, _ember, _emberLocalStorage) {\n  exports['default'] = _ember['default'].Route.extend({\n\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n\n    redirect: function redirect() {\n      var currentSpace = this.get('userSettings.currentSpace') || 'freenode';\n      var currentChannel = this.get('userSettings.currentChannel') || '#kosmos';\n\n      if (currentSpace && currentChannel) {\n        this.transitionTo('space.channel', currentSpace, currentChannel);\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/settings', ['exports', 'ember', 'hyperchannel/models/space', 'hyperchannel/config/environment'], function (exports, _ember, _hyperchannelModelsSpace, _hyperchannelConfigEnvironment) {\n  exports['default'] = _ember['default'].Route.extend({\n\n    storage: _ember['default'].inject.service('remotestorage'),\n\n    model: function model() {\n      var rsKosmos = this.get('storage.rs').kosmos;\n\n      var spaces = rsKosmos.spaces.getAll().then(function (res) {\n        var col = [];\n        if (_ember['default'].isEmpty(res)) {\n          return col;\n        }\n        Object.keys(res).forEach(function (id) {\n          col.push(_hyperchannelModelsSpace['default'].create(res[id]));\n        });\n        return col;\n      }, function (e) {\n        console.error(e);\n      });\n\n      return _ember['default'].RSVP.hash({\n        // TODO use space models\n        spaces: spaces,\n        spacePresets: _hyperchannelConfigEnvironment['default'].spacePresets\n      });\n    },\n\n    setupController: function setupController(controller) {\n      this._super.apply(this, arguments);\n      controller.set('newSpace', _hyperchannelModelsSpace['default'].create());\n    },\n\n    actions: {\n\n      addSpace: function addSpace() {\n        var _this = this;\n\n        var newSpace = this.controller.get('newSpace');\n        var params = newSpace.serialize();\n\n        this.get('storage.rs').kosmos.spaces.store(params).then(function () /*d*/{\n          _this.modelFor('settings').spaces.pushObject(newSpace);\n        }, function (e) {\n          _ember['default'].Logger.error('error saving in RS', params, e);\n        });\n      },\n\n      removeSpace: function removeSpace(space) {\n        var _this2 = this;\n\n        // TODO this is buggy in the current rs.js beta branch\n        this.get('storage.rs').kosmos.spaces.remove(space.get('id')).then(function () /*d*/{\n          _this2.modelFor('settings').spaces.removeObject(space);\n        }, function (e) {\n          _ember['default'].Logger.error('error deleting from RS', space, e);\n        });\n      }\n\n    }\n\n  });\n});","define('hyperchannel/routes/space', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({\n\n    coms: _ember['default'].inject.service(),\n\n    model: function model(params) {\n      return this.get('coms').get('spaces').findBy('id', params.id);\n    }\n\n  });\n});","define('hyperchannel/routes/space/base_channel', ['exports', 'ember', 'ember-local-storage'], function (exports, _ember, _emberLocalStorage) {\n  var Route = _ember['default'].Route;\n  var service = _ember['default'].inject.service;\n  var _Ember$run = _ember['default'].run;\n  var later = _Ember$run.later;\n  var scheduleOnce = _Ember$run.scheduleOnce;\n\n  function scrollToBottom() {\n    _ember['default'].$('#channel-content').animate({\n      scrollTop: _ember['default'].$('#channel-content ul').height()\n    }, '500');\n  }\n\n  function focusMessageInput() {\n    if (window.innerWidth > 900) {\n      _ember['default'].$('input#message-field').focus();\n    } else {\n      // Don't auto-focus on small screens\n    }\n  }\n\n  exports['default'] = Route.extend({\n    coms: service(),\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n\n    model: function model(params) {\n      var space = this.modelFor('space');\n      var channel = space.get('channels').findBy('slug', params.slug);\n\n      if (!channel) {\n        channel = this.createChannelOrUserChannel(space, params.slug);\n      }\n\n      return channel;\n    },\n\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n\n      scheduleOnce('afterRender', function () {\n        focusMessageInput();\n        scrollToBottom();\n      });\n    },\n\n    actions: {\n\n      didTransition: function didTransition() {\n        var _this = this;\n\n        var space = this.modelFor('space');\n        var channel = this.controller.get('model');\n\n        this.set('userSettings.currentSpace', space.get('id'));\n        this.set('userSettings.currentChannel', channel.get('slug'));\n\n        // Mark channel as active/visible\n        space.get('channels').setEach('visible', false);\n        channel.set('visible', true);\n\n        // Mark unread messages as read\n        channel.set('unreadMessages', false);\n        channel.set('unreadMentions', false);\n\n        later(this, function () {\n          return _this.send('menu', 'global', 'hide');\n        }, 500);\n      }\n\n    }\n\n  });\n});","define('hyperchannel/routes/space/channel', ['exports', 'hyperchannel/routes/space/base_channel'], function (exports, _hyperchannelRoutesSpaceBase_channel) {\n  exports['default'] = _hyperchannelRoutesSpaceBase_channel['default'].extend({\n\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.get('coms').createChannel(space, \"#\" + channelName);\n    }\n\n  });\n});","define('hyperchannel/routes/space/user_channel', ['exports', 'hyperchannel/routes/space/base_channel'], function (exports, _hyperchannelRoutesSpaceBase_channel) {\n  exports['default'] = _hyperchannelRoutesSpaceBase_channel['default'].extend({\n\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.get('coms').createUserChannel(space, channelName);\n    }\n\n  });\n});","define('hyperchannel/services/-gestures', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-gestures/services/-gestures'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberGesturesServicesGestures) {\n\n  var merge = _ember['default'].assign || _ember['default'].merge;\n\n  var gestures = merge({}, {\n    useCapture: false\n  });\n  gestures = merge(gestures, _hyperchannelConfigEnvironment['default'].gestures);\n\n  exports['default'] = _emberGesturesServicesGestures['default'].extend({\n    useCapture: gestures.useCapture\n  });\n});","define('hyperchannel/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define('hyperchannel/services/coms', ['exports', 'ember', 'hyperchannel/models/space', 'hyperchannel/models/channel', 'hyperchannel/models/user_channel', 'hyperchannel/models/message', 'hyperchannel/config/environment', 'moment', 'ember-local-storage'], function (exports, _ember, _hyperchannelModelsSpace, _hyperchannelModelsChannel, _hyperchannelModelsUser_channel, _hyperchannelModelsMessage, _hyperchannelConfigEnvironment, _moment, _emberLocalStorage) {\n  var Service = _ember['default'].Service;\n  var service = _ember['default'].inject.service;\n  var RSVP = _ember['default'].RSVP;\n  var isEmpty = _ember['default'].isEmpty;\n  var isPresent = _ember['default'].isPresent;\n  var Logger = _ember['default'].Logger;\n  var get = _ember['default'].get;\n\n  /**\n   * This service provides the central command interface for communicating with\n   * chat servers/networks\n   * @module hyperchannel/services/coms\n   */\n  exports['default'] = Service.extend({\n\n    // Utils\n    ajax: service(),\n    logger: service(),\n    // Data storage\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    storage: service('remotestorage'),\n    // Message transport\n    irc: service('sockethub-irc'),\n\n    /**\n     * A collection of all space model instances\n     * @type {Space[]}\n     */\n    spaces: null,\n\n    /**\n     * This is called from the application route on app startup. Sets up all\n     * listeners for incoming Sockethub messages.\n     * @public\n     */\n    setupListeners: function setupListeners() {\n      this.sockethub.socket.on('completed', this.handleSockethubCompleted.bind(this));\n      this.sockethub.socket.on('message', this.handleSockethubMessage.bind(this));\n      this.sockethub.socket.on('failure', this.handleSockethubFailure.bind(this));\n    },\n\n    /**\n     * This is called from the application route on app startup. Instantiates,\n     * connects, and joins all either configured/saved or default spaces/channels\n     * @public\n     */\n    instantiateSpacesAndChannels: function instantiateSpacesAndChannels() {\n      var _this = this;\n\n      this.set('spaces', []);\n      var rs = this.get('storage.rs');\n\n      return new RSVP.Promise(function (resolve, reject) {\n        rs.kosmos.spaces.getAll().then(function (spaceData) {\n          if (isEmpty(Object.keys(spaceData))) {\n            Logger.debug('No space data found in RS. Adding default space...');\n            _this.get('storage').addDefaultSpace().then(function (data) {\n              _this.connectServer(data.space);\n              _this.get('spaces').pushObject(data.space);\n              _this.instantiateChannels(data.space, data.channels);\n              resolve();\n            });\n          } else {\n            Object.keys(spaceData).forEach(function (id) {\n              var space = _hyperchannelModelsSpace['default'].create({\n                name: spaceData[id].name,\n                protocol: spaceData[id].protocol,\n                server: spaceData[id].server\n              });\n              _this.connectServer(space);\n              _this.get('spaces').pushObject(space);\n              _this.instantiateChannels(space, spaceData[id].channels);\n            });\n            resolve();\n          }\n        }, function (e) {\n          _this.log('error', 'couldn\\'d load spaces from RS', e);\n          reject();\n        });\n      });\n    },\n\n    /**\n     * Invokes the connect function on the appropriate transport service\n     * @public\n     */\n    connectServer: function connectServer(space) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').connect(space);\n          break;\n        // case 'XMPP':\n        // TODO implement XMPP service\n        // this.get('xmpp').connect(space);\n        // break;\n      }\n    },\n\n    /**\n     * Invokes the channel-join function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {string} type - Type of channel. Can be \"room\" or \"person\"\n     * @public\n     */\n    joinChannel: function joinChannel(space, channel, type) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').join(space, channel, type);\n          break;\n      }\n    },\n\n    /**\n     * Invokes the send-message function on the appropriate transport service\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').transferMessage(space, target, content);\n          break;\n      }\n    },\n\n    /**\n     * Invokes the send-action-message function on the appropriate transport service\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').transferMeMessage(space, target, content);\n          break;\n      }\n    },\n\n    leaveChannel: function leaveChannel(space, channel) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').leave(space, channel);\n          break;\n      }\n    },\n\n    changeTopic: function changeTopic(space, channel, topic) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').changeTopic(space, channel, topic);\n          break;\n      }\n    },\n\n    updateChannelUserList: function updateChannelUserList(message) {\n      var channel = this.getChannelByMessage(message);\n      if (channel) {\n        channel.set('userList', message.object.members.sort());\n      }\n    },\n\n    addUserToChannelUserList: function addUserToChannelUserList(message) {\n      var channel = this.getChannelByMessage(message);\n      if (channel) {\n        channel.addUser(message.actor.displaName);\n      }\n    },\n\n    removeUserFromChannelUserList: function removeUserFromChannelUserList(message) {\n      var channel = this.getChannelByMessage(message);\n      if (channel) {\n        channel.removeUser(message.actor.displayName);\n      }\n    },\n\n    getChannelByMessage: function getChannelByMessage(message) {\n      var addressWithHostname, hostname;\n      if (typeof message.actor === 'object') {\n        addressWithHostname = message.actor['@id'];\n      } else if (typeof message.actor === 'string') {\n        addressWithHostname = message.actor;\n      }\n\n      hostname = addressWithHostname.match(/irc:\\/\\/(?:.+@)?(.+?)(?:\\/|$)/)[1];\n\n      var space = this.get('spaces').findBy('server.hostname', hostname);\n\n      if (!isEmpty(space)) {\n        var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n        if (!isEmpty(channel)) {\n          return channel;\n        }\n      }\n    },\n\n    updateChannelTopic: function updateChannelTopic(message) {\n      var _this2 = this;\n\n      var hostname = undefined;\n      if (typeof message.target === 'object') {\n        hostname = message.target['@id'].match(/irc:\\/\\/(.+)\\//)[1];\n      } else if (typeof message.actor === 'string') {\n        hostname = message.actor.match(/irc:\\/\\/.+\\@(.+)/)[1];\n      }\n\n      var space = this.get('spaces').findBy('server.hostname', hostname);\n\n      if (!isEmpty(space)) {\n        (function () {\n          var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n          if (isEmpty(channel)) {\n            channel = _this2.createChannel(space, message.target['@id']);\n          }\n\n          var currentTopic = channel.get('topic');\n          var newTopic = message.object.topic;\n\n          channel.set('topic', newTopic);\n\n          if (isPresent(currentTopic) && newTopic !== currentTopic && !channel.get('visible')) {\n            Notification.requestPermission(function () {\n              new Notification(channel.name, {\n                body: 'New Topic: ' + newTopic\n              });\n            });\n          }\n\n          // let notification = Message.create({\n          //   type: 'notification-topic-change',\n          //   date: new Date(message.published),\n          //   nickname: message.actor.displayName,\n          //   content: message.object.topic\n          // });\n\n          // channel.get('messages').pushObject(notification);\n        })();\n      }\n    },\n\n    addMessageToChannel: function addMessageToChannel(message) {\n      var space = this.get('spaces').findBy('server.hostname', message.actor['@id'].match(/irc:\\/\\/.+\\@(.+)/)[1]);\n      var nickname = space.get('userNickname');\n\n      var targetChannelName;\n      if (nickname === message.target.displayName) {\n        targetChannelName = message.actor.displayName;\n      } else {\n        targetChannelName = message.target.displayName;\n      }\n\n      var channel = space.get('channels').findBy('name', targetChannelName);\n      if (!channel) {\n        channel = this.createChannel(space, targetChannelName);\n      }\n\n      var messageType = undefined;\n      if (message.object['@type'] === 'me') {\n        messageType = 'message-chat-me';\n      } else {\n        messageType = 'message-chat';\n      }\n\n      var channelMessage = _hyperchannelModelsMessage['default'].create({\n        type: messageType,\n        date: new Date(message.published),\n        nickname: message.actor.displayName,\n        content: message.object.content\n      });\n\n      // TODO should check for message and update sent status if exists\n      if (message.actor.displayName !== nickname) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n    instantiateChannels: function instantiateChannels(space, channels) {\n      var _this3 = this;\n\n      channels.forEach(function (channelName) {\n        _this3.createChannel(space, channelName);\n      });\n    },\n\n    createChannel: function createChannel(space, channelName) {\n      var channel = _hyperchannelModelsChannel['default'].create({\n        space: space,\n        name: channelName,\n        // TODO use IRC module\n        sockethubChannelId: 'irc://' + space.get('server.hostname') + '/' + channelName\n      });\n\n      this.joinChannel(space, channel, \"room\");\n      space.get('channels').pushObject(channel);\n\n      // TODO Do we need this on startup? Could overwrite updates from remote.\n      this.get('storage').saveSpace(space);\n\n      if (channel.get('isLogged')) {\n        this.loadLastMessages(space, channel, _moment['default'].utc(), 2)['catch'](function () {});\n      }\n\n      return channel;\n    },\n\n    loadLastMessages: function loadLastMessages(space, channel, date) {\n      var _this4 = this;\n\n      var maximumDays = arguments.length <= 3 || arguments[3] === undefined ? 14 : arguments[3];\n\n      var searchUntilDate = undefined;\n      if (channel.get('searchedPreviousLogsUntilDate')) {\n        searchUntilDate = (0, _moment['default'])(channel.get('searchedPreviousLogsUntilDate')).subtract(maximumDays, 'days');\n      } else {\n        searchUntilDate = _moment['default'].utc().subtract(maximumDays, 'days');\n      }\n\n      if (date.isBefore(searchUntilDate, 'day')) {\n        channel.set('searchedPreviousLogsUntilDate', date);\n        return;\n      }\n\n      return this.loadArchiveMessages(space, channel, date)['catch'](function () {\n        // didn't find any archive for this day, restart searching for the previous day\n        return _this4.loadLastMessages(space, channel, date.subtract(1, 'day'));\n      });\n    },\n\n    loadArchiveMessages: function loadArchiveMessages(space, channel, date) {\n      var _this5 = this;\n\n      var logsUrl = _hyperchannelConfigEnvironment['default'].publicLogsUrl + '/' + space.get('name').toLowerCase() + '/channels/' + channel.get('slug') + '/';\n      logsUrl += date.format('YYYY/MM/DD');\n\n      return this.get('ajax').request(logsUrl, {\n        type: 'GET',\n        dataType: 'json'\n      }).then(function (archive) {\n        get(archive, 'today.messages').forEach(function (message) {\n          _this5.log('message', message);\n\n          var channelMessage = _hyperchannelModelsMessage['default'].create({\n            type: 'message-chat',\n            date: new Date(message.timestamp),\n            nickname: message.from,\n            content: message.text\n          });\n\n          channel.addMessage(channelMessage);\n        });\n        var previous = get(archive, 'today.previous');\n        channel.set('searchedPreviousLogsUntilDate', _moment['default'].utc(previous.replace(/\\//g, '-')));\n      })['catch'](function (error) {\n        _this5.log('ajax-error', 'couldn\\'t load archive document', error);\n        throw error;\n      });\n    },\n\n    createUserChannel: function createUserChannel(space, userName) {\n      var channel = _hyperchannelModelsUser_channel['default'].create({\n        space: space,\n        name: userName,\n        // TODO use IRC module\n        sockethubChannelId: 'irc://' + space.get('server.hostname') + '/' + userName\n      });\n\n      this.joinChannel(space, channel, \"person\");\n      space.get('channels').pushObject(channel);\n\n      return channel;\n    },\n\n    removeChannel: function removeChannel(space, channelName) {\n      var channel = space.get('channels').findBy('name', channelName);\n      this.leaveChannel(space, channel);\n\n      space.get('channels').removeObject(channel);\n\n      this.get('storage').saveSpace(space);\n\n      return channel;\n    },\n\n    /*\n     * @private\n     *\n     * Handles completed Sockethub actions:\n     *\n     *     - Successfully joined a channel\n     *     - Channel attendance list response\n     */\n    handleSockethubCompleted: function handleSockethubCompleted(message) {\n      this.log('sh_completed', message);\n\n      switch (message['@type']) {\n        case 'join':\n          if (message['@type'] === 'join') {\n            var space = this.get('spaces').findBy('sockethubPersonId', message.actor);\n            if (!isEmpty(space)) {\n              var channel = space.get('channels').findBy('sockethubChannelId', message.target);\n              if (!isEmpty(channel)) {\n                channel.set('connected', true);\n                this.get('irc').observeChannel(space.get('sockethubPersonId'), channel.get('sockethubChannelId'));\n              }\n            }\n          }\n          break;\n        case 'observe':\n          if (message.object['@type'] === 'attendance') {\n            this.updateChannelUserList(message);\n          }\n          break;\n      }\n    },\n\n    /**\n     * Handles incoming Sockethub messages:\n     * - Attendance list for channel\n     * - Another user joined or left a channel\n     * - Received a channel message (normal or me/action)\n     * - A channel topic was updated\n     * @private\n     */\n    handleSockethubMessage: function handleSockethubMessage(message) {\n      this.log('message', 'SH message', message);\n\n      switch (message['@type']) {\n        case 'observe':\n          if (message.object['@type'] === 'attendance') {\n            this.updateChannelUserList(message);\n          }\n          break;\n        case 'join':\n          this.addUserToChannelUserList(message);\n          break;\n        case 'leave':\n          this.removeUserFromChannelUserList(message);\n          break;\n        case 'send':\n          switch (message.object['@type']) {\n            case 'message':\n            case 'me':\n              this.addMessageToChannel(message);\n              break;\n          }\n          break;\n        case 'update':\n          if (message.object['@type'] === 'topic') {\n            this.updateChannelTopic(message);\n          }\n          break;\n      }\n    },\n\n    /**\n     * Handles incoming Sockethub errors/failures\n     * @private\n     */\n    handleSockethubFailure: function handleSockethubFailure(message) {\n      this.log('sh_failure', message);\n    },\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _get;\n\n      (_get = this.get('logger')).log.apply(_get, arguments);\n    }\n  });\n});","define('hyperchannel/services/logger', ['exports', 'ember'], function (exports, _ember) {\n  var Service = _ember['default'].Service;\n  exports['default'] = Service.extend({\n    enabled: true,\n\n    allowedTypes: ['connection', 'error', 'join', 'leave', 'message', 'send', 'sh_completed', 'sh_failure', 'irc', 'ajax-error'],\n\n    activeTypes: ['connection', 'error', 'join', 'leave', 'send', 'sh_completed', 'sh_failure', 'irc'],\n\n    log: function log(type) {\n      if (!this.get('allowedTypes').includes(type)) {\n        throw new Error('You specified a unknown type: \"' + type + '\".');\n      }\n\n      if (this.get('activeTypes').includes(type) && this.get('enabled')) {\n        var params = Array.prototype.slice.call(arguments);\n        params[0] = '[' + params[0] + ']';\n        _ember['default'].Logger.debug.apply(null, params);\n      }\n    },\n\n    add: function add(type) {\n      this.get('activeTypes').addObject(type);\n    },\n\n    remove: function remove(type) {\n      this.get('activeTypes').removeObject(type);\n    },\n\n    disable: function disable() {\n      this.set('enabled', false);\n    },\n\n    enable: function enable() {\n      this.set('enabled', true);\n    }\n  });\n});","define('hyperchannel/services/moment', ['exports', 'ember', 'hyperchannel/config/environment', 'ember-moment/services/moment'], function (exports, _ember, _hyperchannelConfigEnvironment, _emberMomentServicesMoment) {\n  exports['default'] = _emberMomentServicesMoment['default'].extend({\n    defaultFormat: _ember['default'].get(_hyperchannelConfigEnvironment['default'], 'moment.outputFormat')\n  });\n});","define('hyperchannel/services/remotestorage', ['exports', 'ember', 'hyperchannel/models/space', 'npm:remotestoragejs', 'npm:remotestorage-module-kosmos'], function (exports, _ember, _hyperchannelModelsSpace, _npmRemotestoragejs, _npmRemotestorageModuleKosmos) {\n  exports['default'] = _ember['default'].Service.extend({\n\n    rsInstance: null,\n\n    rs: (function () {\n      if (this.get('rsInstance')) {\n        return this.get('rsInstance');\n      }\n\n      var rs = new _npmRemotestoragejs['default']();\n      /* {logging: true} */rs.access.claim('kosmos', 'rw');\n      rs.caching.enable('/kosmos/');\n\n      this.set('rsInstance', rs);\n      return rs;\n    }).property('rsInstance'),\n\n    addDefaultSpace: function addDefaultSpace() {\n      var nickname = prompt(\"Choose a nickname\");\n\n      var params = {\n        id: 'freenode',\n        name: 'Freenode',\n        protocol: 'IRC',\n        server: {\n          hostname: 'irc.freenode.net',\n          secure: true,\n          port: 7000,\n          nickname: nickname\n        },\n        channels: ['#hackerbeach', '#kosmos', '#kosmos-dev', '#kosmos-random', '#sockethub']\n      };\n\n      return this.get('rs').kosmos.spaces.store(params).then(function () {\n        _ember['default'].Logger.debug('[remotestorage]', 'created/stored default space');\n\n        var channels = params.channels;\n        delete params.channels;\n\n        return { space: _hyperchannelModelsSpace['default'].create(params), channels: channels };\n      });\n    },\n\n    saveSpace: function saveSpace(space) {\n      this.get('rs').kosmos.spaces.store(space.serialize()).then(function () {\n        return _ember['default'].Logger.debug('[remotestorage]', 'saved space ' + space.get('name') + ' in RS');\n      });\n    }\n\n  });\n});","define('hyperchannel/services/sockethub-irc', ['exports', 'ember'], function (exports, _ember) {\n  var service = _ember['default'].inject.service;\n\n  /**\n   * This service provides helpers for SocketHub IRC communications\n   * @module hyperchannel/services/sockethub-irc\n   */\n  exports['default'] = _ember['default'].Service.extend({\n\n    logger: service(),\n    coms: service(),\n\n    /**\n     * - Creates an ActivityStreams person object for\n     *   future use\n     * - Emits credentials for future IRC server messages,\n     *   like e.g. `join`\n     * @public\n     */\n    connect: function connect(space) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@id': space.get('sockethubPersonId'),\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      });\n\n      var credentials = {\n        actor: space.get('sockethubPersonId'),\n        context: 'irc',\n        object: {\n          '@type': 'credentials',\n          nick: space.get('server.nickname'),\n          server: space.get('server.hostname'),\n          port: space.get('server.port'),\n          secure: space.get('server.secure')\n        }\n      };\n\n      this.log('irc', 'connecting to IRC network', credentials);\n      this.sockethub.socket.emit('credentials', credentials);\n    },\n\n    /**\n     * Join a channel/room\n     * @public\n     */\n    join: function join(space, channel, type) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@type': type,\n        '@id': channel.get('sockethubChannelId'),\n        displayName: channel.get('name')\n      });\n\n      var joinMsg = {\n        context: 'irc',\n        '@type': 'join',\n        actor: space.get('sockethubPersonId'),\n        target: channel.get('sockethubChannelId'),\n        object: {}\n      };\n\n      this.log('irc', 'joining channel', joinMsg);\n      this.sockethub.socket.emit('message', joinMsg);\n    },\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var job = {\n        context: 'irc',\n        '@type': 'send',\n        actor: space.get('sockethubPersonId'),\n        target: target,\n        object: {\n          '@type': 'message',\n          content: content\n        }\n      };\n\n      this.log('send', 'sending message job', job);\n      this.sockethub.socket.emit('message', job);\n    },\n\n    /**\n     * Send an action chat message to a channel\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      var job = {\n        context: 'irc',\n        '@type': 'send',\n        actor: space.get('sockethubPersonId'),\n        target: target,\n        object: {\n          '@type': 'me',\n          content: content\n        }\n      };\n\n      this.log('send', 'sending message job', job);\n      this.sockethub.socket.emit('message', job);\n    },\n\n    /**\n     * Leave a channel\n     * @public\n     */\n    leave: function leave(space, channel) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@type': \"room\",\n        '@id': channel.get('sockethubChannelId'),\n        displayName: channel.get('name')\n      });\n\n      var joinMsg = {\n        context: 'irc',\n        '@type': 'leave',\n        actor: space.get('sockethubPersonId'),\n        target: channel.get('sockethubChannelId'),\n        object: {}\n      };\n\n      this.log('leave', 'leaving channel', joinMsg);\n      this.sockethub.socket.emit('message', joinMsg);\n    },\n\n    /**\n     * Send a channel topic change\n     * @public\n     */\n    changeTopic: function changeTopic(space, channel, topic) {\n      var topicMsg = {\n        context: 'irc',\n        '@type': 'update',\n        actor: space.get('sockethubPersonId'),\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'topic',\n          topic: topic\n        }\n      };\n\n      this.sockethub.socket.emit('message', topicMsg);\n    },\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     * @public\n     */\n    observeChannel: function observeChannel(person, channelId) {\n      var observeMsg = {\n        context: 'irc',\n        '@type': 'observe',\n        actor: person,\n        target: channelId,\n        object: {\n          '@type': 'attendance'\n        }\n      };\n\n      this.log('irc', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n    /**\n     * Utility function for easier logging\n     * @protected\n     */\n    log: function log() {\n      var _get;\n\n      (_get = this.get('logger')).log.apply(_get, arguments);\n    }\n  });\n});","define('hyperchannel/storages/user-settings', ['exports', 'ember-local-storage/local/object'], function (exports, _emberLocalStorageLocalObject) {\n\n  var Storage = _emberLocalStorageLocalObject['default'].extend();\n\n  // Uncomment if you would like to set initialState\n  Storage.reopenClass({\n    initialState: function initialState() {\n      return {\n        nickname: null,\n        currentSpace: 'freenode',\n        currentChannel: 'kosmos'\n      };\n    }\n  });\n\n  exports['default'] = Storage;\n});","define(\"hyperchannel/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 16,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"hyperchannel/templates/application.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1, \"id\", \"global\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"header\");\n          dom.setAttribute(el2, \"id\", \"sitename\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"h1\");\n          var el4 = dom.createTextNode(\"Kosmos\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2, \"class\", \"main\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"nav\");\n          dom.setAttribute(el3, \"id\", \"channels\");\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(2);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 3, 1]), 1, 1);\n          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n          return morphs;\n        },\n        statements: [[\"inline\", \"channel-nav\", [], [\"spaces\", [\"subexpr\", \"@mut\", [[\"get\", \"spaces\", [\"loc\", [null, [10, 29], [10, 35]]], 0, 0, 0, 0]], [], [], 0, 0], \"joinChannel\", [\"subexpr\", \"route-action\", [\"openNewChannel\"], [], [\"loc\", [null, [10, 48], [10, 79]]], 0, 0]], [\"loc\", [null, [10, 8], [10, 81]]], 0, 0], [\"content\", \"outlet\", [\"loc\", [null, [15, 2], [15, 12]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 17,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/templates/application.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [[\"block\", \"app-container\", [], [\"showGlobalMenu\", [\"subexpr\", \"@mut\", [[\"get\", \"showGlobalMenu\", [\"loc\", [null, [1, 32], [1, 46]]], 0, 0, 0, 0]], [], [], 0, 0], \"showChannelMenu\", [\"subexpr\", \"@mut\", [[\"get\", \"showChannelMenu\", [\"loc\", [null, [2, 33], [2, 48]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, [\"loc\", [null, [1, 0], [16, 18]]]]],\n      locals: [],\n      templates: [child0]\n    };\n  })());\n});","define(\"hyperchannel/templates/index\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/templates/index.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"[index.hbs]\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes() {\n        return [];\n      },\n      statements: [],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define(\"hyperchannel/templates/settings\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 7,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 11,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"hyperchannel/templates/settings.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n          var el2 = dom.createTextNode(\"delete\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"hr\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element1 = dom.childAt(fragment, [3]);\n          var morphs = new Array(2);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n          morphs[1] = dom.createElementMorph(element1);\n          return morphs;\n        },\n        statements: [[\"content\", \"space.name\", [\"loc\", [null, [8, 10], [8, 24]]], 0, 0, 0, 0], [\"element\", \"action\", [\"removeSpace\", [\"get\", \"space\", [\"loc\", [null, [9, 37], [9, 42]]], 0, 0, 0, 0]], [], [\"loc\", [null, [9, 14], [9, 44]]], 0, 0]],\n        locals: [\"space\"],\n        templates: []\n      };\n    })();\n    var child1 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 15,\n              \"column\": 4\n            },\n            \"end\": {\n              \"line\": 19,\n              \"column\": 4\n            }\n          },\n          \"moduleName\": \"hyperchannel/templates/settings.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h3\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1, \"style\", \"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\");\n          var el2 = dom.createTextNode(\"add\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"hr\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [3]);\n          var morphs = new Array(2);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n          morphs[1] = dom.createElementMorph(element0);\n          return morphs;\n        },\n        statements: [[\"content\", \"spacePreset.name\", [\"loc\", [null, [16, 10], [16, 30]]], 0, 0, 0, 0], [\"element\", \"action\", [\"addSpaceFromPreset\", [\"get\", \"spacePreset\", [\"loc\", [null, [17, 44], [17, 55]]], 0, 0, 0, 0]], [], [\"loc\", [null, [17, 14], [17, 57]]], 0, 0]],\n        locals: [\"spacePreset\"],\n        templates: []\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 46,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/templates/settings.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1, \"id\", \"settings\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h2\");\n        var el3 = dom.createTextNode(\"Settings\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"content\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h3\");\n        var el4 = dom.createTextNode(\"Spaces\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h3\");\n        var el4 = dom.createTextNode(\"Presets\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h3\");\n        var el4 = dom.createTextNode(\"Add new space\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        dom.setAttribute(el3, \"name\", \"add-space\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"label\");\n        dom.setAttribute(el5, \"for\", \"tls-enabled\");\n        var el6 = dom.createTextNode(\"Secure (TLS)\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"input\");\n        dom.setAttribute(el5, \"type\", \"submit\");\n        dom.setAttribute(el5, \"value\", \"Save\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element2 = dom.childAt(fragment, [0, 3]);\n        var element3 = dom.childAt(element2, [11]);\n        var morphs = new Array(8);\n        morphs[0] = dom.createMorphAt(element2, 3, 3);\n        morphs[1] = dom.createMorphAt(element2, 7, 7);\n        morphs[2] = dom.createElementMorph(element3);\n        morphs[3] = dom.createMorphAt(dom.childAt(element3, [1]), 1, 1);\n        morphs[4] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);\n        morphs[5] = dom.createMorphAt(dom.childAt(element3, [5]), 1, 1);\n        morphs[6] = dom.createMorphAt(dom.childAt(element3, [7]), 1, 1);\n        morphs[7] = dom.createMorphAt(dom.childAt(element3, [9]), 1, 1);\n        return morphs;\n      },\n      statements: [[\"block\", \"each\", [[\"get\", \"model.spaces\", [\"loc\", [null, [7, 12], [7, 24]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [7, 4], [11, 13]]]], [\"block\", \"each\", [[\"get\", \"model.spacePresets\", [\"loc\", [null, [15, 12], [15, 30]]], 0, 0, 0, 0]], [], 1, null, [\"loc\", [null, [15, 4], [19, 13]]]], [\"element\", \"action\", [\"addSpace\"], [\"on\", \"submit\"], [\"loc\", [null, [22, 10], [22, 43]]], 0, 0], [\"inline\", \"input\", [], [\"value\", [\"subexpr\", \"@mut\", [[\"get\", \"newSpace.name\", [\"loc\", [null, [24, 22], [24, 35]]], 0, 0, 0, 0]], [], [], 0, 0], \"required\", \"required\", \"placeholder\", \"Freenode\"], [\"loc\", [null, [24, 8], [24, 80]]], 0, 0], [\"inline\", \"input\", [], [\"value\", [\"subexpr\", \"@mut\", [[\"get\", \"newSpace.server.hostname\", [\"loc\", [null, [27, 22], [27, 46]]], 0, 0, 0, 0]], [], [], 0, 0], \"required\", \"required\", \"placeholder\", \"irc.servername.org\"], [\"loc\", [null, [27, 8], [27, 101]]], 0, 0], [\"inline\", \"input\", [], [\"value\", [\"subexpr\", \"@mut\", [[\"get\", \"newSpace.server.port\", [\"loc\", [null, [30, 22], [30, 42]]], 0, 0, 0, 0]], [], [], 0, 0], \"required\", \"required\", \"placeholder\", \"6667\"], [\"loc\", [null, [30, 8], [30, 83]]], 0, 0], [\"inline\", \"input\", [], [\"type\", \"checkbox\", \"checked\", [\"subexpr\", \"@mut\", [[\"get\", \"newSpace.server.secure\", [\"loc\", [null, [33, 40], [33, 62]]], 0, 0, 0, 0]], [], [], 0, 0], \"id\", \"tls-enabled\"], [\"loc\", [null, [33, 8], [33, 81]]], 0, 0], [\"inline\", \"input\", [], [\"value\", [\"subexpr\", \"@mut\", [[\"get\", \"newSpace.server.nickname\", [\"loc\", [null, [37, 22], [37, 46]]], 0, 0, 0, 0]], [], [], 0, 0], \"required\", \"required\", \"placeholder\", \"nickname\"], [\"loc\", [null, [37, 8], [37, 91]]], 0, 0]],\n      locals: [],\n      templates: [child0, child1]\n    };\n  })());\n});","define(\"hyperchannel/templates/space/channel\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 6,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/templates/space/channel.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [[\"inline\", \"channel-container\", [], [\"channel\", [\"subexpr\", \"@mut\", [[\"get\", \"model\", [\"loc\", [null, [1, 28], [1, 33]]], 0, 0, 0, 0]], [], [], 0, 0], \"newMessage\", [\"subexpr\", \"@mut\", [[\"get\", \"newMessage\", [\"loc\", [null, [2, 31], [2, 41]]], 0, 0, 0, 0]], [], [], 0, 0], \"onMessage\", [\"subexpr\", \"action\", [\"sendMessage\"], [], [\"loc\", [null, [3, 30], [3, 52]]], 0, 0], \"onCommand\", [\"subexpr\", \"action\", [\"executeCommand\"], [], [\"loc\", [null, [4, 30], [4, 55]]], 0, 0], \"menu\", [\"subexpr\", \"route-action\", [\"menu\"], [], [\"loc\", [null, [5, 25], [5, 46]]], 0, 0]], [\"loc\", [null, [1, 0], [5, 48]]], 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define(\"hyperchannel/templates/space/user_channel\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 5,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"hyperchannel/templates/space/user_channel.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [[\"inline\", \"channel-container\", [], [\"channel\", [\"subexpr\", \"@mut\", [[\"get\", \"model\", [\"loc\", [null, [1, 28], [1, 33]]], 0, 0, 0, 0]], [], [], 0, 0], \"newMessage\", [\"subexpr\", \"@mut\", [[\"get\", \"newMessage\", [\"loc\", [null, [2, 31], [2, 41]]], 0, 0, 0, 0]], [], [], 0, 0], \"onMessage\", [\"subexpr\", \"action\", [\"sendMessage\"], [], [\"loc\", [null, [3, 30], [3, 52]]], 0, 0], \"onCommand\", [\"subexpr\", \"action\", [\"executeCommand\"], [], [\"loc\", [null, [4, 30], [4, 55]]], 0, 0]], [\"loc\", [null, [1, 0], [4, 57]]], 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('hyperchannel/config/environment', ['ember'], function(Ember) {\n  var prefix = 'hyperchannel';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\nif (!runningTests) {\n  require(\"hyperchannel/app\")[\"default\"].create({\"name\":\"hyperchannel\",\"version\":\"0.2.0+661bf0eb\"});\n}\n\n/* jshint ignore:end */\n"]}