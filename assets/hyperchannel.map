{"version":3,"sources":["vendor/ember-cli/app-prefix.js","hyperchannel/app.js","hyperchannel/components/-lf-get-outlet-state.js","hyperchannel/components/app-container/component.js","hyperchannel/components/app-container/template.js","hyperchannel/components/channel-container/component.js","hyperchannel/components/channel-container/template.js","hyperchannel/components/channel-input-field/component.js","hyperchannel/components/channel-nav/component.js","hyperchannel/components/channel-nav/template.js","hyperchannel/components/date-headline/component.js","hyperchannel/components/date-headline/template.js","hyperchannel/components/from-elsewhere.js","hyperchannel/components/illiquid-model.js","hyperchannel/components/link-to-username/component.js","hyperchannel/components/link-to-username/template.js","hyperchannel/components/liquid-bind.js","hyperchannel/components/liquid-child.js","hyperchannel/components/liquid-container.js","hyperchannel/components/liquid-if.js","hyperchannel/components/liquid-measured.js","hyperchannel/components/liquid-outlet.js","hyperchannel/components/liquid-spacer.js","hyperchannel/components/liquid-sync.js","hyperchannel/components/liquid-unless.js","hyperchannel/components/liquid-versions.js","hyperchannel/components/message-chat-me/component.js","hyperchannel/components/message-chat-me/template.js","hyperchannel/components/message-chat/component.js","hyperchannel/components/message-chat/template.js","hyperchannel/components/modal-target/component.js","hyperchannel/components/modal-target/template.js","hyperchannel/components/multiple-from-elsewhere.js","hyperchannel/components/notification-topic-change/component.js","hyperchannel/components/notification-topic-change/template.js","hyperchannel/components/space-setting-modal/component.js","hyperchannel/components/space-setting-modal/template.js","hyperchannel/components/to-elsewhere.js","hyperchannel/components/web-push-subscription/component.js","hyperchannel/components/web-push-subscription/template.js","hyperchannel/controllers/application.js","hyperchannel/controllers/index.js","hyperchannel/controllers/settings.js","hyperchannel/controllers/space.js","hyperchannel/controllers/space/base_channel.js","hyperchannel/controllers/space/channel.js","hyperchannel/controllers/space/user_channel.js","hyperchannel/ember-gestures/recognizers/pan.js","hyperchannel/ember-gestures/recognizers/pinch.js","hyperchannel/ember-gestures/recognizers/press.js","hyperchannel/ember-gestures/recognizers/rotate.js","hyperchannel/ember-gestures/recognizers/swipe.js","hyperchannel/ember-gestures/recognizers/swipeleft.js","hyperchannel/ember-gestures/recognizers/swiperight.js","hyperchannel/ember-gestures/recognizers/tap.js","hyperchannel/ember-gestures/recognizers/vertical-pan.js","hyperchannel/ember-gestures/recognizers/vertical-swipe.js","hyperchannel/event_dispatcher.js","hyperchannel/helpers/app-version.js","hyperchannel/helpers/cancel-all.js","hyperchannel/helpers/is-after.js","hyperchannel/helpers/is-before.js","hyperchannel/helpers/is-between.js","hyperchannel/helpers/is-same-or-after.js","hyperchannel/helpers/is-same-or-before.js","hyperchannel/helpers/is-same.js","hyperchannel/helpers/lf-lock-model.js","hyperchannel/helpers/lf-or.js","hyperchannel/helpers/moment-add.js","hyperchannel/helpers/moment-calendar.js","hyperchannel/helpers/moment-diff.js","hyperchannel/helpers/moment-duration.js","hyperchannel/helpers/moment-format.js","hyperchannel/helpers/moment-from-now.js","hyperchannel/helpers/moment-from.js","hyperchannel/helpers/moment-subtract.js","hyperchannel/helpers/moment-to-date.js","hyperchannel/helpers/moment-to-now.js","hyperchannel/helpers/moment-to.js","hyperchannel/helpers/moment-unix.js","hyperchannel/helpers/moment.js","hyperchannel/helpers/now.js","hyperchannel/helpers/perform.js","hyperchannel/helpers/route-action.js","hyperchannel/helpers/task.js","hyperchannel/helpers/unix.js","hyperchannel/helpers/utc.js","hyperchannel/initializers/app-version.js","hyperchannel/initializers/container-debug-adapter.js","hyperchannel/initializers/ember-concurrency.js","hyperchannel/initializers/ember-hammertime.js","hyperchannel/initializers/export-application-global.js","hyperchannel/initializers/hammer.js","hyperchannel/initializers/liquid-fire.js","hyperchannel/initializers/sockethub.js","hyperchannel/instance-initializers/ember-gestures.js","hyperchannel/instance-initializers/remotestorage.js","hyperchannel/models/base_channel.js","hyperchannel/models/channel.js","hyperchannel/models/message.js","hyperchannel/models/space.js","hyperchannel/models/user_channel.js","hyperchannel/resolver.js","hyperchannel/router.js","hyperchannel/routes/application.js","hyperchannel/routes/index.js","hyperchannel/routes/settings.js","hyperchannel/routes/space.js","hyperchannel/routes/space/base_channel.js","hyperchannel/routes/space/channel.js","hyperchannel/routes/space/user_channel.js","hyperchannel/services/-gestures.js","hyperchannel/services/ajax.js","hyperchannel/services/coms.js","hyperchannel/services/ember-elsewhere.js","hyperchannel/services/liquid-fire-transitions.js","hyperchannel/services/logger.js","hyperchannel/services/moment.js","hyperchannel/services/remotestorage.js","hyperchannel/services/sockethub-irc.js","hyperchannel/services/sockethub-xmpp.js","hyperchannel/storages/user-settings.js","hyperchannel/templates/application.js","hyperchannel/templates/settings.js","hyperchannel/templates/space/channel.js","hyperchannel/templates/space/index.js","hyperchannel/templates/space/user_channel.js","hyperchannel/transitions/cross-fade.js","hyperchannel/transitions/default.js","hyperchannel/transitions/explode.js","hyperchannel/transitions/fade.js","hyperchannel/transitions/flex-grow.js","hyperchannel/transitions/fly-to.js","hyperchannel/transitions/move-over.js","hyperchannel/transitions/scale.js","hyperchannel/transitions/scroll-then.js","hyperchannel/transitions/to-down.js","hyperchannel/transitions/to-left.js","hyperchannel/transitions/to-right.js","hyperchannel/transitions/to-up.js","hyperchannel/transitions/wait.js","hyperchannel/utils/channel-message-from-sockethub-object.js","hyperchannel/utils/url-base64-to-uint8-array.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"names":["define","_exports","_resolver","_emberLoadInitializers","_environment","Object","defineProperty","value","default","App","Ember","Application","extend","modulePrefix","podModulePrefix","Resolver","_default","_lfGetOutletState","enumerable","get","_recognizers","isElementOf","id","element","$","parents","concat","length","Component","tagName","classNames","classNameBindings","recognizers","managerOptions","computed","domEvents","touchAction","inputClass","Hammer","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","swipeLeft","this","set","swipeRight","tap","e","showGlobalMenu","target","HTMLBars","template","block","meta","moduleName","_emberConcurrency","scrollToBottom","animate","scrollTop","height","elementId","newMessage","channel","scrollingDisabled","coms","inject","service","messagesUpdated","observer","run","scheduleOnce","didInsertElement","_super","apply","arguments","document","getElementById","on","focusMessageInputField","focus","loadPreviousMessages","task","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","loadLastMessages","stop","drop","actions","processMessageOrCommand","substr","onCommand","onMessage","menu","which","what","addUsernameMentionToMessage","username","msg","match","RegExp","TextField","keyUp","ev","altKey","key","_insertAtCaret","myValue","el","selection","createRange","text","selectionStart","startPos","endPos","selectionEnd","substring","_emberKeyboardShortcuts","router","keyboardShortcuts","freeze","ctrl+shift+up","ctrl+shift+down","bindKeyboardShortcuts","willDestroyElement","unbindKeyboardShortcuts","activeChannel","spaces","forEach","space","isPresent","transitionToRelativeChannel","relativePosition","channels","sortedChannels","currentPosition","indexOf","edge","edgeOpposite","_ref","newChannel","transitionTo","goPreviousChannel","goNextChannel","_moment","updateInterval","headline","_this","date","scheduleUpdate","environment","later","notifyPropertyChange","isSame","subtract","toLocaleDateString","_fromElsewhere","_illiquidModel","roles","init","@","%","+","role","usernameWithoutPrefix","regex","keys","join","replace","_liquidBind","_liquidChild","_liquidContainer","_liquidIf","_liquidMeasured","measure","_liquidOutlet","_liquidSpacer","_liquidSync","_liquidUnless","_liquidVersions","_component","message","datetime","format","dateTitle","formattedContent","out","content","linkifyStr","linkAttributes","rel","validate","url","test","email","String","htmlSafe","usernameClick","onUsernameClick","modalAnimation","lookup","call","pick","use","maxOpacity","outsideClick","modal","onOutsideClick","_multipleFromElsewhere","_space","settings","create","setProperties","serialize","save","onSave","cancel","onCancel","_toElsewhere","_urlBase64ToUint8Array","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","botkaURL","subscribed","webPushBaseURL","navigator","serviceWorker","ready","registration","pushManager","getSubscription","subscription","subscribe","_this2","fn","response","vapidPublicKey","convertedVapidKey","fetch","sent","abrupt","userVisibleOnly","applicationServerKey","self","args","err","undefined","_x","bind","console","debug","endpoint","method","headers","Content-type","body","JSON","stringify","user","unsubscribe","_this3","Controller","alias","showChannelMenu","application","controller","storage","newSpace","selectedSpacePreset","showSpaceSettingModal","notEmpty","addSpaceFromPreset","preset","saveSpace","connectAndAddSpace","_message","createMessage","type","Date","nickname","sendMessage","transferMessage","model","pushObject","executeCommand","commandText","commandSplitted","split","command","includes","toLowerCase","send","slice","warn","joinCommand","createChannel","transitionToRoute","partCommand","channelName","removeChannel","lastChannel","leaveCommand","helpCommand","meCommand","transferMeMessage","msgCommand","shift","createUserChannel","topicCommand","topic","changeTopic","_base_channel","_pan","_pinch","_press","_rotate","_swipe","include","exclude","options","threshold","direction","DIRECTION_LEFT","eventName","recognizer","DIRECTION_RIGHT","_tap","_verticalPan","_verticalSwipe","_event_dispatcher","assign","merge","gestures","emberUseCapture","removeTracking","useFastPaths","useCapture","_regexp","appVersion","_","hash","version","APP","versionOnly","hideSha","shaOnly","hideVersion","showExtended","versionExtendedRegExp","versionRegExp","shaRegExp","Helper","helper","_cancelAll","_isAfter","_isBefore","_isBetween","_isSameOrAfter","_isSameOrBefore","_isSame","_lfLockModel","lfLockModel","_lfOr","lfOr","_momentAdd","_momentCalendar","_momentDiff","_momentDuration","_momentFormat","_momentFromNow","_momentFrom","_momentSubtract","_momentToDate","_momentToNow","_momentTo","_unix","_now","_perform","_routeAction","_task","_utc","utc","_initializerFactory","name","initialize","_containerDebugAdapter","app","register","exportApplicationGlobal","theGlobal","window","global","globalName","classify","reopen","willDestroy","defaults","cssProps","userSelect","_emberInternals","_velocityExt","sockethub","SockethubClient","io","sockethubURL","path","instantiate","singleton","instance","getOwner","appInstance","remoteStorage","evt","userList","messages","connected","sockethubChannelId","unreadMessages","unreadMentions","visible","isLogged","loggedChannel","find","slug","unreadMessagesClass","sortedMessages","sortBy","sortedUserList","sort","a","b","localeCompare","addDateHeadline","headlineDate","startOf","toDate","toString","dateMessage","addMessage","addUser","removeUser","removeObject","searchedPreviousLogsUntilDate","formattedTopic","defaultProtocol","protocol","server","previousSockethubPersonIds","channelSorting","hostname","port","secure","password","nickServ","channelNames","mapBy","sockethubChannelIds","loggedChannels","findBy","userNickname","updateUsername","sockethubPersonId","personID","serialized","dasherize","parseInt","prop","isUserChannel","_emberResolver","Router","location","locationType","rootURL","map","route","Route","logger","beforeModel","setupListeners","instantiateSpacesAndChannels","menuProp","capitalize","toggleProperty","openNewChannel","prompt","isEmpty","partChannel","_emberLocalStorage","userSettings","storageFor","redirect","currentSpace","defaultSpaceId","currentChannel","kosmos","getAll","res","col","push","RSVP","spacePresets","setupController","addSpace","modelFor","removeSpace","params","createChannelOrUserChannel","innerWidth","didTransition","setEach","_gestures","_ajax","_channel","_user_channel","_typeof","obj","Symbol","iterator","constructor","prototype","Service","ajax","irc","xmpp","socket","handleSockethubCompleted","handleSockethubMessage","handleSockethubFailure","rs","spaceData","addDefaultSpace","data","instantiateChannels","log","connectServer","getServiceForSockethubPlatform","connect","joinChannel","@id","@type","displayName","leaveChannel","leave","updateChannelUserList","context","getChannelById","actor","getChannel","Array","isArray","object","members","addUserToChannelUserList","removeUserFromChannelUserList","channelId","personId","actorId","updateChannelTopic","currentTopic","newTopic","Notification","requestPermission","platform","generateChannelId","catch","searchUntilDate","maximumDays","isBefore","loadArchiveMessages","_this4","logsUrl","publicLogsUrl","request","dataType","archive","channelMessage","timestamp","from","previous","userName","handleJoinCompleted","handleChannelJoin","addMessageToChannel","handlePresenceUpdate","_this$logger","_emberElsewhere","_transitionMap","enabled","allowedTypes","activeTypes","Error","add","addObject","remove","disable","enable","defaultFormat","_npmRemotestoragejs","_npmRemotestorageModuleKosmos","modules","access","claim","caching","spaceConfig","s","store","_channelMessageFromSockethubObject","buildActivityObject","details","baseObject","buildMessageObject","actorObject","ActivityStreams","credentials","nick","emit","observeChannel","joinMsg","getChannelForMessage","leaveMsg","topicMsg","observeMsg","targetChannelName","credentialsJob","resource","connectJob","targetChannelId","presence","status","getSpaceForMessage","_object","Storage","reopenClass","initialState","_crossFade","_explode","_fade","_flexGrow","_flyTo","_moveOver","_scale","_scrollThen","_toDown","_toLeft","_toRight","_toUp","_wait","published","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","i","charCodeAt","metaName","prefix","rawConfig","querySelector","getAttribute","exports","parse","unescape","runningTests","require"],"mappings":"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","file":"hyperchannel.js","sourcesContent":["'use strict';\n\n\n","define(\"hyperchannel/app\", [\"exports\", \"hyperchannel/resolver\", \"ember-load-initializers\", \"hyperchannel/config/environment\"], function (_exports, _resolver, _emberLoadInitializers, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n  var _default = App;\n  _exports.default = _default;\n});","define(\"hyperchannel/components/-lf-get-outlet-state\", [\"exports\", \"liquid-fire/components/-lf-get-outlet-state\"], function (_exports, _lfGetOutletState) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfGetOutletState.default;\n    }\n  });\n});","define(\"hyperchannel/components/app-container/component\", [\"exports\", \"ember-gestures/mixins/recognizers\"], function (_exports, _recognizers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  function isElementOf(id, element) {\n    return element.id === id || Ember.$(element).parents(\"#\".concat(id)).length > 0;\n  }\n\n  var _default = Ember.Component.extend(_recognizers.default, {\n    tagName: 'div',\n    classNames: ['app-container'],\n    classNameBindings: ['showGlobalMenu:global-menu-open', 'showChannelMenu:channel-menu-open'],\n    recognizers: 'swipeleft swiperight tap',\n    // Hammer.js manager options\n    // Used by the ember-gestures recognizer Mixin,\n    // needed to fix swipe gestures in Chrome.\n    managerOptions: Ember.computed('', function () {\n      return {\n        domEvents: true,\n        touchAction: 'auto',\n        inputClass: Hammer.SUPPORT_POINTER_EVENTS ? Hammer.PointerEventInput : Hammer.TouchInput\n      };\n    }),\n    swipeLeft: function swipeLeft() {\n      this.set('showGlobalMenu', false);\n    },\n    swipeRight: function swipeRight() {\n      this.set('showGlobalMenu', true);\n    },\n    tap: function tap(e) {\n      if (this.showGlobalMenu && !isElementOf('channel-header', e.target) && !isElementOf('global', e.target)) {\n        this.set('showGlobalMenu', false);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/app-container/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"F9s5KxsP\",\n    \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[14,1],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/app-container/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-container/component\", [\"exports\", \"ember-concurrency\"], function (_exports, _emberConcurrency) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  function scrollToBottom() {\n    Ember.$('#channel-content').animate({\n      scrollTop: Ember.$('#channel-content ul').height()\n    }, '500');\n  }\n\n  var _default = Ember.Component.extend({\n    elementId: 'channel',\n    newMessage: '',\n    channel: null,\n    scrollingDisabled: false,\n    coms: Ember.inject.service(),\n    messagesUpdated: Ember.observer('channel.messages.[]', function () {\n      if (!this.scrollingDisabled) {\n        Ember.run.scheduleOnce('afterRender', scrollToBottom);\n      }\n    }),\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      Ember.run.scheduleOnce('afterRender', scrollToBottom); // We need to define an empty handler for swipe events on the\n      // #channel-content element, so that the actual handler of the app container\n      // component gets triggered\n\n      Ember.run.scheduleOnce('afterRender', function () {\n        Hammer(document.getElementById('channel-content')).on('swipe', function () {});\n      });\n    },\n    focusMessageInputField: function focusMessageInputField() {\n      var inputEl = this.$('#message-field').get(0);\n      inputEl.focus();\n    },\n    loadPreviousMessages: (0, _emberConcurrency.task)(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.set('scrollingDisabled', true);\n              _context.next = 3;\n              return this.coms.loadLastMessages(this.get('channel.space'), this.channel, this.get('channel.searchedPreviousLogsUntilDate'));\n\n            case 3:\n              this.set('scrollingDisabled', false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })).drop(),\n    actions: {\n      processMessageOrCommand: function processMessageOrCommand() {\n        if (this.newMessage.substr(0, 1) === \"/\") {\n          this.onCommand(this.newMessage);\n        } else {\n          this.onMessage(this.newMessage);\n        }\n      },\n      menu: function menu(which, what) {\n        this.menu(which, what);\n      },\n      addUsernameMentionToMessage: function addUsernameMentionToMessage(username) {\n        var msg = this.newMessage;\n\n        if (!msg.match(new RegExp(\"^\".concat(username)))) {\n          this.set('newMessage', \"\".concat(username, \": \").concat(msg));\n        }\n\n        this.focusMessageInputField();\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-container/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"4SZz9DZL\",\n    \"block\": \"{\\\"symbols\\\":[\\\"username\\\",\\\"message\\\"],\\\"statements\\\":[[7,\\\"main\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[11,\\\"id\\\",\\\"channel-header\\\"],[11,\\\"onClick\\\",\\\"\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[11,\\\"id\\\",\\\"channel-name\\\"],[12,\\\"class\\\",[27,\\\"if\\\",[[23,[\\\"channel\\\",\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null]],[9],[1,[23,[\\\"channel\\\",\\\"name\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"id\\\",\\\"channel-title\\\"],[9],[1,[23,[\\\"channel\\\",\\\"formattedTopic\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"nav\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-megaphone\\\"],[9],[10],[10],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-mute\\\"],[9],[10],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[3,\\\"action\\\",[[22,0,[]],\\\"menu\\\",\\\"global\\\",\\\"toggle\\\"]],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"section\\\"],[11,\\\"id\\\",\\\"channel-content\\\"],[11,\\\"class\\\",\\\"main\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"loadPreviousMessages\\\"]]],null]],[11,\\\"class\\\",\\\"load-previous\\\"],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n        Load previous messages\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"channel\\\",\\\"sortedMessages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n          \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"type\\\"]]],[[\\\"message\\\",\\\"onUsernameClick\\\"],[[22,2,[]],[27,\\\"action\\\",[[22,0,[]],\\\"addUsernameMentionToMessage\\\"],null]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"no-messages discreet\\\"],[9],[0,\\\"No recent messages to display.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"no-messages discreet\\\"],[9],[0,\\\"No Kosmos logs configured for this channel. \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"https://wiki.kosmos.org/Setting_up_channel_logs\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[11,\\\"rel\\\",\\\"noopener\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Learn more\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"footer\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"section\\\"],[11,\\\"id\\\",\\\"new-message\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"form\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"channel-input-field\\\",null,[[\\\"value\\\",\\\"placeholder\\\",\\\"name\\\",\\\"id\\\",\\\"autocomplete\\\"],[[23,[\\\"newMessage\\\"]],\\\"Type a message and hit enter\\\",\\\"chat-message\\\",\\\"message-field\\\",\\\"off\\\"]]],false],[0,\\\"\\\\n      \\\"],[3,\\\"action\\\",[[22,0,[]],\\\"processMessageOrCommand\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"aside\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"nav\\\"],[9],[0,\\\"\\\\n      \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],[[\\\"class\\\"],[\\\"active\\\"]],{\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-users\\\"],[9],[10]],\\\"parameters\\\":[]},null],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-paperclip\\\"],[9],[10],[10],[4,\\\"link-to\\\",[\\\"settings\\\"],null,{\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-cog\\\"],[9],[10]],\\\"parameters\\\":[]},null],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-resize-enlarge\\\"],[9],[10],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"section\\\"],[11,\\\"id\\\",\\\"user-list\\\"],[11,\\\"class\\\",\\\"main\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"channel\\\",\\\"sortedUserList\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[9],[1,[27,\\\"link-to-username\\\",null,[[\\\"username\\\"],[[22,1,[]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-input-field/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.TextField.extend({\n    keyUp: function keyUp(ev) {\n      // console.debug('keyUp', ev);\n      if (ev.altKey) {\n        switch (ev.key) {\n          case 'k':\n            this._insertAtCaret(\"\\x03\");\n\n            break;\n        }\n      }\n    },\n    _insertAtCaret: function _insertAtCaret(myValue) {\n      var el = this.$().get(0);\n\n      if (document.selection) {\n        el.focus();\n        el = document.selection.createRange();\n        el.text = myValue;\n        el.focus();\n      } else if (el.selectionStart || el.selectionStart === '0') {\n        var startPos = el.selectionStart;\n        var endPos = el.selectionEnd;\n        var scrollTop = el.scrollTop;\n        el.value = el.value.substring(0, startPos) + myValue + el.value.substring(endPos, el.value.length);\n        el.focus();\n        el.selectionStart = startPos + myValue.length;\n        el.selectionEnd = startPos + myValue.length;\n        el.scrollTop = scrollTop;\n      } else {\n        el.value += myValue;\n        el.focus();\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-nav/component\", [\"exports\", \"ember-keyboard-shortcuts\"], function (_exports, _emberKeyboardShortcuts) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'ul',\n    router: Ember.inject.service(),\n    keyboardShortcuts: Object.freeze({\n      'ctrl+shift+up': 'goPreviousChannel',\n      'ctrl+shift+down': 'goNextChannel'\n    }),\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      (0, _emberKeyboardShortcuts.bindKeyboardShortcuts)(this);\n    },\n    willDestroyElement: function willDestroyElement() {\n      this._super.apply(this, arguments);\n\n      (0, _emberKeyboardShortcuts.unbindKeyboardShortcuts)(this);\n    },\n    activeChannel: Ember.computed('spaces.@each.activeChannel', function () {\n      var activeChannel;\n      this.spaces.forEach(function (space) {\n        var channel = space.activeChannel;\n\n        if (Ember.isPresent(channel)) {\n          activeChannel = channel;\n        }\n      });\n      return activeChannel;\n    }),\n    transitionToRelativeChannel: function transitionToRelativeChannel(relativePosition) {\n      if (Ember.isPresent(this.activeChannel)) {\n        var channels = this.activeChannel.space.sortedChannels;\n        var currentPosition = channels.indexOf(this.activeChannel);\n        var edge = channels.length - 1;\n        var edgeOpposite = 0;\n\n        if (relativePosition === -1) {\n          // swap variables\n          var _ref = [edgeOpposite, edge];\n          edge = _ref[0];\n          edgeOpposite = _ref[1];\n        }\n\n        var newPosition = currentPosition === edge ? edgeOpposite : currentPosition + relativePosition;\n        var newChannel = channels[newPosition];\n        this.router.transitionTo('space.channel', newChannel.space, newChannel);\n      }\n    },\n    actions: {\n      goPreviousChannel: function goPreviousChannel() {\n        this.transitionToRelativeChannel(-1);\n      },\n      goNextChannel: function goNextChannel() {\n        this.transitionToRelativeChannel(1);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/channel-nav/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"ZtqXyh+J\",\n    \"block\": \"{\\\"symbols\\\":[\\\"space\\\",\\\"channel\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[9],[4,\\\"link-to\\\",[\\\"space\\\",[22,1,[]]],null,{\\\"statements\\\":[[1,[22,1,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"sortedChannels\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,2,[\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null],\\\" \\\",[22,2,[\\\"unreadMessagesClass\\\"]],\\\" \\\",[27,\\\"if\\\",[[22,2,[\\\"visible\\\"]],\\\"active\\\",\\\"\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"isUserChannel\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",[\\\"space.user-channel\\\",[22,1,[]],[22,2,[]]],null,{\\\"statements\\\":[[1,[22,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",[\\\"space.channel\\\",[22,1,[]],[22,2,[]]],null,{\\\"statements\\\":[[1,[22,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"          \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"leave-channel\\\"],[12,\\\"title\\\",[28,[\\\"Leave \\\",[22,2,[\\\"name\\\"]]]]],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"x\\\"],[3,\\\"action\\\",[[22,0,[]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"partChannel\\\"]],[22,1,[]],[22,2,[]]],null]]],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"      \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"join-channel\\\"],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"+\\\"],[3,\\\"action\\\",[[22,0,[]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"joinChannel\\\"]],[22,1,[]]],null]]],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/date-headline/component\", [\"exports\", \"moment\", \"hyperchannel/config/environment\"], function (_exports, _moment, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    classNames: ['date-headline'],\n    updateInterval: 120000,\n    // 2 minutes\n    headline: Ember.computed('message.date', function () {\n      var _this = this;\n\n      var date = (0, _moment.default)(this.get('message.date'));\n\n      var scheduleUpdate = function scheduleUpdate() {\n        // don't schedule updates during testing, because it makes the tests time out\n        if (!_environment.default.environment === 'testing') {\n          Ember.run.later(function () {\n            _this.notifyPropertyChange('message.date');\n          }, _this.updateInterval);\n        }\n      };\n\n      if (date.isSame((0, _moment.default)(), 'day')) {\n        scheduleUpdate();\n        return 'Today';\n      }\n\n      if (date.isSame((0, _moment.default)().subtract(1, 'day'), 'day')) {\n        scheduleUpdate();\n        return 'Yesterday';\n      }\n\n      return this.get('message.date').toLocaleDateString();\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/date-headline/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"sg793hA3\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"h3\\\"],[9],[1,[21,\\\"headline\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/date-headline/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/from-elsewhere\", [\"exports\", \"ember-elsewhere/components/from-elsewhere\"], function (_exports, _fromElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _fromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/illiquid-model\", [\"exports\", \"liquid-fire/components/illiquid-model\"], function (_exports, _illiquidModel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _illiquidModel.default;\n    }\n  });\n});","define(\"hyperchannel/components/link-to-username/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    username: null,\n    roles: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('roles', {\n        '@': 'op',\n        '%': 'half-op',\n        '+': 'voice'\n      });\n    },\n    role: Ember.computed('username', 'roles', function () {\n      var role = this.roles[this.username[0]];\n\n      if (Ember.isPresent(role)) {\n        return role;\n      }\n\n      return 'normal';\n    }),\n    usernameWithoutPrefix: Ember.computed('username', 'roles', function () {\n      var regex = RegExp(\"^[\\\\\".concat(Object.keys(this.roles).join('\\\\'), \"]\"));\n      return this.username.replace(regex, '');\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/link-to-username/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"FWPQMR6p\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"link-to\\\",[\\\"space.user-channel\\\",[23,[\\\"usernameWithoutPrefix\\\"]]],[[\\\"class\\\"],[[23,[\\\"role\\\"]]]],{\\\"statements\\\":[[1,[21,\\\"username\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/link-to-username/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/liquid-bind\", [\"exports\", \"liquid-fire/components/liquid-bind\"], function (_exports, _liquidBind) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidBind.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-child\", [\"exports\", \"liquid-fire/components/liquid-child\"], function (_exports, _liquidChild) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidChild.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-container\", [\"exports\", \"liquid-fire/components/liquid-container\"], function (_exports, _liquidContainer) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidContainer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-if\", [\"exports\", \"liquid-fire/components/liquid-if\"], function (_exports, _liquidIf) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidIf.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-measured\", [\"exports\", \"liquid-fire/components/liquid-measured\"], function (_exports, _liquidMeasured) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidMeasured.default;\n    }\n  });\n  Object.defineProperty(_exports, \"measure\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidMeasured.measure;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-outlet\", [\"exports\", \"liquid-fire/components/liquid-outlet\"], function (_exports, _liquidOutlet) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidOutlet.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-spacer\", [\"exports\", \"liquid-fire/components/liquid-spacer\"], function (_exports, _liquidSpacer) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidSpacer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-sync\", [\"exports\", \"liquid-fire/components/liquid-sync\"], function (_exports, _liquidSync) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidSync.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-unless\", [\"exports\", \"liquid-fire/components/liquid-unless\"], function (_exports, _liquidUnless) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidUnless.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-versions\", [\"exports\", \"liquid-fire/components/liquid-versions\"], function (_exports, _liquidVersions) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _liquidVersions.default;\n    }\n  });\n});","define(\"hyperchannel/components/message-chat-me/component\", [\"exports\", \"hyperchannel/components/message-chat/component\"], function (_exports, _component) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _component.default.extend({\n    classNames: ['chat-message', 'chat-me-message']\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat-me/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"W7PBYqy/\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"username\\\"],[12,\\\"data-username\\\",[23,[\\\"message\\\",\\\"nickname\\\"]]],[9],[1,[23,[\\\"message\\\",\\\"nickname\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"message\\\"],[9],[1,[21,\\\"formattedContent\\\"],false],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/message-chat-me/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat/component\", [\"exports\", \"moment\"], function (_exports, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global linkifyStr */\n  var _default = Ember.Component.extend({\n    tagName: 'div',\n    classNames: ['chat-message'],\n    message: null,\n    datetime: Ember.computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD[T]HH:mm');\n    }),\n    dateTitle: Ember.computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD [at] HH:mm');\n    }),\n    formattedContent: Ember.computed('message.content', function () {\n      var content = this.get('message.content');\n      var out; // Images\n\n      if (content.match(/^(http)s?:\\/\\/.*(gif|png|jpg|jpeg)$/i)) {\n        out = \"<br><a href=\\\"\".concat(content, \"\\\" target=\\\"_blank\\\" rel=\\\"nofollow noopener\\\">\") + \"<img src=\\\"\".concat(content, \"\\\" class=\\\"from-image-url\\\" alt=\\\"\").concat(content, \"\\\">\") + \"</a>\";\n      } // Other links\n      else {\n          out = linkifyStr(content, {\n            linkAttributes: {\n              rel: 'nofollow noopener'\n            },\n            validate: {\n              url: function url(value) {\n                return /^(http)s?:\\/\\//.test(value);\n              },\n              email: function email() {\n                return false;\n              }\n            }\n          });\n        } // Colors\n\n\n      out = out.replace(/\\u0003(\\d+)/g, '<span class=\"color-$1\">').replace(/\"color-(\\d)\"/g, '\"color-0$1\"').replace(/\\u0002/g, '<span class=\"bold\">').replace(/\\u001D/g, '<span class=\"italic\">').replace(/\\u000f/g, '</span>');\n      return Ember.String.htmlSafe(out);\n    }),\n    actions: {\n      usernameClick: function usernameClick(username) {\n        this.onUsernameClick(username);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/message-chat/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"iTV2P2p9\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"chat-message__username\\\"],[12,\\\"data-username\\\",[23,[\\\"message\\\",\\\"nickname\\\"]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"usernameClick\\\",[23,[\\\"message\\\",\\\"nickname\\\"]]],null]],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"\\\\n  \\\"],[1,[23,[\\\"message\\\",\\\"nickname\\\"]],false],[0,\\\":\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"time\\\"],[11,\\\"class\\\",\\\"chat-message__date\\\"],[12,\\\"datetime\\\",[21,\\\"datetime\\\"]],[12,\\\"title\\\",[21,\\\"dateTitle\\\"]],[9],[0,\\\"\\\\n  \\\"],[1,[27,\\\"moment-format\\\",[[23,[\\\"message\\\",\\\"date\\\"]],\\\"HH:mm\\\"],null],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"chat-message__message\\\"],[9],[0,\\\"\\\\n  \\\"],[1,[21,\\\"formattedContent\\\"],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/message-chat/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/modal-target/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    modalAnimation: function modalAnimation() {\n      return this.lookup('explode').call(this, {\n        pick: '.modal-background',\n        use: ['fade', {\n          maxOpacity: 0.5\n        }]\n      }, {\n        pick: '.modal-dialog',\n        use: 'scale'\n      });\n    },\n    actions: {\n      outsideClick: function outsideClick(modal) {\n        if (modal && modal.onOutsideClick) {\n          modal.onOutsideClick();\n        }\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/modal-target/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"eJNR9e3l\",\n    \"block\": \"{\\\"symbols\\\":[\\\"modal\\\",\\\"currentModal\\\"],\\\"statements\\\":[[4,\\\"from-elsewhere\\\",null,[[\\\"name\\\"],[\\\"modal\\\"]],{\\\"statements\\\":[[4,\\\"liquid-bind\\\",[[22,1,[]]],[[\\\"containerless\\\",\\\"use\\\"],[true,[23,[\\\"modalAnimation\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-container\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-background\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"outsideClick\\\",[22,2,[]]],null]],[11,\\\"role\\\",\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-dialog\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"body\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,2,[]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/modal-target/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/multiple-from-elsewhere\", [\"exports\", \"ember-elsewhere/components/multiple-from-elsewhere\"], function (_exports, _multipleFromElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _multipleFromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/notification-topic-change/component\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    tagName: 'div',\n    classNames: ['topic-change-notification']\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/notification-topic-change/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"Okfpt44z\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"Topic was changed to \\\\\\\"\\\"],[1,[23,[\\\"message\\\",\\\"content\\\"]],false],[0,\\\"\\\\\\\" by \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"username\\\"],[12,\\\"data-username\\\",[23,[\\\"message\\\",\\\"nickname\\\"]]],[9],[1,[23,[\\\"message\\\",\\\"nickname\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/notification-topic-change/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/space-setting-modal/component\", [\"exports\", \"hyperchannel/models/space\"], function (_exports, _space) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Component.extend({\n    settings: null,\n    space: null,\n    init: function init() {\n      this._super.apply(this, arguments); // create a clone of the settings that we can operate on\n\n\n      var space = _space.default.create();\n\n      space.setProperties(this.settings.serialize());\n      this.set('space', space);\n    },\n    actions: {\n      save: function save() {\n        this.onSave(this.space);\n      },\n      cancel: function cancel() {\n        this.onCancel();\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/space-setting-modal/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"+LmXRplj\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"h1\\\"],[9],[0,\\\"Space Setting\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"form\\\"],[11,\\\"name\\\",\\\"add-space\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"protocol\\\"]],\\\"required\\\",\\\"IRC\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[23,[\\\"space\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled-modal\\\"]]],false],[0,\\\"\\\\n    \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"tls-enabled-modal\\\"],[9],[0,\\\"Secure (TLS)\\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"type\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"password\\\",[23,[\\\"space\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"space\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"input\\\"],[11,\\\"value\\\",\\\"Save\\\"],[11,\\\"type\\\",\\\"submit\\\"],[9],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Cancel\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/space-setting-modal/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/to-elsewhere\", [\"exports\", \"ember-elsewhere/components/to-elsewhere\"], function (_exports, _toElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/web-push-subscription/component\", [\"exports\", \"hyperchannel/utils/url-base64-to-uint8-array\"], function (_exports, _urlBase64ToUint8Array) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  var _default = Ember.Component.extend({\n    botkaURL: null,\n    username: null,\n    subscribed: false,\n    webPushBaseURL: Ember.computed('botkaURL', function () {\n      return this.botkaURL + '/web-push';\n    }),\n    init: function init() {\n      var _this = this;\n\n      this._super.apply(this, arguments);\n\n      navigator.serviceWorker.ready.then(function (registration) {\n        return registration.pushManager.getSubscription();\n      }).then(function (subscription) {\n        if (subscription) {\n          _this.set('subscribed', true);\n        }\n      });\n    },\n    actions: {\n      subscribe: function subscribe() {\n        var _this2 = this;\n\n        navigator.serviceWorker.ready.then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          regeneratorRuntime.mark(function _callee(registration) {\n            var response, vapidPublicKey, convertedVapidKey;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return fetch(this.webPushBaseURL + '/vapid-public-key');\n\n                  case 2:\n                    response = _context.sent;\n                    _context.next = 5;\n                    return response.text();\n\n                  case 5:\n                    vapidPublicKey = _context.sent;\n                    // Chrome doesn't accept the base64-encoded (string) vapidPublicKey yet\n                    convertedVapidKey = (0, _urlBase64ToUint8Array.default)(vapidPublicKey); // Subscribe the user\n\n                    return _context.abrupt(\"return\", registration.pushManager.subscribe({\n                      userVisibleOnly: true,\n                      applicationServerKey: convertedVapidKey\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }().bind(this)).then(function (subscription) {\n          console.debug('Subscribed', subscription.endpoint);\n          return fetch(_this2.webPushBaseURL + '/register', {\n            method: 'post',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              user: _this2.username,\n              subscription: subscription\n            })\n          });\n        }).then(this.set('subscribed', true));\n      },\n      unsubscribe: function unsubscribe() {\n        var _this3 = this;\n\n        navigator.serviceWorker.ready.then(function (registration) {\n          return registration.pushManager.getSubscription();\n        }).then(function (subscription) {\n          return subscription.unsubscribe().then(function () {\n            console.debug('Unsubscribed', subscription.endpoint);\n            return fetch(_this3.webPushBaseURL + '/unregister', {\n              method: 'post',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify({\n                subscription: subscription\n              })\n            });\n          });\n        }).then(this.set('subscribed', false));\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/components/web-push-subscription/template\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"/TR1lyza\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"p\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"i\\\"],[9],[0,\\\"username:\\\"],[10],[0,\\\" \\\"],[1,[21,\\\"username\\\"],false],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n  \\\"],[7,\\\"i\\\"],[9],[0,\\\"base URL:\\\"],[10],[0,\\\" \\\"],[1,[21,\\\"webPushBaseURL\\\"],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"subscribed\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Disable push notifications\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"unsubscribe\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"Receive push notifications\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"subscribe\\\"]],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[10]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/components/web-push-subscription/template.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    coms: Ember.inject.service(),\n    spaces: Ember.computed.alias('coms.spaces'),\n    showGlobalMenu: false,\n    showChannelMenu: false\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/index\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    application: Ember.inject.controller()\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/settings\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    application: Ember.inject.controller(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    newSpace: null,\n    selectedSpacePreset: null,\n    showSpaceSettingModal: Ember.computed.notEmpty('selectedSpacePreset'),\n    actions: {\n      addSpaceFromPreset: function addSpaceFromPreset(preset) {\n        this.set('selectedSpacePreset', preset);\n      },\n      saveSpace: function saveSpace(space) {\n        var _this = this;\n\n        this.set('selectedSpacePreset', null);\n        this.storage.saveSpace(space).then(function () {\n          _this.coms.connectAndAddSpace(space);\n        });\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/base_channel\", [\"exports\", \"hyperchannel/models/message\"], function (_exports, _message) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Controller.extend({\n    newMessage: null,\n    space: Ember.inject.controller(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    createMessage: function createMessage(message, type) {\n      return _message.default.create({\n        type: type,\n        date: new Date(),\n        nickname: this.get('space.model.server.nickname'),\n        content: message\n      });\n    },\n    actions: {\n      sendMessage: function sendMessage(newMessage) {\n        var message = this.createMessage(newMessage, 'message-chat');\n        this.coms.transferMessage(this.get('space.model'), this.model, message.get('content'));\n        this.get('model.messages').pushObject(message);\n        this.set('newMessage', null);\n      },\n      executeCommand: function executeCommand(newMessage) {\n        var availableCommands = [\"help\", \"join\", \"leave\", \"me\", \"msg\", \"part\", \"topic\"];\n        var commandText = newMessage.substr(1);\n        var commandSplitted = commandText.split(\" \");\n        var command = commandSplitted[0];\n\n        if (availableCommands.includes(command.toLowerCase())) {\n          this.send(command + 'Command', commandSplitted.slice(1));\n        } else {\n          console.warn('[channel]', 'Unknown command', commandText);\n        }\n\n        this.set('newMessage', null);\n      },\n      joinCommand: function joinCommand(args) {\n        var space = this.get('space.model');\n        var channel = this.coms.createChannel(space, args[0]);\n        this.storage.saveSpace(space);\n        this.transitionToRoute('space.channel', space, channel);\n      },\n      partCommand: function partCommand() {\n        var space = this.get('space.model');\n        var channelName = this.get('model.name');\n        this.coms.removeChannel(space, channelName);\n        var lastChannel = space.get('channels.lastObject');\n\n        if (Ember.isPresent(lastChannel)) {\n          this.transitionToRoute('space.channel', space, lastChannel);\n        } else {\n          this.transitionToRoute('space', space);\n        }\n      },\n      leaveCommand: function leaveCommand() {\n        this.send('partCommand');\n      },\n      helpCommand: function helpCommand() {},\n      meCommand: function meCommand(args) {\n        var newMessage = args.join(' ');\n        var message = this.createMessage(newMessage, 'message-chat-me');\n        this.coms.transferMeMessage(this.get('space.model'), this.get('model.sockethubChannelId'), message.get('content'));\n        this.get('model.messages').pushObject(message);\n      },\n      msgCommand: function msgCommand(args) {\n        var username = args.shift();\n        this.coms.createUserChannel(this.get('space.model'), username); // TODO fix this, sockethub sends a failure event with error\n        // \"TypeError: Cannot read property 'indexOf' of undefined\"\n        // this.get('coms').transferMessage(this.get('space.model'), username, args.join(' '));\n      },\n      topicCommand: function topicCommand(args) {\n        var channel = this.model;\n        var topic = args.join(' ');\n        this.coms.changeTopic(this.get('space.model'), channel, topic);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/channel\", [\"exports\", \"hyperchannel/controllers/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/controllers/space/user_channel\", [\"exports\", \"hyperchannel/controllers/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({});\n\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/pan\", [\"exports\", \"ember-gestures/recognizers/pan\"], function (_exports, _pan) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _pan.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/pinch\", [\"exports\", \"ember-gestures/recognizers/pinch\"], function (_exports, _pinch) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _pinch.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/press\", [\"exports\", \"ember-gestures/recognizers/press\"], function (_exports, _press) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _press.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/rotate\", [\"exports\", \"ember-gestures/recognizers/rotate\"], function (_exports, _rotate) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _rotate.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swipe\", [\"exports\", \"ember-gestures/recognizers/swipe\"], function (_exports, _swipe) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _swipe.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swipeleft\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    include: [],\n    exclude: [],\n    options: {\n      threshold: 25,\n      direction: Hammer.DIRECTION_LEFT\n    },\n    eventName: 'swipeleft',\n    recognizer: 'swipe'\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/swiperight\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    include: [],\n    exclude: [],\n    options: {\n      threshold: 25,\n      direction: Hammer.DIRECTION_RIGHT\n    },\n    eventName: 'swiperight',\n    recognizer: 'swipe'\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/ember-gestures/recognizers/tap\", [\"exports\", \"ember-gestures/recognizers/tap\"], function (_exports, _tap) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _tap.default;\n    }\n  });\n});","define(\"hyperchannel/ember-gestures/recognizers/vertical-pan\", [\"exports\", \"ember-gestures/recognizers/vertical-pan\"], function (_exports, _verticalPan) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _verticalPan.default;\n    }\n  });\n});","define(\"hyperchannel/ember-gestures/recognizers/vertical-swipe\", [\"exports\", \"ember-gestures/recognizers/vertical-swipe\"], function (_exports, _verticalSwipe) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _verticalSwipe.default;\n    }\n  });\n});","define(\"hyperchannel/event_dispatcher\", [\"exports\", \"ember-gestures/event_dispatcher\", \"hyperchannel/config/environment\"], function (_exports, _event_dispatcher, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var assign = Ember.assign || Ember.merge;\n  var gestures = assign({}, {\n    emberUseCapture: false,\n    removeTracking: false,\n    useFastPaths: false\n  });\n  gestures = assign(gestures, _environment.default.gestures);\n\n  var _default = _event_dispatcher.default.extend({\n    useCapture: gestures.emberUseCapture,\n    removeTracking: gestures.removeTracking,\n    useFastPaths: gestures.useFastPaths\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/helpers/app-version\", [\"exports\", \"hyperchannel/config/environment\", \"ember-cli-app-version/utils/regexp\"], function (_exports, _environment, _regexp) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.appVersion = appVersion;\n  _exports.default = void 0;\n\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var version = _environment.default.APP.version; // e.g. 1.0.0-alpha.1+4jds75hf\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n\n    var versionOnly = hash.versionOnly || hash.hideSha;\n    var shaOnly = hash.shaOnly || hash.hideVersion;\n    var match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      } // Fallback to just version\n\n\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  var _default = Ember.Helper.helper(appVersion);\n\n  _exports.default = _default;\n});","define(\"hyperchannel/helpers/cancel-all\", [\"exports\", \"ember-concurrency/helpers/cancel-all\"], function (_exports, _cancelAll) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _cancelAll.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-after\", [\"exports\", \"ember-moment/helpers/is-after\"], function (_exports, _isAfter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isAfter.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-before\", [\"exports\", \"ember-moment/helpers/is-before\"], function (_exports, _isBefore) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isBefore.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-between\", [\"exports\", \"ember-moment/helpers/is-between\"], function (_exports, _isBetween) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isBetween.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same-or-after\", [\"exports\", \"ember-moment/helpers/is-same-or-after\"], function (_exports, _isSameOrAfter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSameOrAfter.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same-or-before\", [\"exports\", \"ember-moment/helpers/is-same-or-before\"], function (_exports, _isSameOrBefore) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSameOrBefore.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/is-same\", [\"exports\", \"ember-moment/helpers/is-same\"], function (_exports, _isSame) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _isSame.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/lf-lock-model\", [\"exports\", \"liquid-fire/helpers/lf-lock-model\"], function (_exports, _lfLockModel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfLockModel.default;\n    }\n  });\n  Object.defineProperty(_exports, \"lfLockModel\", {\n    enumerable: true,\n    get: function get() {\n      return _lfLockModel.lfLockModel;\n    }\n  });\n});","define(\"hyperchannel/helpers/lf-or\", [\"exports\", \"liquid-fire/helpers/lf-or\"], function (_exports, _lfOr) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _lfOr.default;\n    }\n  });\n  Object.defineProperty(_exports, \"lfOr\", {\n    enumerable: true,\n    get: function get() {\n      return _lfOr.lfOr;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-add\", [\"exports\", \"ember-moment/helpers/moment-add\"], function (_exports, _momentAdd) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentAdd.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-calendar\", [\"exports\", \"ember-moment/helpers/moment-calendar\"], function (_exports, _momentCalendar) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentCalendar.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-diff\", [\"exports\", \"ember-moment/helpers/moment-diff\"], function (_exports, _momentDiff) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentDiff.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-duration\", [\"exports\", \"ember-moment/helpers/moment-duration\"], function (_exports, _momentDuration) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentDuration.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-format\", [\"exports\", \"ember-moment/helpers/moment-format\"], function (_exports, _momentFormat) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFormat.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-from-now\", [\"exports\", \"ember-moment/helpers/moment-from-now\"], function (_exports, _momentFromNow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFromNow.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-from\", [\"exports\", \"ember-moment/helpers/moment-from\"], function (_exports, _momentFrom) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentFrom.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-subtract\", [\"exports\", \"ember-moment/helpers/moment-subtract\"], function (_exports, _momentSubtract) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentSubtract.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to-date\", [\"exports\", \"ember-moment/helpers/moment-to-date\"], function (_exports, _momentToDate) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentToDate.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to-now\", [\"exports\", \"ember-moment/helpers/moment-to-now\"], function (_exports, _momentToNow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentToNow.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-to\", [\"exports\", \"ember-moment/helpers/moment-to\"], function (_exports, _momentTo) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _momentTo.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment-unix\", [\"exports\", \"ember-moment/helpers/unix\"], function (_exports, _unix) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _unix.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/moment\", [\"exports\", \"ember-moment/helpers/moment\"], function (_exports, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _moment.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/now\", [\"exports\", \"ember-moment/helpers/now\"], function (_exports, _now) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _now.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/perform\", [\"exports\", \"ember-concurrency/helpers/perform\"], function (_exports, _perform) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _perform.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/route-action\", [\"exports\", \"ember-route-action-helper/helpers/route-action\"], function (_exports, _routeAction) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _routeAction.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/task\", [\"exports\", \"ember-concurrency/helpers/task\"], function (_exports, _task) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _task.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/unix\", [\"exports\", \"ember-moment/helpers/unix\"], function (_exports, _unix) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _unix.default;\n    }\n  });\n});","define(\"hyperchannel/helpers/utc\", [\"exports\", \"ember-moment/helpers/utc\"], function (_exports, _utc) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _utc.default;\n    }\n  });\n  Object.defineProperty(_exports, \"utc\", {\n    enumerable: true,\n    get: function get() {\n      return _utc.utc;\n    }\n  });\n});","define(\"hyperchannel/initializers/app-version\", [\"exports\", \"ember-cli-app-version/initializer-factory\", \"hyperchannel/config/environment\"], function (_exports, _initializerFactory, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var name, version;\n\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  var _default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/container-debug-adapter\", [\"exports\", \"ember-resolver/resolvers/classic/container-debug-adapter\"], function (_exports, _containerDebugAdapter) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = {\n    name: 'container-debug-adapter',\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/ember-concurrency\", [\"exports\", \"ember-concurrency/initializers/ember-concurrency\"], function (_exports, _emberConcurrency) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _emberConcurrency.default;\n    }\n  });\n});","define(\"hyperchannel/initializers/ember-hammertime\", [\"exports\", \"ember-hammertime/components/component\"], function (_exports, _component) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  // activate touch action css\n  var _default = {\n    name: 'ember-hammertime',\n    initialize: function initialize() {}\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/export-application-global\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.initialize = initialize;\n  _exports.default = void 0;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  var _default = {\n    name: 'export-application-global',\n    initialize: initialize\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/hammer\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global Hammer */\n  var _default = {\n    name: 'hammer',\n    initialize: function initialize() {\n      // Enable text selection.\n      // It's disabled by default to improve UX on desktop, so text wouldn't\n      // be selected when panning.\n      delete Hammer.defaults.cssProps.userSelect;\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/liquid-fire\", [\"exports\", \"liquid-fire/ember-internals\", \"liquid-fire/velocity-ext\"], function (_exports, _emberInternals, _velocityExt) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  (0, _emberInternals.initialize)();\n  var _default = {\n    name: 'liquid-fire',\n    initialize: function initialize() {}\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/initializers/sockethub\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global SockethubClient */\n\n  /* global io */\n  // TODO move settings into config file\n  var sockethub = new SockethubClient(io(_environment.default.sockethubURL, {\n    path: '/sockethub'\n  }));\n  var _default = {\n    name: 'sockethub',\n    initialize: function initialize(app) {\n      app.register('sockethub:client', sockethub, {\n        instantiate: false,\n        singleton: true\n      });\n      app.inject('controller', 'sockethub', 'sockethub:client');\n      app.inject('route', 'sockethub', 'sockethub:client');\n      app.inject('component', 'sockethub', 'sockethub:client');\n      app.inject('service', 'sockethub', 'sockethub:client');\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/instance-initializers/ember-gestures\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = {\n    name: 'ember-gestures',\n    initialize: function initialize(instance) {\n      if (typeof instance.lookup === \"function\") {\n        instance.lookup('service:-gestures');\n      } else {\n        // This can be removed when we no-longer support ember 1.12 and 1.13\n        Ember.getOwner(instance).lookup('service:-gestures');\n      }\n    }\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/instance-initializers/remotestorage\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.initialize = initialize;\n  _exports.default = void 0;\n\n  function initialize(appInstance) {\n    var storage = appInstance.lookup('service:remotestorage');\n    var remoteStorage = storage.get('rs'); // Add to window global for debugging/development\n\n    window.remoteStorage = remoteStorage;\n    var rsEvents = ['ready', 'not-connected', 'connected', 'disconnected', 'error', 'features-loaded', 'connecting', 'authing', 'wire-busy', 'wire-done', 'network-offline', 'network-online'];\n    rsEvents.forEach(function (evt) {\n      remoteStorage.on(evt, function () {\n        return console.debug(\"[remotestorage] RS event: \".concat(evt));\n      });\n    });\n  }\n\n  var _default = {\n    name: 'remotestorage',\n    initialize: initialize\n  };\n  _exports.default = _default;\n});","define(\"hyperchannel/models/base_channel\", [\"exports\", \"hyperchannel/models/message\", \"moment\"], function (_exports, _message, _moment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    space: null,\n    name: '',\n    userList: null,\n    messages: null,\n    connected: false,\n    sockethubChannelId: null,\n    topic: null,\n    unreadMessages: false,\n    unreadMentions: false,\n    visible: false,\n    // Current/active channel\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('messages', []);\n      this.set('userList', []);\n    },\n    isLogged: Ember.computed('space.loggedChannels.[]', 'name', function () {\n      var _this = this;\n\n      var loggedChannel = this.get('space.loggedChannels').find(function (channelName) {\n        return channelName === _this.name;\n      });\n      return Ember.isPresent(loggedChannel);\n    }),\n    slug: Ember.computed('name', function () {\n      // This could be based on server type in the future. E.g. IRC would be\n      // server URL, while Campfire would be another id.\n      return this.name.replace(/#/g, '');\n    }),\n    unreadMessagesClass: Ember.computed('visible', 'unreadMessages', 'unreadMentions', function () {\n      if (this.visible || !this.unreadMessages) {\n        return null;\n      }\n\n      return this.unreadMentions ? 'unread-mentions' : 'unread-messages';\n    }),\n    sortedMessages: Ember.computed('messages.@each.date', function () {\n      return this.messages.sortBy('date');\n    }),\n    sortedUserList: Ember.computed('userList.[]', function () {\n      return this.get('userList').sort(function (a, b) {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      });\n    }),\n    addDateHeadline: function addDateHeadline(newMessage) {\n      var headlineDate = (0, _moment.default)(newMessage.get('date')).startOf('day').toDate();\n      var existingDateHeadline = this.messages.find(function (message) {\n        return message.get('type') === 'date-headline' && message.get('date').toString() === headlineDate.toString();\n      });\n\n      if (existingDateHeadline) {\n        return;\n      }\n\n      var dateMessage = _message.default.create({\n        type: 'date-headline',\n        date: headlineDate\n      });\n\n      this.messages.pushObject(dateMessage);\n    },\n    addMessage: function addMessage(message) {\n      this.addDateHeadline(message);\n      this.messages.pushObject(message);\n\n      if (!this.visible) {\n        this.set('unreadMessages', true);\n\n        if (message.get('content').match(this.get('space.userNickname'))) {\n          this.set('unreadMentions', true);\n        }\n      }\n    },\n    addUser: function addUser(username) {\n      if (!this.userList.includes(username)) {\n        this.userList.pushObject(username);\n      }\n    },\n    removeUser: function removeUser(username) {\n      this.userList.removeObject(username);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/channel\", [\"exports\", \"hyperchannel/models/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /* global linkifyStr */\n  var _default = _base_channel.default.extend({\n    searchedPreviousLogsUntilDate: null,\n    formattedTopic: Ember.computed('topic', function () {\n      if (this.topic !== null) {\n        var topic = linkifyStr(this.topic, {\n          defaultProtocol: 'https',\n          linkAttributes: {\n            rel: 'nofollow'\n          }\n        });\n        return new Ember.String.htmlSafe(topic);\n      } else {\n        return '';\n      }\n    })\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/message\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    type: null,\n    date: null,\n    nickname: null,\n    content: null\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Object.extend({\n    name: null,\n    protocol: 'IRC',\n    server: null,\n    channels: null,\n    // Channel instances\n    botkaURL: null,\n    // Kosmos bot\n    // Keep a list of all old sockethubPersonIds, because there might\n    // still be coming events from Sockethub for those.\n    previousSockethubPersonIds: null,\n    channelSorting: null,\n    sortedChannels: Ember.computed.sort('channels', 'channelSorting'),\n    init: function init() {\n      this.set('channelSorting', ['name']);\n      this.set('channels', []);\n      this.set('previousSockethubPersonIds', []);\n      this.set('server', {\n        hostname: null,\n        port: 7000,\n        secure: true,\n        username: null,\n        password: null,\n        nickname: null,\n        nickServ: {\n          password: null\n        }\n      });\n\n      this._super.apply(this, arguments);\n    },\n    channelNames: Ember.computed('channels.@each.name', function () {\n      return this.channels.mapBy('name');\n    }),\n    sockethubChannelIds: Ember.computed('channels.@each.sockethubChannelId', function () {\n      return this.channels.mapBy('sockethubChannelId');\n    }),\n    loggedChannels: Ember.computed('name', 'protocol', function () {\n      if (this.name === 'Freenode' && this.protocol === 'IRC') {\n        return ['#5apps', '#kosmos', '#kosmos-dev', '#remotestorage', '#hackerbeach', '#unhosted', '#sockethub', '#opensourcedesign', '#openknot', '#emberjs', '#indieweb', '#mastodon'];\n      } else {\n        return [];\n      }\n    }),\n    activeChannel: Ember.computed('channels.@each.visible', function () {\n      return this.get('channels').findBy('visible', true);\n    }),\n    userNickname: Ember.computed.alias('server.nickname'),\n    updateUsername: function updateUsername(username) {\n      // keep track of old name for later reference\n      this.previousSockethubPersonIds.pushObject(this.sockethubPersonId);\n\n      switch (this.protocol) {\n        case 'IRC':\n          this.set('server.nickname', username);\n          break;\n\n        case 'XMPP':\n          this.set('server.username', username);\n          break;\n      }\n    },\n    sockethubPersonId: Ember.computed('protocol', 'server.{hostname,username,nickname}', function () {\n      var personID;\n\n      switch (this.protocol) {\n        case 'IRC':\n          // TODO - remove the use of any URI protocol part\n          personID = \"irc://\".concat(this.get('server.nickname'), \"@\").concat(this.get('server.hostname'));\n          break;\n\n        case 'XMPP':\n          // TODO - why isn't the full JID user+host+resource?\n          personID = \"\".concat(this.get('server.username'), \"/hyperchannel\");\n          break;\n      }\n\n      return personID;\n    }),\n    serialize: function serialize() {\n      var _this = this;\n\n      var serialized = {\n        id: this.id || this.name.dasherize(),\n        name: this.name,\n        protocol: this.protocol,\n        server: {\n          hostname: this.get('server.hostname'),\n          port: parseInt(this.get('server.port'), 10),\n          secure: this.get('server.secure'),\n          nickname: this.get('server.nickname')\n        },\n        channels: this.channelNames || []\n      };\n\n      if (Ember.isPresent(this.botkaURL)) {\n        serialized.botkaURL = this.botkaURL;\n      }\n\n      ['username', 'password', 'nickname'].forEach(function (prop) {\n        // TODO credentials need to be encrypted and probably stored elsewhere\n        if (Ember.isPresent(_this.get(\"server.\".concat(prop)))) {\n          serialized.server[prop] = _this.get(\"server.\".concat(prop));\n        }\n      });\n      return serialized;\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/models/user_channel\", [\"exports\", \"hyperchannel/models/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    isUserChannel: true\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/resolver\", [\"exports\", \"ember-resolver\"], function (_exports, _emberResolver) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _emberResolver.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/router\", [\"exports\", \"hyperchannel/config/environment\"], function (_exports, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n  Router.map(function () {\n    this.route('space', {\n      path: '/:id'\n    }, function () {\n      this.route('channel', {\n        path: '/channel/:slug'\n      });\n      this.route('user-channel', {\n        path: '/user/:slug'\n      });\n    });\n    this.route('settings');\n  });\n  var _default = Router;\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n    storage: Ember.inject.service('remotestorage'),\n    beforeModel: function beforeModel() {\n      this._super.apply(this, arguments); // See a list of allowed types in logger.js\n      // Add or remove all your log types here:\n      // this.get('logger').add('message');\n      // this.get('logger').remove('join');\n      // this.get('logger').disable();\n      // this.get('logger').enable();\n\n    },\n    model: function model() {\n      this.coms.setupListeners();\n      return this.coms.instantiateSpacesAndChannels();\n    },\n    actions: {\n      menu: function menu(which, what) {\n        var menuProp = \"show\".concat(which.capitalize(), \"Menu\");\n\n        switch (what) {\n          case 'show':\n            this.controller.set(menuProp, true);\n            break;\n\n          case 'hide':\n            this.controller.set(menuProp, false);\n            break;\n\n          case 'toggle':\n            this.controller.toggleProperty(menuProp);\n            break;\n        }\n      },\n      openNewChannel: function openNewChannel(space) {\n        var channelName = window.prompt('Join channel');\n\n        if (Ember.isEmpty(channelName)) {\n          return;\n        }\n\n        if (space.get('protocol') === 'IRC' && !channelName.match(/^#/)) {\n          channelName = \"#\".concat(channelName);\n        }\n\n        var channel = this.coms.createChannel(space, channelName);\n        this.storage.saveSpace(space);\n        this.transitionTo('space.channel', space, channel);\n      },\n      partChannel: function partChannel(space, channel) {\n        this.get('coms').removeChannel(space, channel.get('name')); // Switch to last channel if the channel parted was currently open\n\n        if (channel.visible) {\n          var lastChannel = space.get('sortedChannels.lastObject');\n          this.transitionTo('space.channel', space, lastChannel);\n        }\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/index\", [\"exports\", \"ember-local-storage\", \"hyperchannel/config/environment\"], function (_exports, _emberLocalStorage, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    redirect: function redirect() {\n      var currentSpace = this.get('userSettings.currentSpace') || _environment.default.defaultSpaceId;\n\n      var currentChannel = this.get('userSettings.currentChannel') || 'kosmos';\n\n      if (currentSpace && currentChannel) {\n        this.transitionTo('space.channel', currentSpace, currentChannel);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/settings\", [\"exports\", \"hyperchannel/models/space\", \"hyperchannel/config/environment\"], function (_exports, _space, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    storage: Ember.inject.service('remotestorage'),\n    coms: Ember.inject.service(),\n    model: function model() {\n      var rsKosmos = this.get('storage.rs').kosmos;\n      var spaces = rsKosmos.spaces.getAll().then(function (res) {\n        var col = [];\n\n        if (Ember.isEmpty(res)) {\n          return col;\n        }\n\n        Object.keys(res).forEach(function (id) {\n          var space = _space.default.create();\n\n          space.setProperties(res[id]);\n          col.push(space);\n        });\n        return col;\n      }, function (e) {\n        console.error(e);\n      });\n      return Ember.RSVP.hash({\n        spaces: spaces,\n        spacePresets: _environment.default.spacePresets.map(function (preset) {\n          var space = _space.default.create();\n\n          space.setProperties(preset);\n          return space;\n        })\n      });\n    },\n    setupController: function setupController(controller) {\n      this._super.apply(this, arguments);\n\n      controller.set('newSpace', _space.default.create());\n    },\n    actions: {\n      addSpace: function addSpace() {\n        var _this = this;\n\n        var newSpace = this.controller.get('newSpace');\n        newSpace.set('id', newSpace.get('name').dasherize());\n        this.storage.saveSpace(newSpace).then(function () {\n          _this.coms.connectAndAddSpace(newSpace);\n\n          _this.modelFor('settings').spaces.pushObject(newSpace);\n        }, function (e) {\n          console.error('error saving in RS', newSpace, e);\n        });\n      },\n      removeSpace: function removeSpace(space) {\n        var _this2 = this;\n\n        this.storage.removeSpace(space).then(function () {\n          _this2.modelFor('settings').spaces.removeObject(space);\n        }, function (e) {\n          console.error('error deleting from RS', space, e);\n        });\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Route.extend({\n    coms: Ember.inject.service(),\n    model: function model(params) {\n      return this.coms.get('spaces').findBy('id', params.id);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/base_channel\", [\"exports\", \"ember-local-storage\"], function (_exports, _emberLocalStorage) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function focusMessageInput() {\n    if (window.innerWidth > 900) {\n      Ember.$('input#message-field').focus();\n    } else {// Don't auto-focus on small screens\n    }\n  }\n\n  var _default = Ember.Route.extend({\n    coms: Ember.inject.service(),\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    model: function model(params) {\n      var space = this.modelFor('space');\n      var channel = space.get('channels').findBy('slug', params.slug);\n\n      if (!channel) {\n        channel = this.createChannelOrUserChannel(space, params.slug);\n      }\n\n      return channel;\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n\n      Ember.run.scheduleOnce('afterRender', function () {\n        focusMessageInput();\n      });\n    },\n    actions: {\n      didTransition: function didTransition() {\n        var _this = this;\n\n        var space = this.modelFor('space');\n        var channel = this.controller.get('model');\n        this.set('userSettings.currentSpace', space.get('id'));\n        this.set('userSettings.currentChannel', channel.get('slug')); // Mark all other channels as inactive/invisible\n\n        this.get('coms.spaces').forEach(function (space) {\n          space.get('channels').setEach('visible', false);\n        }); // Mark channel as active/visible\n\n        channel.set('visible', true); // Mark unread messages as read\n\n        channel.set('unreadMessages', false);\n        channel.set('unreadMentions', false);\n        Ember.run.later(this, function () {\n          return _this.send('menu', 'global', 'hide');\n        }, 500);\n      }\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/channel\", [\"exports\", \"hyperchannel/routes/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.coms.createChannel(space, \"#\" + channelName);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/routes/space/user_channel\", [\"exports\", \"hyperchannel/routes/space/base_channel\"], function (_exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = _base_channel.default.extend({\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.coms.createUserChannel(space, channelName);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/-gestures\", [\"exports\", \"hyperchannel/config/environment\", \"ember-gestures/services/-gestures\"], function (_exports, _environment, _gestures) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var assign = Ember.assign || Ember.merge;\n  var gestures = assign({}, {\n    useCapture: false\n  });\n  gestures = assign(gestures, _environment.default.gestures);\n\n  var _default = _gestures.default.extend({\n    useCapture: gestures.useCapture\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/ajax\", [\"exports\", \"ember-ajax/services/ajax\"], function (_exports, _ajax) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _ajax.default;\n    }\n  });\n});","define(\"hyperchannel/services/coms\", [\"exports\", \"hyperchannel/models/space\", \"hyperchannel/models/channel\", \"hyperchannel/models/user_channel\", \"hyperchannel/models/message\", \"hyperchannel/config/environment\", \"moment\", \"ember-local-storage\"], function (_exports, _space, _channel, _user_channel, _message, _environment, _moment, _emberLocalStorage) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  /**\n   * This service provides the central command interface for communicating with\n   * chat servers/networks\n   * @module hyperchannel/services/coms\n   */\n  var _default = Ember.Service.extend({\n    // Utils\n    ajax: Ember.inject.service(),\n    logger: Ember.inject.service(),\n    // Data storage\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    storage: Ember.inject.service('remotestorage'),\n    // Message transport\n    irc: Ember.inject.service('sockethub-irc'),\n    xmpp: Ember.inject.service('sockethub-xmpp'),\n\n    /**\n     * A collection of all space model instances\n     * @type {Space[]}\n     */\n    spaces: null,\n\n    /**\n     * This is called from the application route on app startup. Sets up all\n     * listeners for incoming Sockethub messages.\n     * @public\n     */\n    setupListeners: function setupListeners() {\n      this.sockethub.socket.on('completed', this.handleSockethubCompleted.bind(this));\n      this.sockethub.socket.on('message', this.handleSockethubMessage.bind(this));\n      this.sockethub.socket.on('failure', this.handleSockethubFailure.bind(this));\n    },\n\n    /**\n     * This is called from the application route on app startup. Instantiates,\n     * connects, and joins all either configured/saved or default spaces/channels\n     * @public\n     */\n    instantiateSpacesAndChannels: function instantiateSpacesAndChannels() {\n      var _this = this;\n\n      this.set('spaces', []);\n      var rs = this.get('storage.rs');\n      return new Ember.RSVP.Promise(function (resolve, reject) {\n        rs.kosmos.spaces.getAll().then(function (spaceData) {\n          if (Ember.isEmpty(Object.keys(spaceData))) {\n            console.debug('No space data found in RS. Adding default space...');\n\n            _this.storage.addDefaultSpace().then(function (data) {\n              _this.connectAndAddSpace(data.space);\n\n              _this.instantiateChannels(data.space, data.channels);\n\n              resolve();\n            });\n          } else {\n            Object.keys(spaceData).forEach(function (id) {\n              var space = _space.default.create();\n\n              space.setProperties({\n                id: id,\n                name: spaceData[id].name,\n                protocol: spaceData[id].protocol,\n                server: spaceData[id].server,\n                botkaURL: spaceData[id].botkaURL\n              });\n\n              _this.connectAndAddSpace(space);\n\n              _this.instantiateChannels(space, spaceData[id].channels);\n            });\n            resolve();\n          }\n        }, function (e) {\n          _this.log('error', 'couldn\\'d load spaces from RS', e);\n\n          reject();\n        });\n      });\n    },\n\n    /**\n     * Invokes the connect function on the appropriate transport service\n     * @public\n     */\n    connectServer: function connectServer(space) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).connect(space);\n    },\n    connectAndAddSpace: function connectAndAddSpace(space) {\n      this.connectServer(space);\n      this.spaces.pushObject(space);\n    },\n\n    /**\n     * Invokes the channel-join function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\"\n     * @public\n     */\n    joinChannel: function joinChannel(space, channel, type) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).join(space, channel, type);\n    },\n\n    /**\n     * Invokes the send-message function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} content\n     * @public\n     */\n    transferMessage: function transferMessage(space, channel, content) {\n      var target = {\n        '@id': channel.get('sockethubChannelId'),\n        '@type': channel.get('isUserChannel') ? 'person' : 'room',\n        displayName: channel.get('name')\n      };\n      this.getServiceForSockethubPlatform(space.get('protocol')).transferMessage(space, target, content);\n    },\n\n    /**\n     * Invokes the send-action-message function on the appropriate transport service\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.transferMeMessage(space, target, content);\n          break;\n      }\n    },\n    leaveChannel: function leaveChannel(space, channel) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.leave(space, channel);\n          break;\n      }\n    },\n    changeTopic: function changeTopic(space, channel, topic) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.changeTopic(space, channel, topic);\n          break;\n      }\n    },\n    updateChannelUserList: function updateChannelUserList(message) {\n      var channel;\n\n      switch (message.context) {\n        case 'irc':\n          channel = this.getChannelById(message.actor['@id']);\n          break;\n\n        case 'xmpp':\n          channel = this.getChannel(message.target['@id'], message.actor['@id']);\n          break;\n      }\n\n      if (channel) {\n        channel.set('connected', true);\n\n        if (Array.isArray(message.object.members)) {\n          channel.set('userList', message.object.members);\n        }\n      }\n    },\n    addUserToChannelUserList: function addUserToChannelUserList(message) {\n      var channel = this.getChannelById(message.target['@id']);\n\n      if (channel) {\n        channel.addUser(message.actor.displayName);\n      }\n    },\n    removeUserFromChannelUserList: function removeUserFromChannelUserList(message) {\n      // TODO handle user quit leaves (multiple channels)\n      // e.g. target is `{ @type: 'service', @id: 'irc://irc.freenode.net' }`\n      var channel = this.getChannelById(message.target['@id']);\n\n      if (channel) {\n        channel.removeUser(message.actor.displayName);\n      }\n    },\n    getChannelById: function getChannelById(channelId) {\n      // TODO handle multiple spaces with same hostname:\n      // This method should return an array of channels for all spaces with the\n      // same hostname\n      var hostname = channelId.match(/(?:irc:\\/\\/)?(?:.+@)?(.+?)(?:\\/|$)/)[1];\n      var space = this.spaces.findBy('server.hostname', hostname);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space by hostname', hostname);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (Ember.isEmpty(channel)) {\n        console.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n\n    /**\n     * @param {String} personId\n     * @param {String} channelId\n     */\n    getChannel: function getChannel(personId, channelId) {\n      var space = this.spaces.findBy('sockethubPersonId', personId);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space by sockethubPersonId', personId);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (Ember.isEmpty(channel)) {\n        console.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n    updateUsername: function updateUsername(message) {\n      if (_typeof(message.actor) === 'object') {\n        var actorId = message.actor['@id'];\n        var space = this.spaces.findBy('sockethubPersonId', actorId);\n\n        if (Ember.isPresent(space)) {\n          space.updateUsername(message.target.displayName);\n        }\n      }\n    },\n    updateChannelTopic: function updateChannelTopic(message) {\n      var hostname;\n\n      if (_typeof(message.target) === 'object') {\n        hostname = message.target['@id'].match(/irc:\\/\\/(.+)\\//)[1];\n      } else if (typeof message.actor === 'string') {\n        hostname = message.actor.match(/irc:\\/\\/.+@(.+)/)[1];\n      }\n\n      var space = this.spaces.findBy('server.hostname', hostname);\n\n      if (!Ember.isEmpty(space)) {\n        var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n        if (Ember.isEmpty(channel)) {\n          console.warn('No channel for update topic message found. Creating it.', message);\n          channel = this.createChannel(space, message.target['displayName']);\n        }\n\n        var currentTopic = channel.get('topic');\n        var newTopic = message.object.topic;\n        channel.set('topic', newTopic);\n\n        if (Ember.isPresent(currentTopic) && newTopic !== currentTopic && !channel.get('visible')) {\n          Notification.requestPermission(function () {\n            new Notification(channel.name, {\n              body: \"New Topic: \".concat(newTopic)\n            });\n          });\n        } // let notification = Message.create({\n        //   type: 'notification-topic-change',\n        //   date: new Date(message.published),\n        //   nickname: message.actor.displayName,\n        //   content: message.object.topic\n        // });\n        // channel.get('messages').pushObject(notification);\n\n      }\n    },\n    instantiateChannels: function instantiateChannels(space, channels) {\n      var _this2 = this;\n\n      channels.forEach(function (channelName) {\n        _this2.createChannel(space, channelName);\n      });\n    },\n    createChannel: function createChannel(space, channelName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _channel.default.create({\n        space: space,\n        name: channelName,\n        sockethubChannelId: platform.generateChannelId(space, channelName)\n      });\n\n      this.joinChannel(space, channel, \"room\");\n      space.get('channels').pushObject(channel); // TODO Do we need this on startup? Could overwrite updates from remote.\n\n      this.storage.saveSpace(space);\n\n      if (channel.get('isLogged')) {\n        this.loadLastMessages(space, channel, _moment.default.utc(), 2).catch(function () {});\n      }\n\n      return channel;\n    },\n    loadLastMessages: function loadLastMessages(space, channel, date) {\n      var _this3 = this;\n\n      var maximumDays = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 14;\n      var searchUntilDate;\n\n      if (channel.get('searchedPreviousLogsUntilDate')) {\n        searchUntilDate = (0, _moment.default)(channel.get('searchedPreviousLogsUntilDate')).subtract(maximumDays, 'days');\n      } else {\n        searchUntilDate = _moment.default.utc().subtract(maximumDays, 'days');\n      }\n\n      if (date.isBefore(searchUntilDate, 'day')) {\n        channel.set('searchedPreviousLogsUntilDate', date);\n        return;\n      }\n\n      return this.loadArchiveMessages(space, channel, date).catch(function () {\n        // didn't find any archive for this day, restart searching for the previous day\n        return _this3.loadLastMessages(space, channel, date.subtract(1, 'day'));\n      });\n    },\n    loadArchiveMessages: function loadArchiveMessages(space, channel, date) {\n      var _this4 = this;\n\n      var logsUrl = \"\".concat(_environment.default.publicLogsUrl, \"/\").concat(space.get('name').toLowerCase(), \"/channels/\").concat(channel.get('slug'), \"/\");\n      logsUrl += date.format('YYYY/MM/DD');\n      return this.ajax.request(logsUrl, {\n        type: 'GET',\n        dataType: 'json'\n      }).then(function (archive) {\n        Ember.get(archive, 'today.messages').forEach(function (message) {\n          _this4.log('chat_message', message);\n\n          var channelMessage = _message.default.create({\n            type: 'message-chat',\n            date: new Date(message.timestamp),\n            nickname: message.from,\n            content: message.text\n          });\n\n          channel.addMessage(channelMessage);\n        });\n        var previous = Ember.get(archive, 'today.previous');\n        channel.set('searchedPreviousLogsUntilDate', _moment.default.utc(previous.replace(/\\//g, '-')));\n      }).catch(function (error) {\n        _this4.log('ajax-error', 'couldn\\'t load archive document', error);\n\n        throw error;\n      });\n    },\n    createUserChannel: function createUserChannel(space, userName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _user_channel.default.create({\n        space: space,\n        name: userName,\n        sockethubChannelId: platform.generateChannelId(space, userName)\n      }); // TODO check if this is necesarry for XMPP,\n      // because for IRC it is not\n\n\n      this.joinChannel(space, channel, \"person\");\n      space.get('channels').pushObject(channel);\n      return channel;\n    },\n    removeChannel: function removeChannel(space, channelName) {\n      var channel = space.get('channels').findBy('name', channelName);\n      this.leaveChannel(space, channel);\n      space.get('channels').removeObject(channel);\n      this.storage.saveSpace(space);\n      return channel;\n    },\n    getServiceForSockethubPlatform: function getServiceForSockethubPlatform(protocol) {\n      return this.get(protocol.dasherize());\n    },\n\n    /*\n     * @private\n     *\n     * Handles completed Sockethub actions:\n     *\n     *     - Successfully joined a channel\n     */\n    handleSockethubCompleted: function handleSockethubCompleted(message) {\n      this.log(\"\".concat(message.context, \"_completed\"), message);\n\n      switch (message['@type']) {\n        case 'join':\n          var space = this.spaces.findBy('sockethubPersonId', message.actor['@id']); // try to find space by older sockethubPersonId\n\n          if (Ember.isEmpty(space)) {\n            space = this.spaces.find(function (space) {\n              return space.get('previousSockethubPersonIds').includes(message.actor['@id']);\n            });\n          }\n\n          if (!Ember.isEmpty(space)) {\n            this.get(message.context).handleJoinCompleted(space, message);\n          } else {\n            console.warn('Could not find space for join message', message);\n          }\n\n          break;\n      }\n    },\n\n    /**\n     * Handles incoming Sockethub messages:\n     * - Attendance list for channel\n     * - Another user joined or left a channel\n     * - Received a channel message (normal or me/action)\n     * - A channel topic was updated\n     * - The username/address changed\n     * @private\n     */\n    handleSockethubMessage: function handleSockethubMessage(message) {\n      this.log(\"\".concat(message.context, \"_message\"), 'SH message', message);\n\n      switch (message['@type']) {\n        case 'observe':\n          if (message.object['@type'] === 'attendance') {\n            this.updateChannelUserList(message);\n          }\n\n          break;\n\n        case 'join':\n          this.handleChannelJoin(message);\n          break;\n\n        case 'leave':\n          this.removeUserFromChannelUserList(message);\n          break;\n\n        case 'send':\n          switch (message.object['@type']) {\n            case 'message':\n            case 'me':\n              this.getServiceForSockethubPlatform(message.context).addMessageToChannel(message);\n              break;\n          }\n\n          break;\n\n        case 'update':\n          switch (message.object['@type']) {\n            case 'topic':\n              this.updateChannelTopic(message);\n              break;\n\n            case 'address':\n              this.updateUsername(message);\n              break;\n\n            case 'presence':\n              this.xmpp.handlePresenceUpdate(message);\n              break;\n\n            case 'error':\n              console.warn('Got error update message', message.actor['@id'], message.object.content);\n              break;\n          }\n\n          break;\n      }\n    },\n\n    /**\n     * Handles the various checks assosciated with channel joins\n     * @private\n     */\n    handleChannelJoin: function handleChannelJoin(message) {\n      if (message.object['@type'] && message.object['@type'] === 'error') {\n        // failed to join a channel\n        var channel = this.getChannel(message.target['@id'], message.actor['@id']);\n\n        if (Ember.isPresent(channel)) {\n          channel.set('connected', false);\n        } else {\n          console.warn('Could not find channel for error message', message);\n        }\n      } else {\n        this.addUserToChannelUserList(message);\n      }\n    },\n\n    /**\n     * Handles incoming Sockethub errors/failures\n     * @private\n     */\n    handleSockethubFailure: function handleSockethubFailure(message) {\n      this.log('sh_failure', message);\n    },\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/ember-elsewhere\", [\"exports\", \"ember-elsewhere/services/ember-elsewhere\"], function (_exports, _emberElsewhere) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _emberElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/services/liquid-fire-transitions\", [\"exports\", \"liquid-fire/transition-map\"], function (_exports, _transitionMap) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _default = _transitionMap.default;\n  _exports.default = _default;\n});","define(\"hyperchannel/services/logger\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Service.extend({\n    enabled: true,\n    allowedTypes: null,\n    activeTypes: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('allowedTypes', ['connection', 'error', 'join', 'leave', 'message', 'irc_message', 'xmpp_message', 'send', 'xmpp_completed', 'irc_completed', 'sh_completed', 'sh_failure', 'irc', 'xmpp', 'ajax-error', 'chat_message']);\n      this.set('activeTypes', ['connection', 'error', 'join', 'leave', 'send', 'sh_completed', 'xmpp_completed', 'irc_completed', 'sh_failure', 'irc', 'xmpp', 'message', 'irc_message', 'xmpp_message']);\n    },\n    log: function log(type) {\n      if (!this.allowedTypes.includes(type)) {\n        throw new Error(\"You specified a unknown type: \\\"\".concat(type, \"\\\".\"));\n      }\n\n      if (this.activeTypes.includes(type) && this.enabled) {\n        var params = Array.prototype.slice.call(arguments);\n        params[0] = \"[\".concat(params[0], \"]\");\n        console.debug.apply(null, params);\n      }\n    },\n    add: function add(type) {\n      this.activeTypes.addObject(type);\n    },\n    remove: function remove(type) {\n      this.activeTypes.removeObject(type);\n    },\n    disable: function disable() {\n      this.set('enabled', false);\n    },\n    enable: function enable() {\n      this.set('enabled', true);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/moment\", [\"exports\", \"ember-moment/services/moment\", \"hyperchannel/config/environment\"], function (_exports, _moment, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n  var _Ember = Ember,\n      get = _Ember.get;\n\n  var _default = _moment.default.extend({\n    defaultFormat: get(_environment.default, 'moment.outputFormat')\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/remotestorage\", [\"exports\", \"hyperchannel/models/space\", \"npm:remotestoragejs\", \"npm:remotestorage-module-kosmos\", \"hyperchannel/config/environment\"], function (_exports, _space, _npmRemotestoragejs, _npmRemotestorageModuleKosmos, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.Service.extend({\n    rs: null,\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      var rs = new _npmRemotestoragejs.default({\n        modules: [_npmRemotestorageModuleKosmos.default.default]\n      });\n      rs.access.claim('kosmos', 'rw');\n      rs.caching.enable('/kosmos/');\n      this.set('rs', rs);\n    },\n    addDefaultSpace: function addDefaultSpace() {\n      var spaceConfig = _environment.default.spacePresets.find(function (s) {\n        return s.id === _environment.default.defaultSpaceId;\n      });\n\n      var params = {\n        id: spaceConfig.id,\n        name: spaceConfig.name,\n        protocol: spaceConfig.protocol,\n        server: spaceConfig.server,\n        channels: ['#hackerbeach', '#kosmos', '#kosmos-dev', '#kosmos-random', '#sockethub'],\n        botkaURL: spaceConfig.botkaURL\n      };\n      params.server.nickname = window.prompt(\"Choose a nickname\");\n      return this.rs.kosmos.spaces.store(params).then(function () {\n        console.debug('[remotestorage]', 'created/stored default space');\n        var channels = params.channels;\n        delete params.channels;\n\n        var space = _space.default.create();\n\n        space.setProperties(params);\n        return {\n          space: space,\n          channels: channels\n        };\n      });\n    },\n    saveSpace: function saveSpace(space) {\n      return this.rs.kosmos.spaces.store(space.serialize()).then(function () {\n        return console.debug('[remotestorage]', \"saved space \".concat(space.get('name')));\n      }).catch(function (err) {\n        return console.error('saving space failed:', err);\n      });\n    },\n    removeSpace: function removeSpace(space) {\n      return this.rs.kosmos.spaces.remove(space.get('id')).then(function () {\n        return console.debug('[remotestorage]', \"removed space \".concat(space.get('name'), \" from RS\"));\n      });\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/sockethub-irc\", [\"exports\", \"hyperchannel/utils/channel-message-from-sockethub-object\"], function (_exports, _channelMessageFromSockethubObject) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param {Space} space - space model the activity belongs to\n   * @param {Object} details - the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'irc',\n      actor: space.get('sockethubPersonId')\n    };\n    return Ember.$.extend({}, baseObject, details);\n  }\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n\n\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n  /**\n   * This service provides helpers for SocketHub IRC communications\n   * @module hyperchannel/services/sockethub-irc\n   */\n\n\n  var _default = Ember.Service.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n\n    /**\n     * - Creates an ActivityStreams person object for\n     *   future use\n     * - Emits credentials for future IRC server messages,\n     *   like e.g. `join`\n     * @public\n     */\n    connect: function connect(space) {\n      var actorObject = {\n        '@id': space.get('sockethubPersonId'),\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      };\n      console.debug('actor object', actorObject);\n      this.sockethub.ActivityStreams.Object.create(actorObject);\n      var credentials = buildActivityObject(space, {\n        object: {\n          '@type': 'credentials',\n          nick: space.get('server.nickname'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          secure: space.get('server.secure')\n        }\n      });\n      this.log('irc', 'connecting to IRC network', credentials);\n      this.sockethub.socket.emit('credentials', credentials);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n      if (channel) {\n        this.observeChannel(space, channel);\n      }\n    },\n\n    /**\n     * Join a channel/room\n     * @public\n     */\n    join: function join(space, channel, type) {\n      switch (type) {\n        case 'room':\n          this.sockethub.ActivityStreams.Object.create({\n            '@type': type,\n            '@id': channel.get('sockethubChannelId'),\n            displayName: channel.get('name')\n          });\n          var joinMsg = buildActivityObject(space, {\n            '@type': 'join',\n            target: channel.get('sockethubChannelId'),\n            object: {}\n          });\n          this.log('irc', 'joining channel', joinMsg);\n          this.sockethub.socket.emit('message', joinMsg);\n          break;\n\n        case 'person':\n          channel.set('connected', true);\n          break;\n      }\n    },\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n    /**\n     * Send an action chat message to a channel\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content, 'me');\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      var hostname = message.actor['@id'].match(/irc:\\/\\/.+@(.+)/)[1];\n      var space = this.get('coms.spaces').findBy('server.hostname', hostname);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message); // TODO should check for message and update sent status if exists\n\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n    /**\n     * Leave a channel\n     * @public\n     */\n    leave: function leave(space, channel) {\n      if (!channel.get('isUserChannel')) {\n        // TODO Do we really need to create this room for leaving? It should\n        // already have been created when joining.\n        this.sockethub.ActivityStreams.Object.create({\n          '@type': \"room\",\n          '@id': channel.get('sockethubChannelId'),\n          displayName: channel.get('name')\n        });\n        var leaveMsg = buildActivityObject(space, {\n          '@type': 'leave',\n          target: channel.get('sockethubChannelId'),\n          object: {}\n        });\n        this.log('leave', 'leaving channel', leaveMsg);\n        this.sockethub.socket.emit('message', leaveMsg);\n      }\n    },\n\n    /**\n     * Send a channel topic change\n     * @public\n     */\n    changeTopic: function changeTopic(space, channel, topic) {\n      var topicMsg = buildActivityObject(space, {\n        '@type': 'update',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'topic',\n          topic: topic\n        }\n      });\n      this.sockethub.socket.emit('message', topicMsg);\n    },\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n      this.log('irc', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return \"irc://\".concat(space.get('server.hostname'), \"/\").concat(channelName);\n    },\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelName, channel;\n\n      if (space.get('userNickname') === message.target.displayName) {\n        // direct message\n        targetChannelName = message.actor.displayName || message.actor['@id'];\n        channel = space.get('channels').findBy('name', targetChannelName);\n\n        if (!channel) {\n          channel = this.coms.createUserChannel(space, targetChannelName);\n        }\n      } else {\n        // channel message\n        targetChannelName = message.target.displayName;\n        channel = space.get('channels').findBy('name', targetChannelName);\n\n        if (!channel) {\n          channel = this.coms.createChannel(space, targetChannelName);\n        }\n      }\n\n      return channel;\n    },\n\n    /**\n     * Utility function for easier logging\n     * @protected\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/services/sockethub-xmpp\", [\"exports\", \"hyperchannel/utils/channel-message-from-sockethub-object\"], function (_exports, _channelMessageFromSockethubObject) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param space {Space} space model the activity belongs to\n   * @param details {Object} the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'xmpp',\n      actor: space.get('sockethubPersonId')\n    };\n    return Ember.$.extend({}, baseObject, details);\n  }\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n\n\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n  /**\n   * This service provides helpers for SocketHub XMPP communications\n   * @module hyperchannel/services/sockethub-xmpp\n   */\n\n\n  var _default = Ember.Service.extend({\n    logger: Ember.inject.service(),\n    coms: Ember.inject.service(),\n\n    /**\n     * @public\n     */\n    connect: function connect(space) {\n      var actor = space.get('sockethubPersonId');\n      this.sockethub.ActivityStreams.Object.create({\n        '@id': actor,\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      });\n      var credentialsJob = {\n        actor: actor,\n        context: 'xmpp',\n        object: {\n          '@type': 'credentials',\n          username: space.get('server.username'),\n          password: space.get('server.password'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          resource: 'hyperchannel'\n        }\n      };\n      var connectJob = {\n        '@type': 'connect',\n        context: 'xmpp',\n        actor: actor\n      };\n      this.log('xmpp', 'connecting to XMPP server...');\n      this.sockethub.socket.emit('credentials', credentialsJob);\n      this.sockethub.socket.emit('message', connectJob);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channelId = message.target['@id'].split('/')[0];\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n\n      if (channel) {\n        this.observeChannel(space, channel);\n      } else {\n        console.warn('Could not find channel for join message', message);\n      }\n    },\n\n    /**\n     * Join a channel/room\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\".\n     * @public\n     */\n    join: function join(space, channel, type) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@type': type,\n        '@id': channel.get('sockethubChannelId'),\n        displayName: channel.get('name')\n      });\n      var joinMsg = buildActivityObject(space, {\n        '@type': 'join',\n        actor: {\n          '@type': 'person',\n          '@id': space.get('sockethubPersonId'),\n          displayName: space.get('server.nickname')\n        },\n        target: {\n          '@id': channel.get('sockethubChannelId'),\n          '@type': type\n        }\n      });\n      this.log('xmpp', 'joining channel', joinMsg);\n      this.sockethub.socket.emit('message', joinMsg);\n    },\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n    handlePresenceUpdate: function handlePresenceUpdate(message) {\n      if (message.target['@type'] === 'room') {\n        var targetChannelId = message.target['@id'];\n        var space = this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n        var channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (channel) {\n          if (message.object.presence === 'offline') {\n            channel.removeUser(message.actor.displayName);\n          } else {\n            channel.addUser(message.actor.displayName);\n          }\n        }\n      } else {\n        console.debug('Presence update:', message.actor['@id'], message.object.presence, message.object.status);\n      }\n    },\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      if (Ember.isEmpty(message.object.content)) {\n        return;\n      }\n\n      var space = this.getSpaceForMessage(message);\n\n      if (Ember.isEmpty(space)) {\n        console.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message); // TODO should check for message and update sent status if exists\n\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n      this.log('xmpp', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return channelName;\n    },\n\n    /**\n     * Get the space for a given message.\n     *\n     * @param {Object} message\n     * @returns {Space} space\n     * @public\n     */\n    getSpaceForMessage: function getSpaceForMessage(message) {\n      var targetChannelId = message.target['@id'];\n\n      if (message.target['@type'] === 'room') {\n        return this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n      } else {\n        return this.get('coms.spaces').findBy('sockethubPersonId', targetChannelId);\n      }\n    },\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelId = message.target['@id'];\n      var channel;\n\n      if (message.target['@type'] === 'room') {\n        channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (!channel) {\n          channel = this.coms.createChannel(space, targetChannelId);\n        }\n      } else {\n        channel = space.get('channels').findBy('sockethubChannelId', message.actor['@id']);\n\n        if (!channel) {\n          channel = this.coms.createUserChannel(space, message.actor['@id']);\n        }\n      }\n\n      return channel;\n    },\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _this$logger;\n\n      (_this$logger = this.logger).log.apply(_this$logger, arguments);\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/storages/user-settings\", [\"exports\", \"ember-local-storage/local/object\", \"hyperchannel/config/environment\"], function (_exports, _object, _environment) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var Storage = _object.default.extend();\n\n  Storage.reopenClass({\n    initialState: function initialState() {\n      return {\n        nickname: null,\n        currentSpace: _environment.default.defaultSpaceId,\n        currentChannel: 'kosmos'\n      };\n    }\n  });\n  var _default = Storage;\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/application\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"66FQaBym\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"app-container\\\",null,[[\\\"showGlobalMenu\\\",\\\"showChannelMenu\\\"],[[23,[\\\"showGlobalMenu\\\"]],[23,[\\\"showChannelMenu\\\"]]]],{\\\"statements\\\":[[0,\\\"  \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"global\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"header\\\"],[11,\\\"id\\\",\\\"sitename\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"h1\\\"],[9],[0,\\\"Kosmos\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"main\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"nav\\\"],[11,\\\"id\\\",\\\"channels\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"channel-nav\\\",null,[[\\\"spaces\\\",\\\"joinChannel\\\",\\\"partChannel\\\"],[[23,[\\\"spaces\\\"]],[27,\\\"route-action\\\",[\\\"openNewChannel\\\"],null],[27,\\\"route-action\\\",[\\\"partChannel\\\"],null]]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[1,[21,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[1,[21,\\\"modal-target\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/application.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/settings\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"afA8SuH0\",\n    \"block\": \"{\\\"symbols\\\":[\\\"spacePreset\\\",\\\"space\\\"],\\\"statements\\\":[[7,\\\"section\\\"],[11,\\\"id\\\",\\\"settings\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Settings\\\"],[10],[0,\\\"\\\\n\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Spaces\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"model\\\",\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"h3\\\"],[9],[1,[22,2,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n      \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"delete\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeSpace\\\",[22,2,[]]]],[10],[0,\\\"\\\\n      \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Presets\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"model\\\",\\\"spacePresets\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"h3\\\"],[9],[1,[22,1,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n      \\\"],[7,\\\"button\\\"],[11,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[9],[0,\\\"add\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"addSpaceFromPreset\\\",[22,1,[]]]],[10],[0,\\\"\\\\n      \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Add new space\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"form\\\"],[11,\\\"name\\\",\\\"add-space\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[23,[\\\"newSpace\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled\\\"]]],false],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"tls-enabled\\\"],[9],[0,\\\"Secure (TLS)\\\"],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"type\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"password\\\",[23,[\\\"newSpace\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[23,[\\\"newSpace\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"input\\\"],[11,\\\"value\\\",\\\"Save\\\"],[11,\\\"type\\\",\\\"submit\\\"],[9],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[3,\\\"action\\\",[[22,0,[]],\\\"addSpace\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[10],[0,\\\"\\\\n\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showSpaceSettingModal\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[27,\\\"to-elsewhere\\\",null,[[\\\"named\\\",\\\"send\\\"],[\\\"modal\\\",[27,\\\"hash\\\",null,[[\\\"body\\\",\\\"onOutsideClick\\\"],[[27,\\\"component\\\",[\\\"space-setting-modal\\\"],[[\\\"settings\\\",\\\"onSave\\\",\\\"onCancel\\\"],[[23,[\\\"selectedSpacePreset\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"saveSpace\\\"],null],[27,\\\"action\\\",[[22,0,[]],[27,\\\"mut\\\",[[23,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]],[27,\\\"action\\\",[[22,0,[]],[27,\\\"mut\\\",[[23,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/settings.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/channel\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"mgWPpc5k\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\",\\\"menu\\\"],[[23,[\\\"model\\\"]],[23,[\\\"newMessage\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"sendMessage\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"executeCommand\\\"],null],[27,\\\"route-action\\\",[\\\"menu\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/channel.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/index\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"2CSHcqV2\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"section\\\"],[11,\\\"id\\\",\\\"space\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h2\\\"],[9],[1,[23,[\\\"model\\\",\\\"name\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"discreet\\\"],[9],[1,[23,[\\\"model\\\",\\\"server\\\",\\\"hostname\\\"]],false],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n      \\\"],[1,[27,\\\"web-push-subscription\\\",null,[[\\\"botkaURL\\\",\\\"username\\\"],[[23,[\\\"model\\\",\\\"botkaURL\\\"]],[23,[\\\"model\\\",\\\"userNickname\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/index.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/templates/space/user_channel\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = void 0;\n\n  var _default = Ember.HTMLBars.template({\n    \"id\": \"8FTGKIyw\",\n    \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\"],[[23,[\\\"model\\\"]],[23,[\\\"newMessage\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"sendMessage\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"executeCommand\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\n    \"meta\": {\n      \"moduleName\": \"hyperchannel/templates/space/user_channel.hbs\"\n    }\n  });\n\n  _exports.default = _default;\n});","define(\"hyperchannel/transitions/cross-fade\", [\"exports\", \"liquid-fire/transitions/cross-fade\"], function (_exports, _crossFade) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _crossFade.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/default\", [\"exports\", \"liquid-fire/transitions/default\"], function (_exports, _default) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _default.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/explode\", [\"exports\", \"liquid-fire/transitions/explode\"], function (_exports, _explode) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _explode.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/fade\", [\"exports\", \"liquid-fire/transitions/fade\"], function (_exports, _fade) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _fade.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/flex-grow\", [\"exports\", \"liquid-fire/transitions/flex-grow\"], function (_exports, _flexGrow) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _flexGrow.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/fly-to\", [\"exports\", \"liquid-fire/transitions/fly-to\"], function (_exports, _flyTo) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _flyTo.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/move-over\", [\"exports\", \"liquid-fire/transitions/move-over\"], function (_exports, _moveOver) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _moveOver.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/scale\", [\"exports\", \"liquid-fire/transitions/scale\"], function (_exports, _scale) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _scale.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/scroll-then\", [\"exports\", \"liquid-fire/transitions/scroll-then\"], function (_exports, _scrollThen) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _scrollThen.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-down\", [\"exports\", \"liquid-fire/transitions/to-down\"], function (_exports, _toDown) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toDown.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-left\", [\"exports\", \"liquid-fire/transitions/to-left\"], function (_exports, _toLeft) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toLeft.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-right\", [\"exports\", \"liquid-fire/transitions/to-right\"], function (_exports, _toRight) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toRight.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/to-up\", [\"exports\", \"liquid-fire/transitions/to-up\"], function (_exports, _toUp) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _toUp.default;\n    }\n  });\n});","define(\"hyperchannel/transitions/wait\", [\"exports\", \"liquid-fire/transitions/wait\"], function (_exports, _wait) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function get() {\n      return _wait.default;\n    }\n  });\n});","define(\"hyperchannel/utils/channel-message-from-sockethub-object\", [\"exports\", \"hyperchannel/models/message\"], function (_exports, _message) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = channelMessageFromSockethubObject;\n\n  function channelMessageFromSockethubObject(message) {\n    var channelMessage = _message.default.create({\n      type: message.object['@type'] === 'me' ? 'message-chat-me' : 'message-chat',\n      date: new Date(message.published),\n      nickname: message.actor.displayName || message.actor['@id'],\n      content: message.object.content\n    });\n\n    return channelMessage;\n  }\n});","define(\"hyperchannel/utils/url-base64-to-uint8-array\", [\"exports\"], function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = urlBase64ToUint8Array;\n\n  function urlBase64ToUint8Array(base64String) {\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\n    var base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    var rawData = window.atob(base64);\n    var outputArray = new Uint8Array(rawData.length);\n\n    for (var i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n});","define('hyperchannel/config/environment', [], function() {\n  var prefix = 'hyperchannel';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","\n          if (!runningTests) {\n            require(\"hyperchannel/app\")[\"default\"].create({\"name\":\"hyperchannel\",\"version\":\"0.3.0+890a86bd\"});\n          }\n        \n"]}