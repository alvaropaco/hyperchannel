{"version":3,"sources":["vendor/ember-cli/app-prefix.js","hyperchannel/app.js","hyperchannel/components/-lf-get-outlet-state.js","hyperchannel/components/app-container/component.js","hyperchannel/components/app-container/template.js","hyperchannel/components/channel-container/component.js","hyperchannel/components/channel-container/template.js","hyperchannel/components/channel-input-field/component.js","hyperchannel/components/channel-nav/component.js","hyperchannel/components/channel-nav/template.js","hyperchannel/components/date-headline/component.js","hyperchannel/components/date-headline/template.js","hyperchannel/components/from-elsewhere.js","hyperchannel/components/illiquid-model.js","hyperchannel/components/link-to-username/component.js","hyperchannel/components/link-to-username/template.js","hyperchannel/components/liquid-bind.js","hyperchannel/components/liquid-child.js","hyperchannel/components/liquid-container.js","hyperchannel/components/liquid-if.js","hyperchannel/components/liquid-measured.js","hyperchannel/components/liquid-outlet.js","hyperchannel/components/liquid-spacer.js","hyperchannel/components/liquid-sync.js","hyperchannel/components/liquid-unless.js","hyperchannel/components/liquid-versions.js","hyperchannel/components/message-chat-me/component.js","hyperchannel/components/message-chat-me/template.js","hyperchannel/components/message-chat/component.js","hyperchannel/components/message-chat/template.js","hyperchannel/components/modal-target/component.js","hyperchannel/components/modal-target/template.js","hyperchannel/components/multiple-from-elsewhere.js","hyperchannel/components/notification-topic-change/component.js","hyperchannel/components/notification-topic-change/template.js","hyperchannel/components/space-setting-modal/component.js","hyperchannel/components/space-setting-modal/template.js","hyperchannel/components/to-elsewhere.js","hyperchannel/components/web-push-subscription/component.js","hyperchannel/components/web-push-subscription/template.js","hyperchannel/controllers/application.js","hyperchannel/controllers/index.js","hyperchannel/controllers/settings.js","hyperchannel/controllers/space.js","hyperchannel/controllers/space/base_channel.js","hyperchannel/controllers/space/channel.js","hyperchannel/controllers/space/user_channel.js","hyperchannel/ember-gestures/recognizers/pan.js","hyperchannel/ember-gestures/recognizers/pinch.js","hyperchannel/ember-gestures/recognizers/press.js","hyperchannel/ember-gestures/recognizers/rotate.js","hyperchannel/ember-gestures/recognizers/swipe.js","hyperchannel/ember-gestures/recognizers/swipeleft.js","hyperchannel/ember-gestures/recognizers/swiperight.js","hyperchannel/ember-gestures/recognizers/tap.js","hyperchannel/ember-gestures/recognizers/vertical-pan.js","hyperchannel/ember-gestures/recognizers/vertical-swipe.js","hyperchannel/event_dispatcher.js","hyperchannel/helpers/app-version.js","hyperchannel/helpers/is-after.js","hyperchannel/helpers/is-before.js","hyperchannel/helpers/is-between.js","hyperchannel/helpers/is-same-or-after.js","hyperchannel/helpers/is-same-or-before.js","hyperchannel/helpers/is-same.js","hyperchannel/helpers/lf-lock-model.js","hyperchannel/helpers/lf-or.js","hyperchannel/helpers/moment-add.js","hyperchannel/helpers/moment-calendar.js","hyperchannel/helpers/moment-diff.js","hyperchannel/helpers/moment-duration.js","hyperchannel/helpers/moment-format.js","hyperchannel/helpers/moment-from-now.js","hyperchannel/helpers/moment-from.js","hyperchannel/helpers/moment-subtract.js","hyperchannel/helpers/moment-to-date.js","hyperchannel/helpers/moment-to-now.js","hyperchannel/helpers/moment-to.js","hyperchannel/helpers/moment-unix.js","hyperchannel/helpers/moment.js","hyperchannel/helpers/now.js","hyperchannel/helpers/route-action.js","hyperchannel/helpers/unix.js","hyperchannel/initializers/app-version.js","hyperchannel/initializers/container-debug-adapter.js","hyperchannel/initializers/ember-hammertime.js","hyperchannel/initializers/export-application-global.js","hyperchannel/initializers/hammer.js","hyperchannel/initializers/liquid-fire.js","hyperchannel/initializers/sockethub.js","hyperchannel/instance-initializers/ember-gestures.js","hyperchannel/instance-initializers/remotestorage.js","hyperchannel/models/base_channel.js","hyperchannel/models/channel.js","hyperchannel/models/message.js","hyperchannel/models/space.js","hyperchannel/models/user_channel.js","hyperchannel/resolver.js","hyperchannel/router.js","hyperchannel/routes/application.js","hyperchannel/routes/index.js","hyperchannel/routes/settings.js","hyperchannel/routes/space.js","hyperchannel/routes/space/base_channel.js","hyperchannel/routes/space/channel.js","hyperchannel/routes/space/user_channel.js","hyperchannel/services/-gestures.js","hyperchannel/services/ajax.js","hyperchannel/services/coms.js","hyperchannel/services/ember-elsewhere.js","hyperchannel/services/liquid-fire-transitions.js","hyperchannel/services/logger.js","hyperchannel/services/moment.js","hyperchannel/services/remotestorage.js","hyperchannel/services/sockethub-irc.js","hyperchannel/services/sockethub-xmpp.js","hyperchannel/storages/user-settings.js","hyperchannel/templates/application.js","hyperchannel/templates/settings.js","hyperchannel/templates/space/channel.js","hyperchannel/templates/space/index.js","hyperchannel/templates/space/user_channel.js","hyperchannel/transitions/cross-fade.js","hyperchannel/transitions/default.js","hyperchannel/transitions/explode.js","hyperchannel/transitions/fade.js","hyperchannel/transitions/flex-grow.js","hyperchannel/transitions/fly-to.js","hyperchannel/transitions/move-over.js","hyperchannel/transitions/scale.js","hyperchannel/transitions/scroll-then.js","hyperchannel/transitions/to-down.js","hyperchannel/transitions/to-left.js","hyperchannel/transitions/to-right.js","hyperchannel/transitions/to-up.js","hyperchannel/transitions/wait.js","hyperchannel/utils/channel-message-from-sockethub-object.js","hyperchannel/utils/url-base64-to-uint8-array.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"names":["define","exports","_resolver","_emberLoadInitializers","_environment","Object","defineProperty","value","App","Ember","Application","extend","modulePrefix","default","podModulePrefix","Resolver","_lfGetOutletState","enumerable","get","_recognizers","Component","$","computed","isElementOf","id","element","parents","length","tagName","classNames","classNameBindings","recognizers","managerOptions","domEvents","touchAction","inputClass","Hammer","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","swipeLeft","this","set","swipeRight","tap","e","showGlobalMenu","target","HTMLBars","template","block","meta","moduleName","observer","scheduleOnce","run","service","inject","scrollToBottom","animate","scrollTop","height","elementId","newMessage","channel","scrollingDisabled","coms","messagesUpdated","didInsertElement","_super","apply","arguments","document","getElementById","on","actions","processMessageOrCommand","substr","onCommand","onMessage","menu","which","what","loadPreviousMessages","_this","loadLastMessages","catch","finally","TextField","keyUp","ev","altKey","key","_insertAtCaret","myValue","el","selection","focus","createRange","text","selectionStart","startPos","endPos","selectionEnd","substring","_moment","later","updateInterval","headline","date","scheduleUpdate","environment","notifyPropertyChange","isSame","subtract","toLocaleDateString","_fromElsewhere","_illiquidModel","isPresent","username","roles","init","@","%","+","role","usernameWithoutPrefix","regex","RegExp","keys","join","replace","_liquidBind","_liquidChild","_liquidContainer","_liquidIf","_liquidMeasured","measure","_liquidOutlet","_liquidSpacer","_liquidSync","_liquidUnless","_liquidVersions","_component","htmlSafe","String","message","datetime","format","dateTitle","formattedContent","content","out","match","linkifyStr","linkAttributes","rel","validate","url","test","email","modalAnimation","lookup","call","pick","use","maxOpacity","outsideClick","modal","onOutsideClick","_multipleFromElsewhere","_space","settings","space","create","setProperties","serialize","save","onSave","cancel","onCancel","_toElsewhere","_urlBase64ToUint8Array","botkaURL","subscribed","webPushBaseURL","navigator","serviceWorker","ready","then","registration","pushManager","getSubscription","subscription","subscribe","fn","_ref","_this2","regeneratorRuntime","mark","_callee","response","vapidPublicKey","convertedVapidKey","wrap","_context","prev","next","fetch","sent","abrupt","userVisibleOnly","applicationServerKey","stop","gen","Promise","resolve","reject","step","arg","info","error","done","err","_x","bind","console","debug","endpoint","method","headers","Content-type","body","JSON","stringify","user","unsubscribe","_this3","Controller","alias","spaces","showChannelMenu","controller","application","notEmpty","storage","newSpace","selectedSpacePreset","showSpaceSettingModal","addSpaceFromPreset","preset","saveSpace","connectAndAddSpace","_message","Logger","createMessage","type","Date","nickname","sendMessage","transferMessage","model","pushObject","executeCommand","commandText","commandSplitted","split","command","includes","toLowerCase","send","slice","warn","joinCommand","args","createChannel","transitionToRoute","partCommand","channelName","removeChannel","lastChannel","leaveCommand","helpCommand","meCommand","transferMeMessage","msgCommand","shift","createUserChannel","topicCommand","topic","changeTopic","_base_channel","_pan","_pinch","_press","_rotate","_swipe","include","exclude","options","threshold","direction","DIRECTION_LEFT","eventName","recognizer","DIRECTION_RIGHT","_tap","_verticalPan","_verticalSwipe","_event_dispatcher","merge","assign","gestures","emberUseCapture","removeTracking","useFastPaths","useCapture","_regexp","appVersion","version","APP","_","hash","undefined","hideSha","versionRegExp","hideVersion","shaRegExp","Helper","helper","_isAfter","_isBefore","_isBetween","_isSameOrAfter","_isSameOrBefore","_isSame","_lfLockModel","lfLockModel","_lfOr","lfOr","_momentAdd","_momentCalendar","_momentDiff","_momentDuration","_momentFormat","_momentFromNow","_momentFrom","_momentSubtract","_momentToDate","_momentToNow","_momentTo","_unix","_now","_routeAction","_initializerFactory","_config$APP","name","initialize","_containerDebugAdapter","app","register","exportApplicationGlobal","theGlobal","window","global","self","globalName","classify","reopen","willDestroy","defaults","cssProps","userSelect","_emberInternals","sockethub","SockethubClient","io","sockethubURL","path","instantiate","singleton","getOwner","instance","appInstance","remoteStorage","forEach","evt","EmberObject","userList","messages","connected","sockethubChannelId","unreadMessages","unreadMentions","visible","isLogged","loggedChannel","find","slug","unreadMessagesClass","sortedMessages","sortBy","addDateHeadline","headlineDate","startOf","toDate","toString","dateMessage","addMessage","addUser","removeUser","removeObject","searchedPreviousLogsUntilDate","formattedTopic","defaultProtocol","sort","protocol","server","channels","previousSockethubPersonIds","channelSorting","sortedChannels","hostname","port","secure","password","nickServ","channelNames","mapBy","sockethubChannelIds","loggedChannels","userNickname","updateUsername","sockethubPersonId","personID","serialized","dasherize","parseInt","prop","isUserChannel","_emberResolver","Router","location","locationType","rootURL","map","route","Route","isEmpty","logger","beforeModel","setupListeners","instantiateSpacesAndChannels","menuProp","capitalize","toggleProperty","openNewChannel","prompt","transitionTo","_emberLocalStorage","userSettings","storageFor","redirect","currentSpace","defaultSpaceId","currentChannel","RSVP","kosmos","getAll","res","col","push","spacePresets","setupController","addSpace","modelFor","removeSpace","params","findBy","createChannelOrUserChannel","innerWidth","didTransition","setEach","_gestures","_ajax","_channel","_user_channel","_typeof","Symbol","iterator","obj","constructor","prototype","Service","ajax","irc","xmpp","socket","handleSockethubCompleted","handleSockethubMessage","handleSockethubFailure","rs","spaceData","addDefaultSpace","data","instantiateChannels","log","connectServer","getServiceForSockethubPlatform","connect","joinChannel","@id","@type","displayName","leaveChannel","leave","updateChannelUserList","context","getChannelById","actor","getChannel","Array","isArray","object","members","addUserToChannelUserList","removeUserFromChannelUserList","channelId","personId","actorId","updateChannelTopic","currentTopic","newTopic","Notification","requestPermission","platform","generateChannelId","utc","maximumDays","searchUntilDate","isBefore","loadArchiveMessages","_this4","logsUrl","publicLogsUrl","request","dataType","archive","channelMessage","timestamp","from","previous","userName","handleJoinCompleted","handleChannelJoin","addMessageToChannel","handlePresenceUpdate","_logger","_emberElsewhere","_transitionMap","enabled","allowedTypes","activeTypes","Error","add","addObject","remove","disable","enable","defaultFormat","_npmRemotestoragejs","_npmRemotestorageModuleKosmos","modules","access","claim","caching","spaceConfig","s","store","_channelMessageFromSockethubObject","buildActivityObject","details","baseObject","buildMessageObject","actorObject","ActivityStreams","credentials","nick","emit","observeChannel","joinMsg","getChannelForMessage","leaveMsg","topicMsg","observeMsg","targetChannelName","credentialsJob","resource","connectJob","targetChannelId","presence","status","getSpaceForMessage","_object","Storage","reopenClass","initialState","_crossFade","_default","_explode","_fade","_flexGrow","_flyTo","_moveOver","_scale","_scrollThen","_toDown","_toLeft","_toRight","_toUp","_wait","published","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","i","charCodeAt","metaName","prefix","rawConfig","querySelector","getAttribute","parse","unescape","runningTests","require"],"mappings":"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","file":"hyperchannel.js","sourcesContent":["\"use strict\";\n\n\n","define('hyperchannel/app', ['exports', 'hyperchannel/resolver', 'ember-load-initializers', 'hyperchannel/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Application = Ember.Application;\n\n\n  var App = Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define(\"hyperchannel/components/-lf-get-outlet-state\", [\"exports\", \"liquid-fire/components/-lf-get-outlet-state\"], function (exports, _lfGetOutletState) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _lfGetOutletState.default;\n    }\n  });\n});","define('hyperchannel/components/app-container/component', ['exports', 'ember-gestures/mixins/recognizers'], function (exports, _recognizers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component;\n  var $ = Ember.$;\n  var computed = Ember.computed;\n\n\n  function isElementOf(id, element) {\n    return element.id === id || $(element).parents('#' + id).length > 0;\n  }\n\n  exports.default = Component.extend(_recognizers.default, {\n\n    tagName: 'div',\n    classNames: ['app-container'],\n    classNameBindings: ['showGlobalMenu:global-menu-open', 'showChannelMenu:channel-menu-open'],\n\n    recognizers: 'swipeleft swiperight tap',\n\n    // Hammer.js manager options\n    // Used by the ember-gestures recognizer Mixin,\n    // needed to fix swipe gestures in Chrome.\n    managerOptions: computed('', function () {\n      return {\n        domEvents: true,\n        touchAction: 'auto',\n        inputClass: Hammer.SUPPORT_POINTER_EVENTS ? Hammer.PointerEventInput : Hammer.TouchInput\n      };\n    }),\n\n    swipeLeft: function swipeLeft() {\n      this.set('showGlobalMenu', false);\n    },\n    swipeRight: function swipeRight() {\n      this.set('showGlobalMenu', true);\n    },\n    tap: function tap(e) {\n      if (this.showGlobalMenu && !isElementOf('channel-header', e.target) && !isElementOf('global', e.target)) {\n        this.set('showGlobalMenu', false);\n      }\n    }\n  });\n});","define(\"hyperchannel/components/app-container/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"tQfjRDft\", \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[13,1],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/app-container/template.hbs\" } });\n});","define('hyperchannel/components/channel-container/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var $ = Ember.$;\n  var Component = Ember.Component;\n  var observer = Ember.observer;\n  var scheduleOnce = Ember.run.scheduleOnce;\n  var service = Ember.inject.service;\n\n\n  function scrollToBottom() {\n    $('#channel-content').animate({\n      scrollTop: $('#channel-content ul').height()\n    }, '500');\n  }\n\n  exports.default = Component.extend({\n\n    elementId: 'channel',\n    newMessage: '',\n    channel: null,\n    scrollingDisabled: false,\n\n    coms: service(),\n\n    messagesUpdated: observer('channel.messages.[]', function () {\n      if (!this.scrollingDisabled) {\n        scheduleOnce('afterRender', scrollToBottom);\n      }\n    }),\n\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      scheduleOnce('afterRender', scrollToBottom);\n\n      // We need to define an empty handler for swipe events on the\n      // #channel-content element, so that the actual handler of the app container\n      // component gets triggered\n      scheduleOnce('afterRender', function () {\n        Hammer(document.getElementById('channel-content')).on('swipe', function () {});\n      });\n    },\n\n\n    actions: {\n      processMessageOrCommand: function processMessageOrCommand() {\n        if (this.newMessage.substr(0, 1) === \"/\") {\n          this.onCommand(this.newMessage);\n        } else {\n          this.onMessage(this.newMessage);\n        }\n      },\n      menu: function menu(which, what) {\n        this.menu(which, what);\n      },\n      loadPreviousMessages: function loadPreviousMessages() {\n        var _this = this;\n\n        this.set('scrollingDisabled', true);\n        this.coms.loadLastMessages(this.get('channel.space'), this.channel, this.get('channel.searchedPreviousLogsUntilDate')).catch(function () {\n          // TODO what to do here?\n        }).finally(function () {\n          _this.set('scrollingDisabled', false);\n        });\n      }\n    }\n  });\n});","define(\"hyperchannel/components/channel-container/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"UKMZhMzX\", \"block\": \"{\\\"symbols\\\":[\\\"username\\\",\\\"message\\\"],\\\"statements\\\":[[6,\\\"main\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"header\\\"],[10,\\\"id\\\",\\\"channel-header\\\"],[10,\\\"onClick\\\",\\\"\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"menu\\\",\\\"global\\\",\\\"toggle\\\"]],[8],[0,\\\"\\\\n    \\\"],[6,\\\"h2\\\"],[10,\\\"id\\\",\\\"channel-name\\\"],[11,\\\"class\\\",[27,[[26,\\\"if\\\",[[22,[\\\"channel\\\",\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null]]]],[8],[1,[22,[\\\"channel\\\",\\\"name\\\"]],false],[9],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[10,\\\"id\\\",\\\"channel-title\\\"],[8],[1,[22,[\\\"channel\\\",\\\"formattedTopic\\\"]],false],[9],[0,\\\"\\\\n    \\\"],[6,\\\"nav\\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"a\\\"],[10,\\\"href\\\",\\\"#\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[8],[6,\\\"i\\\"],[10,\\\"class\\\",\\\"icon-megaphone\\\"],[8],[9],[9],[6,\\\"a\\\"],[10,\\\"href\\\",\\\"#\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[8],[6,\\\"i\\\"],[10,\\\"class\\\",\\\"icon-mute\\\"],[8],[9],[9],[0,\\\"\\\\n    \\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"section\\\"],[10,\\\"id\\\",\\\"channel-content\\\"],[10,\\\"class\\\",\\\"main\\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"a\\\"],[10,\\\"class\\\",\\\"load-previous\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"loadPreviousMessages\\\"]],[8],[0,\\\"\\\\n        Load previous messages\\\\n      \\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[6,\\\"ul\\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,[\\\"channel\\\",\\\"sortedMessages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"li\\\"],[8],[0,\\\"\\\\n          \\\"],[1,[26,\\\"component\\\",[[21,2,[\\\"type\\\"]]],[[\\\"message\\\"],[[21,2,[]]]]],false],[0,\\\"\\\\n        \\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[6,\\\"li\\\"],[10,\\\"class\\\",\\\"no-messages discreet\\\"],[8],[0,\\\"No recent messages to display.\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[6,\\\"li\\\"],[10,\\\"class\\\",\\\"no-messages discreet\\\"],[8],[0,\\\"No Kosmos logs configured for this channel. \\\"],[6,\\\"a\\\"],[10,\\\"href\\\",\\\"https://wiki.kosmos.org/Setting_up_channel_logs\\\"],[10,\\\"target\\\",\\\"_blank\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[8],[0,\\\"Learn more\\\"],[9],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"footer\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"section\\\"],[10,\\\"id\\\",\\\"new-message\\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"form\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"processMessageOrCommand\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"channel-input-field\\\",null,[[\\\"value\\\",\\\"placeholder\\\",\\\"name\\\",\\\"id\\\",\\\"autocomplete\\\"],[[22,[\\\"newMessage\\\"]],\\\"Type a message and hit enter\\\",\\\"chat-message\\\",\\\"message-field\\\",\\\"off\\\"]]],false],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n    \\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"aside\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"header\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"nav\\\"],[8],[0,\\\"\\\\n      \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],[[\\\"class\\\"],[\\\"active\\\"]],{\\\"statements\\\":[[6,\\\"i\\\"],[10,\\\"class\\\",\\\"icon-users\\\"],[8],[9]],\\\"parameters\\\":[]},null],[6,\\\"a\\\"],[10,\\\"href\\\",\\\"#\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[8],[6,\\\"i\\\"],[10,\\\"class\\\",\\\"icon-paperclip\\\"],[8],[9],[9],[4,\\\"link-to\\\",[\\\"settings\\\"],null,{\\\"statements\\\":[[6,\\\"i\\\"],[10,\\\"class\\\",\\\"icon-cog\\\"],[8],[9]],\\\"parameters\\\":[]},null],[6,\\\"a\\\"],[10,\\\"href\\\",\\\"#\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[8],[6,\\\"i\\\"],[10,\\\"class\\\",\\\"icon-resize-enlarge\\\"],[8],[9],[9],[0,\\\"\\\\n    \\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"section\\\"],[10,\\\"id\\\",\\\"user-list\\\"],[10,\\\"class\\\",\\\"main\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"ul\\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,[\\\"channel\\\",\\\"userList\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"li\\\"],[8],[1,[26,\\\"link-to-username\\\",null,[[\\\"username\\\"],[[21,1,[]]]]],false],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\" } });\n});","define('hyperchannel/components/channel-input-field/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var TextField = Ember.TextField;\n  exports.default = TextField.extend({\n\n    keyUp: function keyUp(ev) {\n      // console.debug('keyUp', ev);\n\n      if (ev.altKey) {\n        switch (ev.key) {\n          case 'k':\n            this._insertAtCaret('\\x03');\n            break;\n        }\n      }\n    },\n\n    _insertAtCaret: function _insertAtCaret(myValue) {\n      var el = this.$().get(0);\n\n      if (document.selection) {\n        el.focus();\n        el = document.selection.createRange();\n        el.text = myValue;\n        el.focus();\n      } else if (el.selectionStart || el.selectionStart === '0') {\n        var startPos = el.selectionStart;\n        var endPos = el.selectionEnd;\n        var scrollTop = el.scrollTop;\n        el.value = el.value.substring(0, startPos) + myValue + el.value.substring(endPos, el.value.length);\n        el.focus();\n        el.selectionStart = startPos + myValue.length;\n        el.selectionEnd = startPos + myValue.length;\n        el.scrollTop = scrollTop;\n      } else {\n        el.value += myValue;\n        el.focus();\n      }\n    }\n\n  });\n});","define('hyperchannel/components/channel-nav/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component;\n  exports.default = Component.extend({\n\n    tagName: 'ul'\n\n  });\n});","define(\"hyperchannel/components/channel-nav/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cAkHBsyM\", \"block\": \"{\\\"symbols\\\":[\\\"space\\\",\\\"channel\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[22,[\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"li\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"h2\\\"],[8],[4,\\\"link-to\\\",[\\\"space\\\",[21,1,[]]],null,{\\\"statements\\\":[[1,[21,1,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[9],[0,\\\"\\\\n    \\\"],[6,\\\"ul\\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[21,1,[\\\"sortedChannels\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"li\\\"],[11,\\\"class\\\",[27,[[26,\\\"if\\\",[[21,2,[\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null],\\\" \\\",[21,2,[\\\"unreadMessagesClass\\\"]]]]],[8],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[21,2,[\\\"isUserChannel\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",[\\\"space.user-channel\\\",[21,1,[]],[21,2,[]]],null,{\\\"statements\\\":[[1,[21,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",[\\\"space.channel\\\",[21,1,[]],[21,2,[]]],null,{\\\"statements\\\":[[1,[21,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"      \\\"],[6,\\\"li\\\"],[8],[0,\\\"\\\\n        \\\"],[6,\\\"a\\\"],[10,\\\"class\\\",\\\"join-channel\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[21,0,[]],[26,\\\"action\\\",[[21,0,[]],[22,[\\\"joinChannel\\\"]],[21,1,[]]],null]]],[8],[0,\\\"+\\\"],[9],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n    \\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\" } });\n});","define('hyperchannel/components/date-headline/component', ['exports', 'moment', 'hyperchannel/config/environment'], function (exports, _moment, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var later = Ember.run.later;\n  var computed = Ember.computed;\n  var Component = Ember.Component;\n  exports.default = Component.extend({\n\n    classNames: ['date-headline'],\n\n    updateInterval: 120000, // 2 minutes\n\n    headline: computed('message.date', function () {\n      var _this = this;\n\n      var date = (0, _moment.default)(this.get('message.date'));\n\n      var scheduleUpdate = function scheduleUpdate() {\n        // don't schedule updates during testing, because it makes the tests time out\n        if (!_environment.default.environment === 'testing') {\n          later(function () {\n            _this.notifyPropertyChange('message.date');\n          }, _this.updateInterval);\n        }\n      };\n\n      if (date.isSame((0, _moment.default)(), 'day')) {\n        scheduleUpdate();\n        return 'Today';\n      }\n\n      if (date.isSame((0, _moment.default)().subtract(1, 'day'), 'day')) {\n        scheduleUpdate();\n        return 'Yesterday';\n      }\n\n      return this.get('message.date').toLocaleDateString();\n    })\n\n  });\n});","define(\"hyperchannel/components/date-headline/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"fHZkRLss\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"h3\\\"],[8],[1,[20,\\\"headline\\\"],false],[9],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/date-headline/template.hbs\" } });\n});","define('hyperchannel/components/from-elsewhere', ['exports', 'ember-elsewhere/components/from-elsewhere'], function (exports, _fromElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _fromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/illiquid-model\", [\"exports\", \"liquid-fire/components/illiquid-model\"], function (exports, _illiquidModel) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _illiquidModel.default;\n    }\n  });\n});","define('hyperchannel/components/link-to-username/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component;\n  var computed = Ember.computed;\n  var isPresent = Ember.isPresent;\n  exports.default = Component.extend({\n\n    username: null,\n    roles: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('roles', {\n        '@': 'op',\n        '%': 'half-op',\n        '+': 'voice'\n      });\n    },\n\n\n    role: computed('username', 'roles', function () {\n      var role = this.roles[this.username[0]];\n\n      if (isPresent(role)) {\n        return role;\n      }\n\n      return 'normal';\n    }),\n\n    usernameWithoutPrefix: computed('username', 'roles', function () {\n      var regex = RegExp('^[\\\\' + Object.keys(this.roles).join('\\\\') + ']');\n\n      return this.username.replace(regex, '');\n    })\n\n  });\n});","define(\"hyperchannel/components/link-to-username/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"awUlmJDV\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"link-to\\\",[\\\"space.user-channel\\\",[22,[\\\"usernameWithoutPrefix\\\"]]],[[\\\"class\\\"],[[22,[\\\"role\\\"]]]],{\\\"statements\\\":[[1,[20,\\\"username\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/link-to-username/template.hbs\" } });\n});","define(\"hyperchannel/components/liquid-bind\", [\"exports\", \"liquid-fire/components/liquid-bind\"], function (exports, _liquidBind) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidBind.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-child\", [\"exports\", \"liquid-fire/components/liquid-child\"], function (exports, _liquidChild) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidChild.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-container\", [\"exports\", \"liquid-fire/components/liquid-container\"], function (exports, _liquidContainer) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidContainer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-if\", [\"exports\", \"liquid-fire/components/liquid-if\"], function (exports, _liquidIf) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidIf.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-measured\", [\"exports\", \"liquid-fire/components/liquid-measured\"], function (exports, _liquidMeasured) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidMeasured.default;\n    }\n  });\n  Object.defineProperty(exports, \"measure\", {\n    enumerable: true,\n    get: function () {\n      return _liquidMeasured.measure;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-outlet\", [\"exports\", \"liquid-fire/components/liquid-outlet\"], function (exports, _liquidOutlet) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidOutlet.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-spacer\", [\"exports\", \"liquid-fire/components/liquid-spacer\"], function (exports, _liquidSpacer) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidSpacer.default;\n    }\n  });\n});","define('hyperchannel/components/liquid-sync', ['exports', 'liquid-fire/components/liquid-sync'], function (exports, _liquidSync) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _liquidSync.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-unless\", [\"exports\", \"liquid-fire/components/liquid-unless\"], function (exports, _liquidUnless) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidUnless.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-versions\", [\"exports\", \"liquid-fire/components/liquid-versions\"], function (exports, _liquidVersions) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidVersions.default;\n    }\n  });\n});","define('hyperchannel/components/message-chat-me/component', ['exports', 'hyperchannel/components/message-chat/component'], function (exports, _component) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _component.default.extend({\n    classNames: ['chat-message', 'chat-me-message']\n  });\n});","define(\"hyperchannel/components/message-chat-me/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9URaVBgI\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"span\\\"],[10,\\\"class\\\",\\\"username\\\"],[11,\\\"data-username\\\",[22,[\\\"message\\\",\\\"nickname\\\"]],null],[8],[1,[22,[\\\"message\\\",\\\"nickname\\\"]],false],[9],[0,\\\"\\\\n\\\"],[6,\\\"span\\\"],[10,\\\"class\\\",\\\"message\\\"],[8],[1,[20,\\\"formattedContent\\\"],false],[9],[0,\\\"\\\\n\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/message-chat-me/template.hbs\" } });\n});","define('hyperchannel/components/message-chat/component', ['exports', 'moment'], function (exports, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component;\n  var computed = Ember.computed;\n  var htmlSafe = Ember.String.htmlSafe;\n  exports.default = Component.extend({\n    tagName: 'div',\n    classNames: ['chat-message'],\n\n    message: null,\n\n    datetime: computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD[T]HH:mm');\n    }),\n\n    dateTitle: computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD [at] HH:mm');\n    }),\n\n    formattedContent: computed('message.content', function () {\n      var content = this.get('message.content');\n      var out = void 0;\n\n      // Images\n      if (content.match(/^(http)s?:\\/\\/.*(gif|png|jpg|jpeg)$/i)) {\n        out = '<br><a href=\"' + content + '\" target=\"_blank\" rel=\"nofollow noopener\">' + ('<img src=\"' + content + '\" class=\"from-image-url\" alt=\"' + content + '\">') + '</a>';\n      }\n      // Other links\n      else {\n          out = linkifyStr(content, {\n            linkAttributes: { rel: 'nofollow noopener' },\n            validate: {\n              url: function url(value) {\n                return (/^(http)s?:\\/\\//.test(value)\n                );\n              },\n              email: function email() {\n                return false;\n              }\n            }\n          });\n        }\n\n      // Colors\n      out = out.replace(/\\u0003(\\d+)/g, '<span class=\"color-$1\">').replace(/\"color-(\\d)\"/g, '\"color-0$1\"').replace(/\\u0002/g, '<span class=\"bold\">').replace(/\\u001D/g, '<span class=\"italic\">').replace(/\\u000f/g, '</span>');\n\n      return htmlSafe(out);\n    })\n  });\n});","define(\"hyperchannel/components/message-chat/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3OFQJjH1\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"span\\\"],[10,\\\"class\\\",\\\"chat-message__username\\\"],[11,\\\"data-username\\\",[22,[\\\"message\\\",\\\"nickname\\\"]],null],[8],[0,\\\"\\\\n  \\\"],[1,[22,[\\\"message\\\",\\\"nickname\\\"]],false],[0,\\\":\\\\n\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"time\\\"],[10,\\\"class\\\",\\\"chat-message__date\\\"],[11,\\\"datetime\\\",[20,\\\"datetime\\\"],null],[11,\\\"title\\\",[20,\\\"dateTitle\\\"],null],[8],[0,\\\"\\\\n  \\\"],[1,[26,\\\"moment-format\\\",[[22,[\\\"message\\\",\\\"date\\\"]],\\\"HH:mm\\\"],null],false],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"span\\\"],[10,\\\"class\\\",\\\"chat-message__message\\\"],[8],[0,\\\"\\\\n  \\\"],[1,[20,\\\"formattedContent\\\"],false],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/message-chat/template.hbs\" } });\n});","define('hyperchannel/components/modal-target/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component;\n  exports.default = Component.extend({\n    modalAnimation: function modalAnimation() {\n      return this.lookup('explode').call(this, {\n        pick: '.modal-background',\n        use: ['fade', { maxOpacity: 0.5 }]\n      }, {\n        pick: '.modal-dialog',\n        use: 'scale'\n      });\n    },\n\n\n    actions: {\n      outsideClick: function outsideClick(modal) {\n        if (modal && modal.onOutsideClick) {\n          modal.onOutsideClick();\n        }\n      }\n    }\n\n  });\n});","define(\"hyperchannel/components/modal-target/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dwaeSRFX\", \"block\": \"{\\\"symbols\\\":[\\\"modal\\\",\\\"currentModal\\\"],\\\"statements\\\":[[4,\\\"from-elsewhere\\\",null,[[\\\"name\\\"],[\\\"modal\\\"]],{\\\"statements\\\":[[4,\\\"liquid-bind\\\",[[21,1,[]]],[[\\\"containerless\\\",\\\"use\\\"],[true,[22,[\\\"modalAnimation\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[21,2,[]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"modal-container\\\"],[8],[0,\\\"\\\\n        \\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"modal-background\\\"],[11,\\\"onclick\\\",[26,\\\"action\\\",[[21,0,[]],\\\"outsideClick\\\",[21,2,[]]],null],null],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[8],[9],[0,\\\"\\\\n        \\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"modal-dialog\\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[21,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[26,\\\"component\\\",[[21,2,[\\\"body\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[26,\\\"component\\\",[[21,2,[]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[9],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/modal-target/template.hbs\" } });\n});","define('hyperchannel/components/multiple-from-elsewhere', ['exports', 'ember-elsewhere/components/multiple-from-elsewhere'], function (exports, _multipleFromElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _multipleFromElsewhere.default;\n    }\n  });\n});","define('hyperchannel/components/notification-topic-change/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component;\n  exports.default = Component.extend({\n\n    tagName: 'div',\n    classNames: ['topic-change-notification']\n\n  });\n});","define(\"hyperchannel/components/notification-topic-change/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NgPJwxHa\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"Topic was changed to \\\\\\\"\\\"],[1,[22,[\\\"message\\\",\\\"content\\\"]],false],[0,\\\"\\\\\\\" by \\\"],[6,\\\"span\\\"],[10,\\\"class\\\",\\\"username\\\"],[11,\\\"data-username\\\",[22,[\\\"message\\\",\\\"nickname\\\"]],null],[8],[1,[22,[\\\"message\\\",\\\"nickname\\\"]],false],[9],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/notification-topic-change/template.hbs\" } });\n});","define('hyperchannel/components/space-setting-modal/component', ['exports', 'hyperchannel/models/space'], function (exports, _space) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component;\n  exports.default = Component.extend({\n\n    settings: null,\n    space: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      // create a clone of the settings that we can operate on\n      var space = _space.default.create();\n      space.setProperties(this.settings.serialize());\n      this.set('space', space);\n    },\n\n\n    actions: {\n      save: function save() {\n        this.onSave(this.space);\n      },\n      cancel: function cancel() {\n        this.onCancel();\n      }\n    }\n\n  });\n});","define(\"hyperchannel/components/space-setting-modal/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"4hI/2tEF\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"h1\\\"],[8],[0,\\\"Space Setting\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"form\\\"],[10,\\\"name\\\",\\\"add-space\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"save\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"space\\\",\\\"protocol\\\"]],\\\"required\\\",\\\"IRC\\\"]]],false],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"space\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"space\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"space\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[26,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[22,[\\\"space\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled-modal\\\"]]],false],[0,\\\"\\\\n    \\\"],[6,\\\"label\\\"],[10,\\\"for\\\",\\\"tls-enabled-modal\\\"],[8],[0,\\\"Secure (TLS)\\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[22,[\\\"space\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[26,\\\"input\\\",null,[[\\\"type\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"password\\\",[22,[\\\"space\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"space\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"input\\\"],[10,\\\"value\\\",\\\"Save\\\"],[10,\\\"type\\\",\\\"submit\\\"],[8],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"button\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"cancel\\\"]],[8],[0,\\\"Cancel\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/space-setting-modal/template.hbs\" } });\n});","define('hyperchannel/components/to-elsewhere', ['exports', 'ember-elsewhere/components/to-elsewhere'], function (exports, _toElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toElsewhere.default;\n    }\n  });\n});","define('hyperchannel/components/web-push-subscription/component', ['exports', 'hyperchannel/utils/url-base64-to-uint8-array'], function (exports, _urlBase64ToUint8Array) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _asyncToGenerator(fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step(\"next\", value);\n            }, function (err) {\n              step(\"throw\", err);\n            });\n          }\n        }\n\n        return step(\"next\");\n      });\n    };\n  }\n\n  var Component = Ember.Component;\n  var computed = Ember.computed;\n  exports.default = Component.extend({\n\n    botkaURL: null,\n    username: null,\n    subscribed: false,\n\n    webPushBaseURL: computed('botkaURL', function () {\n      return this.botkaURL + '/web-push';\n    }),\n\n    init: function init() {\n      var _this = this;\n\n      this._super.apply(this, arguments);\n\n      navigator.serviceWorker.ready.then(function (registration) {\n        return registration.pushManager.getSubscription();\n      }).then(function (subscription) {\n        if (subscription) {\n          _this.set('subscribed', true);\n        }\n      });\n    },\n\n\n    actions: {\n      subscribe: function subscribe() {\n        var _this2 = this;\n\n        navigator.serviceWorker.ready.then(function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(registration) {\n            var response, vapidPublicKey, convertedVapidKey;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return fetch(this.webPushBaseURL + '/vapid-public-key');\n\n                  case 2:\n                    response = _context.sent;\n                    _context.next = 5;\n                    return response.text();\n\n                  case 5:\n                    vapidPublicKey = _context.sent;\n\n                    // Chrome doesn't accept the base64-encoded (string) vapidPublicKey yet\n                    convertedVapidKey = (0, _urlBase64ToUint8Array.default)(vapidPublicKey);\n                    // Subscribe the user\n\n                    return _context.abrupt('return', registration.pushManager.subscribe({\n                      userVisibleOnly: true,\n                      applicationServerKey: convertedVapidKey\n                    }));\n\n                  case 8:\n                  case 'end':\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }().bind(this)).then(function (subscription) {\n          console.debug('Subscribed', subscription.endpoint);\n          return fetch(_this2.webPushBaseURL + '/register', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n              user: _this2.username,\n              subscription: subscription\n            })\n          });\n        }).then(this.set('subscribed', true));\n      },\n      unsubscribe: function unsubscribe() {\n        var _this3 = this;\n\n        navigator.serviceWorker.ready.then(function (registration) {\n          return registration.pushManager.getSubscription();\n        }).then(function (subscription) {\n          return subscription.unsubscribe().then(function () {\n            console.debug('Unsubscribed', subscription.endpoint);\n            return fetch(_this3.webPushBaseURL + '/unregister', {\n              method: 'post',\n              headers: { 'Content-type': 'application/json' },\n              body: JSON.stringify({ subscription: subscription })\n            });\n          });\n        }).then(this.set('subscribed', false));\n      }\n    }\n\n  });\n});","define(\"hyperchannel/components/web-push-subscription/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"oy6lwHHX\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"p\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"i\\\"],[8],[0,\\\"username:\\\"],[9],[0,\\\" \\\"],[1,[20,\\\"username\\\"],false],[6,\\\"br\\\"],[8],[9],[0,\\\"\\\\n  \\\"],[6,\\\"i\\\"],[8],[0,\\\"base URL:\\\"],[9],[0,\\\" \\\"],[1,[20,\\\"webPushBaseURL\\\"],false],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,[\\\"subscribed\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[6,\\\"button\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"unsubscribe\\\"]],[8],[0,\\\"Disable push notifications\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[6,\\\"button\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"subscribe\\\"]],[8],[0,\\\"Receive push notifications\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[9]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/web-push-subscription/template.hbs\" } });\n});","define('hyperchannel/controllers/application', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = Ember.Controller;\n  var alias = Ember.computed.alias;\n  var service = Ember.inject.service;\n  exports.default = Controller.extend({\n\n    coms: service(),\n    spaces: alias('coms.spaces'),\n\n    showGlobalMenu: false,\n    showChannelMenu: false\n\n  });\n});","define('hyperchannel/controllers/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = Ember.Controller;\n  var controller = Ember.inject.controller;\n  exports.default = Controller.extend({\n\n    application: controller()\n\n  });\n});","define('hyperchannel/controllers/settings', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = Ember.Controller;\n  var controller = Ember.inject.controller;\n  var service = Ember.inject.service;\n  var notEmpty = Ember.computed.notEmpty;\n  exports.default = Controller.extend({\n\n    application: controller(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    newSpace: null,\n    selectedSpacePreset: null,\n\n    showSpaceSettingModal: notEmpty('selectedSpacePreset'),\n\n    actions: {\n      addSpaceFromPreset: function addSpaceFromPreset(preset) {\n        this.set('selectedSpacePreset', preset);\n      },\n      saveSpace: function saveSpace(space) {\n        var _this = this;\n\n        this.set('selectedSpacePreset', null);\n\n        this.storage.saveSpace(space).then(function () {\n          _this.coms.connectAndAddSpace(space);\n        });\n      }\n    }\n\n  });\n});","define('hyperchannel/controllers/space', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = Ember.Controller;\n  exports.default = Controller.extend({});\n});","define('hyperchannel/controllers/space/base_channel', ['exports', 'hyperchannel/models/message'], function (exports, _message) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = Ember.Controller;\n  var controller = Ember.inject.controller;\n  var service = Ember.inject.service;\n  var isPresent = Ember.isPresent;\n  var Logger = Ember.Logger;\n  exports.default = Controller.extend({\n\n    newMessage: null,\n    space: controller(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    createMessage: function createMessage(message, type) {\n      return _message.default.create({\n        type: type,\n        date: new Date(),\n        nickname: this.get('space.model.server.nickname'),\n        content: message\n      });\n    },\n\n\n    actions: {\n      sendMessage: function sendMessage(newMessage) {\n        var message = this.createMessage(newMessage, 'message-chat');\n\n        this.coms.transferMessage(this.get('space.model'), this.model, message.get('content'));\n\n        this.get('model.messages').pushObject(message);\n        this.set('newMessage', null);\n      },\n\n      executeCommand: function executeCommand(newMessage) {\n        var availableCommands = [\"help\", \"join\", \"leave\", \"me\", \"msg\", \"part\", \"topic\"];\n        var commandText = newMessage.substr(1);\n        var commandSplitted = commandText.split(\" \");\n        var command = commandSplitted[0];\n\n        if (availableCommands.includes(command.toLowerCase())) {\n          this.send(command + 'Command', commandSplitted.slice(1));\n        } else {\n          Logger.warn('[channel]', 'Unknown command', commandText);\n        }\n\n        this.set('newMessage', null);\n      },\n\n      joinCommand: function joinCommand(args) {\n        var space = this.get('space.model');\n        var channel = this.coms.createChannel(space, args[0]);\n        this.storage.saveSpace(space);\n        this.transitionToRoute('space.channel', space, channel);\n      },\n\n      partCommand: function partCommand() {\n        var space = this.get('space.model');\n        var channelName = this.get('model.name');\n        this.coms.removeChannel(space, channelName);\n        var lastChannel = space.get('channels.lastObject');\n        if (isPresent(lastChannel)) {\n          this.transitionToRoute('space.channel', space, lastChannel);\n        } else {\n          this.transitionToRoute('space', space);\n        }\n      },\n\n      leaveCommand: function leaveCommand() {\n        this.send('partCommand');\n      },\n\n      helpCommand: function helpCommand() {},\n\n      meCommand: function meCommand(args) {\n        var newMessage = args.join(' ');\n\n        var message = this.createMessage(newMessage, 'message-chat-me');\n\n        this.coms.transferMeMessage(this.get('space.model'), this.get('model.sockethubChannelId'), message.get('content'));\n\n        this.get('model.messages').pushObject(message);\n      },\n\n      msgCommand: function msgCommand(args) {\n        var username = args.shift();\n        this.coms.createUserChannel(this.get('space.model'), username);\n        // TODO fix this, sockethub sends a failure event with error\n        // \"TypeError: Cannot read property 'indexOf' of undefined\"\n        // this.get('coms').transferMessage(this.get('space.model'), username, args.join(' '));\n      },\n\n      topicCommand: function topicCommand(args) {\n        var channel = this.model;\n        var topic = args.join(' ');\n\n        this.coms.changeTopic(this.get('space.model'), channel, topic);\n      }\n    }\n\n  });\n});","define('hyperchannel/controllers/space/channel', ['exports', 'hyperchannel/controllers/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({});\n});","define('hyperchannel/controllers/space/user_channel', ['exports', 'hyperchannel/controllers/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({});\n});","define('hyperchannel/ember-gestures/recognizers/pan', ['exports', 'ember-gestures/recognizers/pan'], function (exports, _pan) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pan.default;\n});","define('hyperchannel/ember-gestures/recognizers/pinch', ['exports', 'ember-gestures/recognizers/pinch'], function (exports, _pinch) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pinch.default;\n});","define('hyperchannel/ember-gestures/recognizers/press', ['exports', 'ember-gestures/recognizers/press'], function (exports, _press) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _press.default;\n});","define('hyperchannel/ember-gestures/recognizers/rotate', ['exports', 'ember-gestures/recognizers/rotate'], function (exports, _rotate) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _rotate.default;\n});","define('hyperchannel/ember-gestures/recognizers/swipe', ['exports', 'ember-gestures/recognizers/swipe'], function (exports, _swipe) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _swipe.default;\n});","define('hyperchannel/ember-gestures/recognizers/swipeleft', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    include: [],\n    exclude: [],\n    options: { threshold: 25, direction: Hammer.DIRECTION_LEFT },\n    eventName: 'swipeleft',\n    recognizer: 'swipe'\n  };\n});","define('hyperchannel/ember-gestures/recognizers/swiperight', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    include: [],\n    exclude: [],\n    options: { threshold: 25, direction: Hammer.DIRECTION_RIGHT },\n    eventName: 'swiperight',\n    recognizer: 'swipe'\n  };\n});","define('hyperchannel/ember-gestures/recognizers/tap', ['exports', 'ember-gestures/recognizers/tap'], function (exports, _tap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _tap.default;\n    }\n  });\n});","define('hyperchannel/ember-gestures/recognizers/vertical-pan', ['exports', 'ember-gestures/recognizers/vertical-pan'], function (exports, _verticalPan) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _verticalPan.default;\n    }\n  });\n});","define('hyperchannel/ember-gestures/recognizers/vertical-swipe', ['exports', 'ember-gestures/recognizers/vertical-swipe'], function (exports, _verticalSwipe) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _verticalSwipe.default;\n    }\n  });\n});","define('hyperchannel/event_dispatcher', ['exports', 'ember-gestures/event_dispatcher', 'hyperchannel/config/environment'], function (exports, _event_dispatcher, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var merge = Ember.assign || Ember.merge;\n\n  var gestures = merge({}, {\n    emberUseCapture: false,\n    removeTracking: false,\n    useFastPaths: false\n  });\n  gestures = merge(gestures, _environment.default.gestures);\n\n  exports.default = _event_dispatcher.default.extend({\n    useCapture: gestures.emberUseCapture,\n    removeTracking: gestures.removeTracking,\n    useFastPaths: gestures.useFastPaths\n  });\n});","define('hyperchannel/helpers/app-version', ['exports', 'hyperchannel/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  var version = _environment.default.APP.version;\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (hash.hideSha) {\n      return version.match(_regexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_regexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('hyperchannel/helpers/is-after', ['exports', 'ember-moment/helpers/is-after'], function (exports, _isAfter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _isAfter.default;\n    }\n  });\n});","define('hyperchannel/helpers/is-before', ['exports', 'ember-moment/helpers/is-before'], function (exports, _isBefore) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _isBefore.default;\n    }\n  });\n});","define('hyperchannel/helpers/is-between', ['exports', 'ember-moment/helpers/is-between'], function (exports, _isBetween) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _isBetween.default;\n    }\n  });\n});","define('hyperchannel/helpers/is-same-or-after', ['exports', 'ember-moment/helpers/is-same-or-after'], function (exports, _isSameOrAfter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _isSameOrAfter.default;\n    }\n  });\n});","define('hyperchannel/helpers/is-same-or-before', ['exports', 'ember-moment/helpers/is-same-or-before'], function (exports, _isSameOrBefore) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _isSameOrBefore.default;\n    }\n  });\n});","define('hyperchannel/helpers/is-same', ['exports', 'ember-moment/helpers/is-same'], function (exports, _isSame) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _isSame.default;\n    }\n  });\n});","define('hyperchannel/helpers/lf-lock-model', ['exports', 'liquid-fire/helpers/lf-lock-model'], function (exports, _lfLockModel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _lfLockModel.default;\n    }\n  });\n  Object.defineProperty(exports, 'lfLockModel', {\n    enumerable: true,\n    get: function () {\n      return _lfLockModel.lfLockModel;\n    }\n  });\n});","define('hyperchannel/helpers/lf-or', ['exports', 'liquid-fire/helpers/lf-or'], function (exports, _lfOr) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _lfOr.default;\n    }\n  });\n  Object.defineProperty(exports, 'lfOr', {\n    enumerable: true,\n    get: function () {\n      return _lfOr.lfOr;\n    }\n  });\n});","define('hyperchannel/helpers/moment-add', ['exports', 'ember-moment/helpers/moment-add'], function (exports, _momentAdd) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentAdd.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-calendar', ['exports', 'ember-moment/helpers/moment-calendar'], function (exports, _momentCalendar) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentCalendar.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-diff', ['exports', 'ember-moment/helpers/moment-diff'], function (exports, _momentDiff) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentDiff.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-duration', ['exports', 'ember-moment/helpers/moment-duration'], function (exports, _momentDuration) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentDuration.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-format', ['exports', 'ember-moment/helpers/moment-format'], function (exports, _momentFormat) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentFormat.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-from-now', ['exports', 'ember-moment/helpers/moment-from-now'], function (exports, _momentFromNow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentFromNow.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-from', ['exports', 'ember-moment/helpers/moment-from'], function (exports, _momentFrom) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentFrom.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-subtract', ['exports', 'ember-moment/helpers/moment-subtract'], function (exports, _momentSubtract) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentSubtract.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-to-date', ['exports', 'ember-moment/helpers/moment-to-date'], function (exports, _momentToDate) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentToDate.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-to-now', ['exports', 'ember-moment/helpers/moment-to-now'], function (exports, _momentToNow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentToNow.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-to', ['exports', 'ember-moment/helpers/moment-to'], function (exports, _momentTo) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentTo.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _unix) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _unix.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment', ['exports', 'ember-moment/helpers/moment'], function (exports, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _moment.default;\n    }\n  });\n});","define('hyperchannel/helpers/now', ['exports', 'ember-moment/helpers/now'], function (exports, _now) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _now.default;\n    }\n  });\n});","define('hyperchannel/helpers/route-action', ['exports', 'ember-route-action-helper/helpers/route-action'], function (exports, _routeAction) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _routeAction.default;\n    }\n  });\n});","define('hyperchannel/helpers/unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _unix) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _unix.default;\n    }\n  });\n});","define('hyperchannel/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'hyperchannel/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _config$APP = _environment.default.APP,\n      name = _config$APP.name,\n      version = _config$APP.version;\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('hyperchannel/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('hyperchannel/initializers/ember-hammertime', ['exports', 'ember-hammertime/components/component'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-hammertime',\n    initialize: function initialize() {}\n  };\n});","define('hyperchannel/initializers/export-application-global', ['exports', 'hyperchannel/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('hyperchannel/initializers/hammer', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'hammer',\n\n    initialize: function initialize() {\n      // Enable text selection.\n      // It's disabled by default to improve UX on desktop, so text wouldn't\n      // be selected when panning.\n      delete Hammer.defaults.cssProps.userSelect;\n    }\n  };\n});","define(\"hyperchannel/initializers/liquid-fire\", [\"exports\", \"liquid-fire/ember-internals\", \"liquid-fire/velocity-ext\"], function (exports, _emberInternals) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  (0, _emberInternals.initialize)();\n\n  exports.default = {\n    name: 'liquid-fire',\n    initialize: function initialize() {}\n  };\n});","define('hyperchannel/initializers/sockethub', ['exports', 'hyperchannel/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  // TODO move settings into config file\n  var sockethub = new SockethubClient(io(_environment.default.sockethubURL, { path: '/sockethub' })); /* global SockethubClient */\n  /* global io */\n  exports.default = {\n    name: 'sockethub',\n\n    initialize: function initialize(app) {\n      app.register('sockethub:client', sockethub, { instantiate: false, singleton: true });\n\n      app.inject('controller', 'sockethub', 'sockethub:client');\n      app.inject('route', 'sockethub', 'sockethub:client');\n      app.inject('component', 'sockethub', 'sockethub:client');\n      app.inject('service', 'sockethub', 'sockethub:client');\n    }\n  };\n});","define('hyperchannel/instance-initializers/ember-gestures', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var getOwner = Ember.getOwner;\n  exports.default = {\n    name: 'ember-gestures',\n\n    initialize: function initialize(instance) {\n      if (typeof instance.lookup === \"function\") {\n        instance.lookup('service:-gestures');\n      } else {\n        // This can be removed when we no-longer support ember 1.12 and 1.13\n        getOwner(instance).lookup('service:-gestures');\n      }\n    }\n\n  };\n});","define('hyperchannel/instance-initializers/remotestorage', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize(appInstance) {\n    var storage = appInstance.lookup('service:remotestorage');\n    var remoteStorage = storage.get('rs');\n\n    // Add to window global for debugging/development\n    window.remoteStorage = remoteStorage;\n\n    var rsEvents = ['ready', 'not-connected', 'connected', 'disconnected', 'error', 'features-loaded', 'connecting', 'authing', 'wire-busy', 'wire-done', 'network-offline', 'network-online'];\n\n    rsEvents.forEach(function (evt) {\n      remoteStorage.on(evt, function () {\n        return console.debug('[remotestorage] RS event: ' + evt);\n      });\n    });\n  }\n\n  exports.default = {\n    name: 'remotestorage',\n    initialize: initialize\n  };\n});","define('hyperchannel/models/base_channel', ['exports', 'hyperchannel/models/message', 'moment'], function (exports, _message, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var EmberObject = Ember.Object;\n  var computed = Ember.computed;\n  var isPresent = Ember.isPresent;\n  exports.default = EmberObject.extend({\n\n    space: null,\n    name: '',\n    userList: null,\n    messages: null,\n    connected: false,\n    sockethubChannelId: null,\n    topic: null,\n    unreadMessages: false,\n    unreadMentions: false,\n    visible: false, // Current/active channel\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('messages', []);\n      this.set('userList', []);\n    },\n\n\n    isLogged: computed('space.loggedChannels.[]', 'name', function () {\n      var _this = this;\n\n      var loggedChannel = this.get('space.loggedChannels').find(function (channelName) {\n        return channelName === _this.name;\n      });\n\n      return isPresent(loggedChannel);\n    }),\n\n    slug: computed('name', function () {\n      // This could be based on server type in the future. E.g. IRC would be\n      // server URL, while Campfire would be another id.\n      return this.name.replace(/#/g, '');\n    }),\n\n    unreadMessagesClass: computed('visible', 'unreadMessages', 'unreadMentions', function () {\n      if (this.visible || !this.unreadMessages) {\n        return null;\n      }\n      return this.unreadMentions ? 'unread-mentions' : 'unread-messages';\n    }),\n\n    sortedMessages: computed('messages.@each.date', function () {\n      return this.messages.sortBy('date');\n    }),\n\n    addDateHeadline: function addDateHeadline(newMessage) {\n      var headlineDate = (0, _moment.default)(newMessage.get('date')).startOf('day').toDate();\n\n      var existingDateHeadline = this.messages.find(function (message) {\n        return message.get('type') === 'date-headline' && message.get('date').toString() === headlineDate.toString();\n      });\n\n      if (existingDateHeadline) {\n        return;\n      }\n\n      var dateMessage = _message.default.create({ type: 'date-headline', date: headlineDate });\n      this.messages.pushObject(dateMessage);\n    },\n    addMessage: function addMessage(message) {\n      this.addDateHeadline(message);\n\n      this.messages.pushObject(message);\n\n      if (!this.visible) {\n        this.set('unreadMessages', true);\n        if (message.get('content').match(this.get('space.userNickname'))) {\n          this.set('unreadMentions', true);\n        }\n      }\n    },\n    addUser: function addUser(username) {\n      if (!this.userList.includes(username)) {\n        this.userList.pushObject(username);\n      }\n    },\n    removeUser: function removeUser(username) {\n      this.userList.removeObject(username);\n    }\n  });\n});","define('hyperchannel/models/channel', ['exports', 'hyperchannel/models/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var htmlSafe = Ember.String.htmlSafe;\n  var computed = Ember.computed;\n  exports.default = _base_channel.default.extend({\n\n    searchedPreviousLogsUntilDate: null,\n\n    formattedTopic: computed('topic', function () {\n      if (this.topic !== null) {\n        var topic = linkifyStr(this.topic, {\n          defaultProtocol: 'https',\n          linkAttributes: { rel: 'nofollow' }\n        });\n        return new htmlSafe(topic);\n      } else {\n        return '';\n      }\n    })\n\n  });\n});","define('hyperchannel/models/message', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var EmberObject = Ember.Object;\n  exports.default = EmberObject.extend({\n\n    type: null,\n    date: null,\n    nickname: null,\n    content: null\n\n  });\n});","define('hyperchannel/models/space', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var alias = Ember.computed.alias;\n  var sort = Ember.computed.sort;\n  var EmberObject = Ember.Object;\n  var computed = Ember.computed;\n  var isPresent = Ember.isPresent;\n  exports.default = EmberObject.extend({\n\n    name: null,\n    protocol: 'IRC',\n    server: null,\n    channels: null, // Channel instances\n    botkaURL: null, // Kosmos bot\n\n    // Keep a list of all old sockethubPersonIds, because there might\n    // still be coming events from Sockethub for those.\n    previousSockethubPersonIds: null,\n\n    channelSorting: null,\n    sortedChannels: sort('channels', 'channelSorting'),\n\n    init: function init() {\n      this.set('channelSorting', ['name']);\n      this.set('channels', []);\n      this.set('previousSockethubPersonIds', []);\n\n      this.set('server', {\n        hostname: null,\n        port: 7000,\n        secure: true,\n        username: null,\n        password: null,\n        nickname: null,\n        nickServ: {\n          password: null\n        }\n      });\n\n      this._super.apply(this, arguments);\n    },\n\n\n    channelNames: computed('channels.@each.name', function () {\n      return this.channels.mapBy('name');\n    }),\n\n    sockethubChannelIds: computed('channels.@each.sockethubChannelId', function () {\n      return this.channels.mapBy('sockethubChannelId');\n    }),\n\n    loggedChannels: computed('name', 'protocol', function () {\n      if (this.name === 'Freenode' && this.protocol === 'IRC') {\n        return ['#5apps', '#kosmos', '#kosmos-dev', '#remotestorage', '#hackerbeach', '#unhosted', '#sockethub', '#opensourcedesign', '#openknot', '#emberjs', '#indieweb', '#mastodon'];\n      } else {\n        return [];\n      }\n    }),\n\n    userNickname: alias('server.nickname'),\n\n    updateUsername: function updateUsername(username) {\n      // keep track of old name for later reference\n      this.previousSockethubPersonIds.pushObject(this.sockethubPersonId);\n\n      switch (this.protocol) {\n        case 'IRC':\n          this.set('server.nickname', username);\n          break;\n        case 'XMPP':\n          this.set('server.username', username);\n          break;\n      }\n    },\n\n\n    sockethubPersonId: computed('protocol', 'server.{hostname,username,nickname}', function () {\n      var personID = void 0;\n      switch (this.protocol) {\n        case 'IRC':\n          // TODO - remove the use of any URI protocol part\n          personID = 'irc://' + this.get('server.nickname') + '@' + this.get('server.hostname');\n          break;\n        case 'XMPP':\n          // TODO - why isn't the full JID user+host+resource?\n          personID = this.get('server.username') + '/hyperchannel';\n          break;\n      }\n      return personID;\n    }),\n\n    serialize: function serialize() {\n      var _this = this;\n\n      var serialized = {\n        id: this.id || this.name.dasherize(),\n        name: this.name,\n        protocol: this.protocol,\n        server: {\n          hostname: this.get('server.hostname'),\n          port: parseInt(this.get('server.port'), 10),\n          secure: this.get('server.secure'),\n          nickname: this.get('server.nickname')\n        },\n        channels: this.channelNames || [],\n        botkaURL: this.botkaURL || null\n      };\n\n      ['username', 'password', 'nickname'].forEach(function (prop) {\n        // TODO credentials need to be encrypted and probably stored elsewhere\n        if (isPresent(_this.get('server.' + prop))) {\n          serialized.server[prop] = _this.get('server.' + prop);\n        }\n      });\n\n      return serialized;\n    }\n  });\n});","define('hyperchannel/models/user_channel', ['exports', 'hyperchannel/models/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    isUserChannel: true\n\n  });\n});","define('hyperchannel/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('hyperchannel/router', ['exports', 'hyperchannel/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var EmberRouter = Ember.Router;\n\n\n  var Router = EmberRouter.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('space', { path: '/:id' }, function () {\n      this.route('channel', { path: '/channel/:slug' });\n      this.route('user-channel', { path: '/user/:slug' });\n    });\n\n    this.route('settings');\n  });\n\n  exports.default = Router;\n});","define('hyperchannel/routes/application', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = Ember.Route;\n  var service = Ember.inject.service;\n  var isEmpty = Ember.isEmpty;\n  exports.default = Route.extend({\n    logger: service(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    beforeModel: function beforeModel() {\n      this._super.apply(this, arguments);\n      // See a list of allowed types in logger.js\n      // Add or remove all your log types here:\n      // this.get('logger').add('message');\n      // this.get('logger').remove('join');\n      // this.get('logger').disable();\n      // this.get('logger').enable();\n    },\n    model: function model() {\n      this.coms.setupListeners();\n      return this.coms.instantiateSpacesAndChannels();\n    },\n\n\n    actions: {\n      menu: function menu(which, what) {\n        var menuProp = 'show' + which.capitalize() + 'Menu';\n\n        switch (what) {\n          case 'show':\n            this.controller.set(menuProp, true);\n            break;\n          case 'hide':\n            this.controller.set(menuProp, false);\n            break;\n          case 'toggle':\n            this.controller.toggleProperty(menuProp);\n            break;\n        }\n      },\n      openNewChannel: function openNewChannel(space) {\n        var channelName = window.prompt('Join channel');\n\n        if (isEmpty(channelName)) {\n          return;\n        }\n\n        if (space.get('protocol') === 'IRC' && !channelName.match(/^#/)) {\n          channelName = '#' + channelName;\n        }\n        var channel = this.coms.createChannel(space, channelName);\n        this.storage.saveSpace(space);\n        this.transitionTo('space.channel', space, channel);\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/index', ['exports', 'ember-local-storage', 'hyperchannel/config/environment'], function (exports, _emberLocalStorage, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = Ember.Route;\n  exports.default = Route.extend({\n\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n\n    redirect: function redirect() {\n      var currentSpace = this.get('userSettings.currentSpace') || _environment.default.defaultSpaceId;\n      var currentChannel = this.get('userSettings.currentChannel') || 'kosmos';\n\n      if (currentSpace && currentChannel) {\n        this.transitionTo('space.channel', currentSpace, currentChannel);\n      }\n    }\n  });\n});","define('hyperchannel/routes/settings', ['exports', 'hyperchannel/models/space', 'hyperchannel/config/environment'], function (exports, _space, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = Ember.Route;\n  var service = Ember.inject.service;\n  var isEmpty = Ember.isEmpty;\n  var RSVP = Ember.RSVP;\n  var Logger = Ember.Logger;\n  exports.default = Route.extend({\n\n    storage: service('remotestorage'),\n    coms: service(),\n\n    model: function model() {\n      var rsKosmos = this.get('storage.rs').kosmos;\n\n      var spaces = rsKosmos.spaces.getAll().then(function (res) {\n        var col = [];\n        if (isEmpty(res)) {\n          return col;\n        }\n        Object.keys(res).forEach(function (id) {\n          var space = _space.default.create();\n          space.setProperties(res[id]);\n          col.push(space);\n        });\n        return col;\n      }, function (e) {\n        Logger.error(e);\n      });\n\n      return RSVP.hash({\n        spaces: spaces,\n        spacePresets: _environment.default.spacePresets.map(function (preset) {\n          var space = _space.default.create();\n          space.setProperties(preset);\n          return space;\n        })\n      });\n    },\n    setupController: function setupController(controller) {\n      this._super.apply(this, arguments);\n      controller.set('newSpace', _space.default.create());\n    },\n\n\n    actions: {\n      addSpace: function addSpace() {\n        var _this = this;\n\n        var newSpace = this.controller.get('newSpace');\n        newSpace.set('id', newSpace.get('name').dasherize());\n\n        this.storage.saveSpace(newSpace).then(function () {\n          _this.coms.connectAndAddSpace(newSpace);\n          _this.modelFor('settings').spaces.pushObject(newSpace);\n        }, function (e) {\n          Logger.error('error saving in RS', newSpace, e);\n        });\n      },\n      removeSpace: function removeSpace(space) {\n        var _this2 = this;\n\n        this.storage.removeSpace(space).then(function () {\n          _this2.modelFor('settings').spaces.removeObject(space);\n        }, function (e) {\n          Logger.error('error deleting from RS', space, e);\n        });\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/space', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var service = Ember.inject.service;\n  var Route = Ember.Route;\n  exports.default = Route.extend({\n\n    coms: service(),\n\n    model: function model(params) {\n      return this.coms.get('spaces').findBy('id', params.id);\n    }\n\n  });\n});","define('hyperchannel/routes/space/base_channel', ['exports', 'ember-local-storage'], function (exports, _emberLocalStorage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var $ = Ember.$;\n  var Route = Ember.Route;\n  var service = Ember.inject.service;\n  var scheduleOnce = Ember.run.scheduleOnce;\n  var later = Ember.run.later;\n\n\n  function focusMessageInput() {\n    if (window.innerWidth > 900) {\n      $('input#message-field').focus();\n    } else {\n      // Don't auto-focus on small screens\n    }\n  }\n\n  exports.default = Route.extend({\n    coms: service(),\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n\n    model: function model(params) {\n      var space = this.modelFor('space');\n      var channel = space.get('channels').findBy('slug', params.slug);\n\n      if (!channel) {\n        channel = this.createChannelOrUserChannel(space, params.slug);\n      }\n\n      return channel;\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n\n      scheduleOnce('afterRender', function () {\n        focusMessageInput();\n      });\n    },\n\n\n    actions: {\n      didTransition: function didTransition() {\n        var _this = this;\n\n        var space = this.modelFor('space');\n        var channel = this.controller.get('model');\n\n        this.set('userSettings.currentSpace', space.get('id'));\n        this.set('userSettings.currentChannel', channel.get('slug'));\n\n        // Mark all other channels as inactive/invisible\n        this.get('coms.spaces').forEach(function (space) {\n          space.get('channels').setEach('visible', false);\n        });\n\n        // Mark channel as active/visible\n        channel.set('visible', true);\n\n        // Mark unread messages as read\n        channel.set('unreadMessages', false);\n        channel.set('unreadMentions', false);\n\n        later(this, function () {\n          return _this.send('menu', 'global', 'hide');\n        }, 500);\n      }\n    }\n\n  });\n});","define(\"hyperchannel/routes/space/channel\", [\"exports\", \"hyperchannel/routes/space/base_channel\"], function (exports, _base_channel) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.coms.createChannel(space, \"#\" + channelName);\n    }\n\n  });\n});","define('hyperchannel/routes/space/user_channel', ['exports', 'hyperchannel/routes/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.coms.createUserChannel(space, channelName);\n    }\n\n  });\n});","define('hyperchannel/services/-gestures', ['exports', 'hyperchannel/config/environment', 'ember-gestures/services/-gestures'], function (exports, _environment, _gestures) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var merge = Ember.assign || Ember.merge;\n\n  var gestures = merge({}, {\n    useCapture: false\n  });\n  gestures = merge(gestures, _environment.default.gestures);\n\n  exports.default = _gestures.default.extend({\n    useCapture: gestures.useCapture\n  });\n});","define('hyperchannel/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define('hyperchannel/services/coms', ['exports', 'hyperchannel/models/space', 'hyperchannel/models/channel', 'hyperchannel/models/user_channel', 'hyperchannel/models/message', 'hyperchannel/config/environment', 'moment', 'ember-local-storage'], function (exports, _space, _channel, _user_channel, _message, _environment, _moment, _emberLocalStorage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var Service = Ember.Service;\n  var service = Ember.inject.service;\n  var RSVP = Ember.RSVP;\n  var isPresent = Ember.isPresent;\n  var isEmpty = Ember.isEmpty;\n  var get = Ember.get;\n  exports.default = Service.extend({\n\n    // Utils\n    ajax: service(),\n    logger: service(),\n    // Data storage\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    storage: service('remotestorage'),\n    // Message transport\n    irc: service('sockethub-irc'),\n    xmpp: service('sockethub-xmpp'),\n\n    /**\n     * A collection of all space model instances\n     * @type {Space[]}\n     */\n    spaces: null,\n\n    /**\n     * This is called from the application route on app startup. Sets up all\n     * listeners for incoming Sockethub messages.\n     * @public\n     */\n    setupListeners: function setupListeners() {\n      this.sockethub.socket.on('completed', this.handleSockethubCompleted.bind(this));\n      this.sockethub.socket.on('message', this.handleSockethubMessage.bind(this));\n      this.sockethub.socket.on('failure', this.handleSockethubFailure.bind(this));\n    },\n\n\n    /**\n     * This is called from the application route on app startup. Instantiates,\n     * connects, and joins all either configured/saved or default spaces/channels\n     * @public\n     */\n    instantiateSpacesAndChannels: function instantiateSpacesAndChannels() {\n      var _this = this;\n\n      this.set('spaces', []);\n      var rs = this.get('storage.rs');\n\n      return new RSVP.Promise(function (resolve, reject) {\n        rs.kosmos.spaces.getAll().then(function (spaceData) {\n          if (isEmpty(Object.keys(spaceData))) {\n            console.debug('No space data found in RS. Adding default space...');\n            _this.storage.addDefaultSpace().then(function (data) {\n              _this.connectAndAddSpace(data.space);\n              _this.instantiateChannels(data.space, data.channels);\n              resolve();\n            });\n          } else {\n            Object.keys(spaceData).forEach(function (id) {\n              var space = _space.default.create();\n              space.setProperties({\n                id: id,\n                name: spaceData[id].name,\n                protocol: spaceData[id].protocol,\n                server: spaceData[id].server,\n                botkaURL: spaceData[id].botkaURL\n              });\n              _this.connectAndAddSpace(space);\n              _this.instantiateChannels(space, spaceData[id].channels);\n            });\n            resolve();\n          }\n        }, function (e) {\n          _this.log('error', 'couldn\\'d load spaces from RS', e);\n          reject();\n        });\n      });\n    },\n\n\n    /**\n     * Invokes the connect function on the appropriate transport service\n     * @public\n     */\n    connectServer: function connectServer(space) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).connect(space);\n    },\n    connectAndAddSpace: function connectAndAddSpace(space) {\n      this.connectServer(space);\n      this.spaces.pushObject(space);\n    },\n\n\n    /**\n     * Invokes the channel-join function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\"\n     * @public\n     */\n    joinChannel: function joinChannel(space, channel, type) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).join(space, channel, type);\n    },\n\n    /**\n     * Invokes the send-message function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} content\n     * @public\n     */\n    transferMessage: function transferMessage(space, channel, content) {\n      var target = {\n        '@id': channel.get('sockethubChannelId'),\n        '@type': channel.get('isUserChannel') ? 'person' : 'room',\n        displayName: channel.get('name')\n      };\n      this.getServiceForSockethubPlatform(space.get('protocol')).transferMessage(space, target, content);\n    },\n\n\n    /**\n     * Invokes the send-action-message function on the appropriate transport service\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.transferMeMessage(space, target, content);\n          break;\n      }\n    },\n\n\n    leaveChannel: function leaveChannel(space, channel) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.leave(space, channel);\n          break;\n      }\n    },\n\n    changeTopic: function changeTopic(space, channel, topic) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.irc.changeTopic(space, channel, topic);\n          break;\n      }\n    },\n\n    updateChannelUserList: function updateChannelUserList(message) {\n      var channel = void 0;\n      switch (message.context) {\n        case 'irc':\n          channel = this.getChannelById(message.actor['@id']);\n          break;\n        case 'xmpp':\n          channel = this.getChannel(message.target['@id'], message.actor['@id']);\n          break;\n      }\n\n      if (channel) {\n        channel.set('connected', true);\n        if (Array.isArray(message.object.members)) {\n          channel.set('userList', message.object.members.sort());\n        }\n      }\n    },\n    addUserToChannelUserList: function addUserToChannelUserList(message) {\n      var channel = this.getChannelById(message.target['@id']);\n      if (channel) {\n        channel.addUser(message.actor.displayName);\n      }\n    },\n    removeUserFromChannelUserList: function removeUserFromChannelUserList(message) {\n      // TODO handle user quit leaves (multiple channels)\n      // e.g. target is `{ @type: 'service', @id: 'irc://irc.freenode.net' }`\n      var channel = this.getChannelById(message.target['@id']);\n      if (channel) {\n        channel.removeUser(message.actor.displayName);\n      }\n    },\n    getChannelById: function getChannelById(channelId) {\n      // TODO handle multiple spaces with same hostname:\n      // This method should return an array of channels for all spaces with the\n      // same hostname\n\n      var hostname = channelId.match(/(?:irc:\\/\\/)?(?:.+@)?(.+?)(?:\\/|$)/)[1];\n\n      var space = this.spaces.findBy('server.hostname', hostname);\n\n      if (isEmpty(space)) {\n        console.warn('Could not find space by hostname', hostname);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (isEmpty(channel)) {\n        console.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * @param {String} personId\n     * @param {String} channelId\n     */\n    getChannel: function getChannel(personId, channelId) {\n      var space = this.spaces.findBy('sockethubPersonId', personId);\n      if (isEmpty(space)) {\n        console.warn('Could not find space by sockethubPersonId', personId);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (isEmpty(channel)) {\n        console.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n    updateUsername: function updateUsername(message) {\n      if (_typeof(message.actor) === 'object') {\n        var actorId = message.actor['@id'];\n        var space = this.spaces.findBy('sockethubPersonId', actorId);\n        if (isPresent(space)) {\n          space.updateUsername(message.target.displayName);\n        }\n      }\n    },\n    updateChannelTopic: function updateChannelTopic(message) {\n      var hostname = void 0;\n      if (_typeof(message.target) === 'object') {\n        hostname = message.target['@id'].match(/irc:\\/\\/(.+)\\//)[1];\n      } else if (typeof message.actor === 'string') {\n        hostname = message.actor.match(/irc:\\/\\/.+@(.+)/)[1];\n      }\n\n      var space = this.spaces.findBy('server.hostname', hostname);\n\n      if (!isEmpty(space)) {\n        var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n        if (isEmpty(channel)) {\n          console.warn('No channel for update topic message found. Creating it.', message);\n          channel = this.createChannel(space, message.target['displayName']);\n        }\n\n        var currentTopic = channel.get('topic');\n        var newTopic = message.object.topic;\n\n        channel.set('topic', newTopic);\n\n        if (isPresent(currentTopic) && newTopic !== currentTopic && !channel.get('visible')) {\n          Notification.requestPermission(function () {\n            new Notification(channel.name, {\n              body: 'New Topic: ' + newTopic\n            });\n          });\n        }\n\n        // let notification = Message.create({\n        //   type: 'notification-topic-change',\n        //   date: new Date(message.published),\n        //   nickname: message.actor.displayName,\n        //   content: message.object.topic\n        // });\n\n        // channel.get('messages').pushObject(notification);\n      }\n    },\n\n\n    instantiateChannels: function instantiateChannels(space, channels) {\n      var _this2 = this;\n\n      channels.forEach(function (channelName) {\n        _this2.createChannel(space, channelName);\n      });\n    },\n\n    createChannel: function createChannel(space, channelName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _channel.default.create({\n        space: space,\n        name: channelName,\n        sockethubChannelId: platform.generateChannelId(space, channelName)\n      });\n\n      this.joinChannel(space, channel, \"room\");\n      space.get('channels').pushObject(channel);\n\n      // TODO Do we need this on startup? Could overwrite updates from remote.\n      this.storage.saveSpace(space);\n\n      if (channel.get('isLogged')) {\n        this.loadLastMessages(space, channel, _moment.default.utc(), 2).catch(function () {});\n      }\n\n      return channel;\n    },\n\n    loadLastMessages: function loadLastMessages(space, channel, date) {\n      var _this3 = this;\n\n      var maximumDays = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 14;\n\n      var searchUntilDate = void 0;\n      if (channel.get('searchedPreviousLogsUntilDate')) {\n        searchUntilDate = (0, _moment.default)(channel.get('searchedPreviousLogsUntilDate')).subtract(maximumDays, 'days');\n      } else {\n        searchUntilDate = _moment.default.utc().subtract(maximumDays, 'days');\n      }\n\n      if (date.isBefore(searchUntilDate, 'day')) {\n        channel.set('searchedPreviousLogsUntilDate', date);\n        return;\n      }\n\n      return this.loadArchiveMessages(space, channel, date).catch(function () {\n        // didn't find any archive for this day, restart searching for the previous day\n        return _this3.loadLastMessages(space, channel, date.subtract(1, 'day'));\n      });\n    },\n    loadArchiveMessages: function loadArchiveMessages(space, channel, date) {\n      var _this4 = this;\n\n      var logsUrl = _environment.default.publicLogsUrl + '/' + space.get('name').toLowerCase() + '/channels/' + channel.get('slug') + '/';\n      logsUrl += date.format('YYYY/MM/DD');\n\n      return this.ajax.request(logsUrl, {\n        type: 'GET',\n        dataType: 'json'\n      }).then(function (archive) {\n        get(archive, 'today.messages').forEach(function (message) {\n          _this4.log('chat_message', message);\n\n          var channelMessage = _message.default.create({\n            type: 'message-chat',\n            date: new Date(message.timestamp),\n            nickname: message.from,\n            content: message.text\n          });\n\n          channel.addMessage(channelMessage);\n        });\n        var previous = get(archive, 'today.previous');\n        channel.set('searchedPreviousLogsUntilDate', _moment.default.utc(previous.replace(/\\//g, '-')));\n      }).catch(function (error) {\n        _this4.log('ajax-error', 'couldn\\'t load archive document', error);\n        throw error;\n      });\n    },\n\n\n    createUserChannel: function createUserChannel(space, userName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _user_channel.default.create({\n        space: space,\n        name: userName,\n        sockethubChannelId: platform.generateChannelId(space, userName)\n      });\n\n      // TODO check if this is necesarry for XMPP,\n      // because for IRC it is not\n      this.joinChannel(space, channel, \"person\");\n      space.get('channels').pushObject(channel);\n\n      return channel;\n    },\n\n    removeChannel: function removeChannel(space, channelName) {\n      var channel = space.get('channels').findBy('name', channelName);\n      this.leaveChannel(space, channel);\n\n      space.get('channels').removeObject(channel);\n\n      this.storage.saveSpace(space);\n\n      return channel;\n    },\n\n    getServiceForSockethubPlatform: function getServiceForSockethubPlatform(protocol) {\n      return this.get(protocol.dasherize());\n    },\n\n\n    /*\n     * @private\n     *\n     * Handles completed Sockethub actions:\n     *\n     *     - Successfully joined a channel\n     */\n    handleSockethubCompleted: function handleSockethubCompleted(message) {\n      this.log(message.context + '_completed', message);\n\n      switch (message['@type']) {\n        case 'join':\n          var space = this.spaces.findBy('sockethubPersonId', message.actor['@id']);\n\n          // try to find space by older sockethubPersonId\n          if (isEmpty(space)) {\n            space = this.spaces.find(function (space) {\n              return space.get('previousSockethubPersonIds').includes(message.actor['@id']);\n            });\n          }\n\n          if (!isEmpty(space)) {\n            this.get(message.context).handleJoinCompleted(space, message);\n          } else {\n            console.warn('Could not find space for join message', message);\n          }\n          break;\n      }\n    },\n\n\n    /**\n     * Handles incoming Sockethub messages:\n     * - Attendance list for channel\n     * - Another user joined or left a channel\n     * - Received a channel message (normal or me/action)\n     * - A channel topic was updated\n     * - The username/address changed\n     * @private\n     */\n    handleSockethubMessage: function handleSockethubMessage(message) {\n      this.log(message.context + '_message', 'SH message', message);\n\n      switch (message['@type']) {\n        case 'observe':\n          if (message.object['@type'] === 'attendance') {\n            this.updateChannelUserList(message);\n          }\n          break;\n        case 'join':\n          this.handleChannelJoin(message);\n          break;\n        case 'leave':\n          this.removeUserFromChannelUserList(message);\n          break;\n        case 'send':\n          switch (message.object['@type']) {\n            case 'message':\n            case 'me':\n              this.getServiceForSockethubPlatform(message.context).addMessageToChannel(message);\n              break;\n          }\n          break;\n        case 'update':\n          switch (message.object['@type']) {\n            case 'topic':\n              this.updateChannelTopic(message);\n              break;\n            case 'address':\n              this.updateUsername(message);\n              break;\n            case 'presence':\n              this.xmpp.handlePresenceUpdate(message);\n              break;\n            case 'error':\n              console.warn('Got error update message', message.actor['@id'], message.object.content);\n              break;\n          }\n          break;\n      }\n    },\n\n\n    /**\n     * Handles the various checks assosciated with channel joins\n     * @private\n     */\n    handleChannelJoin: function handleChannelJoin(message) {\n      if (message.object['@type'] && message.object['@type'] === 'error') {\n        // failed to join a channel\n        var channel = this.getChannel(message.target['@id'], message.actor['@id']);\n        if (isPresent(channel)) {\n          channel.set('connected', false);\n        } else {\n          console.warn('Could not find channel for error message', message);\n        }\n      } else {\n        this.addUserToChannelUserList(message);\n      }\n    },\n\n\n    /**\n     * Handles incoming Sockethub errors/failures\n     * @private\n     */\n    handleSockethubFailure: function handleSockethubFailure(message) {\n      this.log('sh_failure', message);\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _logger;\n\n      (_logger = this.logger).log.apply(_logger, arguments);\n    }\n  });\n});","define('hyperchannel/services/ember-elsewhere', ['exports', 'ember-elsewhere/services/ember-elsewhere'], function (exports, _emberElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _emberElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/services/liquid-fire-transitions\", [\"exports\", \"liquid-fire/transition-map\"], function (exports, _transitionMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _transitionMap.default;\n});","define('hyperchannel/services/logger', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Service = Ember.Service;\n  exports.default = Service.extend({\n    enabled: true,\n\n    allowedTypes: null,\n    activeTypes: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('allowedTypes', ['connection', 'error', 'join', 'leave', 'message', 'irc_message', 'xmpp_message', 'send', 'xmpp_completed', 'irc_completed', 'sh_completed', 'sh_failure', 'irc', 'xmpp', 'ajax-error', 'chat_message']);\n\n      this.set('activeTypes', ['connection', 'error', 'join', 'leave', 'send', 'sh_completed', 'xmpp_completed', 'irc_completed', 'sh_failure', 'irc', 'xmpp', 'message', 'irc_message', 'xmpp_message']);\n    },\n    log: function log(type) {\n      if (!this.allowedTypes.includes(type)) {\n        throw new Error('You specified a unknown type: \"' + type + '\".');\n      }\n\n      if (this.activeTypes.includes(type) && this.enabled) {\n        var params = Array.prototype.slice.call(arguments);\n        params[0] = '[' + params[0] + ']';\n        console.debug.apply(null, params);\n      }\n    },\n    add: function add(type) {\n      this.activeTypes.addObject(type);\n    },\n    remove: function remove(type) {\n      this.activeTypes.removeObject(type);\n    },\n    disable: function disable() {\n      this.set('enabled', false);\n    },\n    enable: function enable() {\n      this.set('enabled', true);\n    }\n  });\n});","define('hyperchannel/services/moment', ['exports', 'ember-moment/services/moment', 'hyperchannel/config/environment'], function (exports, _moment, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var get = Ember.get;\n  exports.default = _moment.default.extend({\n    defaultFormat: get(_environment.default, 'moment.outputFormat')\n  });\n});","define('hyperchannel/services/remotestorage', ['exports', 'hyperchannel/models/space', 'npm:remotestoragejs', 'npm:remotestorage-module-kosmos', 'hyperchannel/config/environment'], function (exports, _space, _npmRemotestoragejs, _npmRemotestorageModuleKosmos, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Service = Ember.Service;\n  exports.default = Service.extend({\n\n    rs: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      var rs = new _npmRemotestoragejs.default({ modules: [_npmRemotestorageModuleKosmos.default.default] });\n      rs.access.claim('kosmos', 'rw');\n      rs.caching.enable('/kosmos/');\n\n      this.set('rs', rs);\n    },\n    addDefaultSpace: function addDefaultSpace() {\n      var spaceConfig = _environment.default.spacePresets.find(function (s) {\n        return s.id === _environment.default.defaultSpaceId;\n      });\n\n      var params = {\n        id: spaceConfig.id,\n        name: spaceConfig.name,\n        protocol: spaceConfig.protocol,\n        server: spaceConfig.server,\n        channels: ['#hackerbeach', '#kosmos', '#kosmos-dev', '#kosmos-random', '#sockethub'],\n        botkaURL: spaceConfig.botkaURL\n      };\n\n      params.server.nickname = window.prompt(\"Choose a nickname\");\n\n      return this.rs.kosmos.spaces.store(params).then(function () {\n        console.debug('[remotestorage]', 'created/stored default space');\n\n        var channels = params.channels;\n        delete params.channels;\n\n        var space = _space.default.create();\n        space.setProperties(params);\n\n        return { space: space, channels: channels };\n      });\n    },\n    saveSpace: function saveSpace(space) {\n      return this.rs.kosmos.spaces.store(space.serialize()).then(function () {\n        return console.debug('[remotestorage]', 'saved space ' + space.get('name') + ' in RS');\n      });\n    },\n    removeSpace: function removeSpace(space) {\n      return this.rs.kosmos.spaces.remove(space.get('id')).then(function () {\n        return console.debug('[remotestorage]', 'removed space ' + space.get('name') + ' from RS');\n      });\n    }\n  });\n});","define('hyperchannel/services/sockethub-irc', ['exports', 'hyperchannel/utils/channel-message-from-sockethub-object'], function (exports, _channelMessageFromSockethubObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var $ = Ember.$;\n  var Service = Ember.Service;\n  var service = Ember.inject.service;\n  var isEmpty = Ember.isEmpty;\n  var Logger = Ember.Logger;\n\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param {Space} space - space model the activity belongs to\n   * @param {Object} details - the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'irc',\n      actor: space.get('sockethubPersonId')\n    };\n\n    return $.extend({}, baseObject, details);\n  }\n\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n\n  /**\n   * This service provides helpers for SocketHub IRC communications\n   * @module hyperchannel/services/sockethub-irc\n   */\n  exports.default = Service.extend({\n\n    logger: service(),\n    coms: service(),\n\n    /**\n     * - Creates an ActivityStreams person object for\n     *   future use\n     * - Emits credentials for future IRC server messages,\n     *   like e.g. `join`\n     * @public\n     */\n    connect: function connect(space) {\n      var actorObject = {\n        '@id': space.get('sockethubPersonId'),\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      };\n      Logger.debug('actor object', actorObject);\n\n      this.sockethub.ActivityStreams.Object.create(actorObject);\n\n      var credentials = buildActivityObject(space, {\n        object: {\n          '@type': 'credentials',\n          nick: space.get('server.nickname'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          secure: space.get('server.secure')\n        }\n      });\n\n      this.log('irc', 'connecting to IRC network', credentials);\n      this.sockethub.socket.emit('credentials', credentials);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n      if (channel) {\n        this.observeChannel(space, channel);\n      }\n    },\n\n\n    /**\n     * Join a channel/room\n     * @public\n     */\n    join: function join(space, channel, type) {\n      switch (type) {\n        case 'room':\n          this.sockethub.ActivityStreams.Object.create({\n            '@type': type,\n            '@id': channel.get('sockethubChannelId'),\n            displayName: channel.get('name')\n          });\n\n          var joinMsg = buildActivityObject(space, {\n            '@type': 'join',\n            target: channel.get('sockethubChannelId'),\n            object: {}\n          });\n\n          this.log('irc', 'joining channel', joinMsg);\n          this.sockethub.socket.emit('message', joinMsg);\n          break;\n        case 'person':\n          channel.set('connected', true);\n          break;\n      }\n    },\n\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n\n    /**\n     * Send an action chat message to a channel\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content, 'me');\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      var hostname = message.actor['@id'].match(/irc:\\/\\/.+@(.+)/)[1];\n      var space = this.get('coms.spaces').findBy('server.hostname', hostname);\n\n      if (isEmpty(space)) {\n        Logger.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message);\n\n      // TODO should check for message and update sent status if exists\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n\n    /**\n     * Leave a channel\n     * @public\n     */\n    leave: function leave(space, channel) {\n      if (!channel.get('isUserChannel')) {\n        // TODO Do we really need to create this room for leaving? It should\n        // already have been created when joining.\n        this.sockethub.ActivityStreams.Object.create({\n          '@type': \"room\",\n          '@id': channel.get('sockethubChannelId'),\n          displayName: channel.get('name')\n        });\n\n        var leaveMsg = buildActivityObject(space, {\n          '@type': 'leave',\n          target: channel.get('sockethubChannelId'),\n          object: {}\n        });\n\n        this.log('leave', 'leaving channel', leaveMsg);\n        this.sockethub.socket.emit('message', leaveMsg);\n      }\n    },\n\n\n    /**\n     * Send a channel topic change\n     * @public\n     */\n    changeTopic: function changeTopic(space, channel, topic) {\n      var topicMsg = buildActivityObject(space, {\n        '@type': 'update',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'topic',\n          topic: topic\n        }\n      });\n\n      this.sockethub.socket.emit('message', topicMsg);\n    },\n\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n\n      this.log('irc', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return 'irc://' + space.get('server.hostname') + '/' + channelName;\n    },\n\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelName = void 0,\n          channel = void 0;\n\n      if (space.get('userNickname') === message.target.displayName) {\n        // direct message\n        targetChannelName = message.actor.displayName || message.actor['@id'];\n\n        channel = space.get('channels').findBy('name', targetChannelName);\n        if (!channel) {\n          channel = this.coms.createUserChannel(space, targetChannelName);\n        }\n      } else {\n        // channel message\n        targetChannelName = message.target.displayName;\n\n        channel = space.get('channels').findBy('name', targetChannelName);\n        if (!channel) {\n          channel = this.coms.createChannel(space, targetChannelName);\n        }\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @protected\n     */\n    log: function log() {\n      var _logger;\n\n      (_logger = this.logger).log.apply(_logger, arguments);\n    }\n  });\n});","define('hyperchannel/services/sockethub-xmpp', ['exports', 'hyperchannel/utils/channel-message-from-sockethub-object'], function (exports, _channelMessageFromSockethubObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var $ = Ember.$;\n  var Service = Ember.Service;\n  var service = Ember.inject.service;\n  var isEmpty = Ember.isEmpty;\n  var Logger = Ember.Logger;\n\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param space {Space} space model the activity belongs to\n   * @param details {Object} the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'xmpp',\n      actor: space.get('sockethubPersonId')\n    };\n\n    return $.extend({}, baseObject, details);\n  }\n\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n\n  /**\n   * This service provides helpers for SocketHub XMPP communications\n   * @module hyperchannel/services/sockethub-xmpp\n   */\n  exports.default = Service.extend({\n\n    logger: service(),\n    coms: service(),\n\n    /**\n     * @public\n     */\n    connect: function connect(space) {\n      var actor = space.get('sockethubPersonId');\n\n      this.sockethub.ActivityStreams.Object.create({\n        '@id': actor,\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      });\n\n      var credentialsJob = {\n        actor: actor,\n        context: 'xmpp',\n        object: {\n          '@type': 'credentials',\n          username: space.get('server.username'),\n          password: space.get('server.password'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          resource: 'hyperchannel'\n        }\n      };\n\n      var connectJob = {\n        '@type': 'connect',\n        context: 'xmpp',\n        actor: actor\n      };\n\n      this.log('xmpp', 'connecting to XMPP server...');\n      this.sockethub.socket.emit('credentials', credentialsJob);\n      this.sockethub.socket.emit('message', connectJob);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channelId = message.target['@id'].split('/')[0];\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (channel) {\n        this.observeChannel(space, channel);\n      } else {\n        Logger.warn('Could not find channel for join message', message);\n      }\n    },\n\n\n    /**\n     * Join a channel/room\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\".\n     * @public\n     */\n    join: function join(space, channel, type) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@type': type,\n        '@id': channel.get('sockethubChannelId'),\n        displayName: channel.get('name')\n      });\n\n      var joinMsg = buildActivityObject(space, {\n        '@type': 'join',\n        actor: {\n          '@type': 'person',\n          '@id': space.get('sockethubPersonId'),\n          displayName: space.get('server.nickname')\n        },\n        target: {\n          '@id': channel.get('sockethubChannelId'),\n          '@type': type\n        }\n      });\n\n      this.log('xmpp', 'joining channel', joinMsg);\n      this.sockethub.socket.emit('message', joinMsg);\n    },\n\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n    handlePresenceUpdate: function handlePresenceUpdate(message) {\n      if (message.target['@type'] === 'room') {\n        var targetChannelId = message.target['@id'];\n        var space = this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n        var channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (channel) {\n          if (message.object.presence === 'offline') {\n            channel.removeUser(message.actor.displayName);\n          } else {\n            channel.addUser(message.actor.displayName);\n          }\n        }\n      } else {\n        Logger.debug('Presence update:', message.actor['@id'], message.object.presence, message.object.status);\n      }\n    },\n\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      if (isEmpty(message.object.content)) {\n        return;\n      }\n\n      var space = this.getSpaceForMessage(message);\n\n      if (isEmpty(space)) {\n        Logger.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message);\n\n      // TODO should check for message and update sent status if exists\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n\n      this.log('xmpp', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return channelName;\n    },\n\n\n    /**\n     * Get the space for a given message.\n     *\n     * @param {Object} message\n     * @returns {Space} space\n     * @public\n     */\n    getSpaceForMessage: function getSpaceForMessage(message) {\n      var targetChannelId = message.target['@id'];\n\n      if (message.target['@type'] === 'room') {\n        return this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n      } else {\n        return this.get('coms.spaces').findBy('sockethubPersonId', targetChannelId);\n      }\n    },\n\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelId = message.target['@id'];\n      var channel = void 0;\n\n      if (message.target['@type'] === 'room') {\n        channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n        if (!channel) {\n          channel = this.coms.createChannel(space, targetChannelId);\n        }\n      } else {\n        channel = space.get('channels').findBy('sockethubChannelId', message.actor['@id']);\n        if (!channel) {\n          channel = this.coms.createUserChannel(space, message.actor['@id']);\n        }\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _logger;\n\n      (_logger = this.logger).log.apply(_logger, arguments);\n    }\n  });\n});","define('hyperchannel/storages/user-settings', ['exports', 'ember-local-storage/local/object', 'hyperchannel/config/environment'], function (exports, _object, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Storage = _object.default.extend();\n\n  Storage.reopenClass({\n    initialState: function initialState() {\n      return {\n        nickname: null,\n        currentSpace: _environment.default.defaultSpaceId,\n        currentChannel: 'kosmos'\n      };\n    }\n  });\n\n  exports.default = Storage;\n});","define(\"hyperchannel/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"QlsdI72x\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"app-container\\\",null,[[\\\"showGlobalMenu\\\",\\\"showChannelMenu\\\"],[[22,[\\\"showGlobalMenu\\\"]],[22,[\\\"showChannelMenu\\\"]]]],{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"div\\\"],[10,\\\"id\\\",\\\"global\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"header\\\"],[10,\\\"id\\\",\\\"sitename\\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"h1\\\"],[8],[0,\\\"Kosmos\\\"],[9],[0,\\\"\\\\n    \\\"],[9],[0,\\\"\\\\n\\\\n    \\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"main\\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"nav\\\"],[10,\\\"id\\\",\\\"channels\\\"],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"channel-nav\\\",null,[[\\\"spaces\\\",\\\"joinChannel\\\"],[[22,[\\\"spaces\\\"]],[26,\\\"route-action\\\",[\\\"openNewChannel\\\"],null]]]],false],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n    \\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n\\\\n  \\\"],[1,[20,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[1,[20,\\\"modal-target\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/application.hbs\" } });\n});","define(\"hyperchannel/templates/settings\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"v4YHZi2h\", \"block\": \"{\\\"symbols\\\":[\\\"spacePreset\\\",\\\"space\\\"],\\\"statements\\\":[[6,\\\"section\\\"],[10,\\\"id\\\",\\\"settings\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"h2\\\"],[8],[0,\\\"Settings\\\"],[9],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"content\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"h3\\\"],[8],[0,\\\"Spaces\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[22,[\\\"model\\\",\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"h3\\\"],[8],[1,[21,2,[\\\"name\\\"]],false],[9],[0,\\\"\\\\n      \\\"],[6,\\\"button\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"removeSpace\\\",[21,2,[]]]],[8],[0,\\\"delete\\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"hr\\\"],[8],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n    \\\"],[6,\\\"h3\\\"],[8],[0,\\\"Presets\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[22,[\\\"model\\\",\\\"spacePresets\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"h3\\\"],[8],[1,[21,1,[\\\"name\\\"]],false],[9],[0,\\\"\\\\n      \\\"],[6,\\\"button\\\"],[10,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"addSpaceFromPreset\\\",[21,1,[]]]],[8],[0,\\\"add\\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"hr\\\"],[8],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n    \\\"],[6,\\\"h3\\\"],[8],[0,\\\"Add new space\\\"],[9],[0,\\\"\\\\n    \\\"],[6,\\\"form\\\"],[10,\\\"name\\\",\\\"add-space\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"addSpace\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[8],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"newSpace\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"newSpace\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"newSpace\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[22,[\\\"newSpace\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled\\\"]]],false],[0,\\\"\\\\n        \\\"],[6,\\\"label\\\"],[10,\\\"for\\\",\\\"tls-enabled\\\"],[8],[0,\\\"Secure (TLS)\\\"],[9],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[22,[\\\"newSpace\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"input\\\",null,[[\\\"type\\\",\\\"value\\\",\\\"placeholder\\\"],[\\\"password\\\",[22,[\\\"newSpace\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n        \\\"],[1,[26,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[22,[\\\"newSpace\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n        \\\"],[6,\\\"input\\\"],[10,\\\"value\\\",\\\"Save\\\"],[10,\\\"type\\\",\\\"submit\\\"],[8],[9],[0,\\\"\\\\n      \\\"],[9],[0,\\\"\\\\n    \\\"],[9],[0,\\\"\\\\n\\\\n  \\\"],[9],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[22,[\\\"showSpaceSettingModal\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[26,\\\"to-elsewhere\\\",null,[[\\\"named\\\",\\\"send\\\"],[\\\"modal\\\",[26,\\\"hash\\\",null,[[\\\"body\\\",\\\"onOutsideClick\\\"],[[26,\\\"component\\\",[\\\"space-setting-modal\\\"],[[\\\"settings\\\",\\\"onSave\\\",\\\"onCancel\\\"],[[22,[\\\"selectedSpacePreset\\\"]],[26,\\\"action\\\",[[21,0,[]],\\\"saveSpace\\\"],null],[26,\\\"action\\\",[[21,0,[]],[26,\\\"mut\\\",[[22,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]],[26,\\\"action\\\",[[21,0,[]],[26,\\\"mut\\\",[[22,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/settings.hbs\" } });\n});","define(\"hyperchannel/templates/space/channel\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Tk5LhyHO\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[26,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\",\\\"menu\\\"],[[22,[\\\"model\\\"]],[22,[\\\"newMessage\\\"]],[26,\\\"action\\\",[[21,0,[]],\\\"sendMessage\\\"],null],[26,\\\"action\\\",[[21,0,[]],\\\"executeCommand\\\"],null],[26,\\\"route-action\\\",[\\\"menu\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/space/channel.hbs\" } });\n});","define(\"hyperchannel/templates/space/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"geipFWFu\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"section\\\"],[10,\\\"id\\\",\\\"space\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"header\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"h2\\\"],[8],[1,[22,[\\\"model\\\",\\\"name\\\"]],false],[9],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[10,\\\"class\\\",\\\"discreet\\\"],[8],[1,[22,[\\\"model\\\",\\\"server\\\",\\\"hostname\\\"]],false],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"content\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[8],[0,\\\"\\\\n      \\\"],[1,[26,\\\"web-push-subscription\\\",null,[[\\\"botkaURL\\\",\\\"username\\\"],[[22,[\\\"model\\\",\\\"botkaURL\\\"]],[22,[\\\"model\\\",\\\"userNickname\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[9],[0,\\\"\\\\n  \\\"],[9],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/space/index.hbs\" } });\n});","define(\"hyperchannel/templates/space/user_channel\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"pICutvdZ\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[26,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\"],[[22,[\\\"model\\\"]],[22,[\\\"newMessage\\\"]],[26,\\\"action\\\",[[21,0,[]],\\\"sendMessage\\\"],null],[26,\\\"action\\\",[[21,0,[]],\\\"executeCommand\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/space/user_channel.hbs\" } });\n});","define('hyperchannel/transitions/cross-fade', ['exports', 'liquid-fire/transitions/cross-fade'], function (exports, _crossFade) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _crossFade.default;\n    }\n  });\n});","define('hyperchannel/transitions/default', ['exports', 'liquid-fire/transitions/default'], function (exports, _default) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _default.default;\n    }\n  });\n});","define('hyperchannel/transitions/explode', ['exports', 'liquid-fire/transitions/explode'], function (exports, _explode) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _explode.default;\n    }\n  });\n});","define('hyperchannel/transitions/fade', ['exports', 'liquid-fire/transitions/fade'], function (exports, _fade) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _fade.default;\n    }\n  });\n});","define('hyperchannel/transitions/flex-grow', ['exports', 'liquid-fire/transitions/flex-grow'], function (exports, _flexGrow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _flexGrow.default;\n    }\n  });\n});","define('hyperchannel/transitions/fly-to', ['exports', 'liquid-fire/transitions/fly-to'], function (exports, _flyTo) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _flyTo.default;\n    }\n  });\n});","define('hyperchannel/transitions/move-over', ['exports', 'liquid-fire/transitions/move-over'], function (exports, _moveOver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _moveOver.default;\n    }\n  });\n});","define('hyperchannel/transitions/scale', ['exports', 'liquid-fire/transitions/scale'], function (exports, _scale) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _scale.default;\n    }\n  });\n});","define('hyperchannel/transitions/scroll-then', ['exports', 'liquid-fire/transitions/scroll-then'], function (exports, _scrollThen) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _scrollThen.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-down', ['exports', 'liquid-fire/transitions/to-down'], function (exports, _toDown) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toDown.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-left', ['exports', 'liquid-fire/transitions/to-left'], function (exports, _toLeft) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toLeft.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-right', ['exports', 'liquid-fire/transitions/to-right'], function (exports, _toRight) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toRight.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-up', ['exports', 'liquid-fire/transitions/to-up'], function (exports, _toUp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toUp.default;\n    }\n  });\n});","define('hyperchannel/transitions/wait', ['exports', 'liquid-fire/transitions/wait'], function (exports, _wait) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _wait.default;\n    }\n  });\n});","define('hyperchannel/utils/channel-message-from-sockethub-object', ['exports', 'hyperchannel/models/message'], function (exports, _message) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = channelMessageFromSockethubObject;\n  function channelMessageFromSockethubObject(message) {\n    var channelMessage = _message.default.create({\n      type: message.object['@type'] === 'me' ? 'message-chat-me' : 'message-chat',\n      date: new Date(message.published),\n      nickname: message.actor.displayName || message.actor['@id'],\n      content: message.object.content\n    });\n\n    return channelMessage;\n  }\n});","define('hyperchannel/utils/url-base64-to-uint8-array', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = urlBase64ToUint8Array;\n  function urlBase64ToUint8Array(base64String) {\n\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\n    var base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n\n    var rawData = window.atob(base64);\n    var outputArray = new Uint8Array(rawData.length);\n\n    for (var i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n});","define('hyperchannel/config/environment', [], function() {\n  var prefix = 'hyperchannel';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"hyperchannel/app\")[\"default\"].create({\"name\":\"hyperchannel\",\"version\":\"0.3.0+f9b4d7f0\"});\n}\n"]}