{"version":3,"sources":["vendor/ember-cli/app-prefix.js","hyperchannel/app.js","hyperchannel/components/-lf-get-outlet-state.js","hyperchannel/components/app-container/component.js","hyperchannel/components/app-container/template.js","hyperchannel/components/channel-container/component.js","hyperchannel/components/channel-container/template.js","hyperchannel/components/channel-input-field/component.js","hyperchannel/components/channel-nav/component.js","hyperchannel/components/channel-nav/template.js","hyperchannel/components/date-headline/component.js","hyperchannel/components/date-headline/template.js","hyperchannel/components/from-elsewhere.js","hyperchannel/components/illiquid-model.js","hyperchannel/components/link-to-username/component.js","hyperchannel/components/link-to-username/template.js","hyperchannel/components/liquid-bind.js","hyperchannel/components/liquid-child.js","hyperchannel/components/liquid-container.js","hyperchannel/components/liquid-if.js","hyperchannel/components/liquid-measured.js","hyperchannel/components/liquid-outlet.js","hyperchannel/components/liquid-spacer.js","hyperchannel/components/liquid-sync.js","hyperchannel/components/liquid-unless.js","hyperchannel/components/liquid-versions.js","hyperchannel/components/message-chat-me/component.js","hyperchannel/components/message-chat-me/template.js","hyperchannel/components/message-chat/component.js","hyperchannel/components/message-chat/template.js","hyperchannel/components/modal-target/component.js","hyperchannel/components/modal-target/template.js","hyperchannel/components/multiple-from-elsewhere.js","hyperchannel/components/notification-topic-change/component.js","hyperchannel/components/notification-topic-change/template.js","hyperchannel/components/space-setting-modal/component.js","hyperchannel/components/space-setting-modal/template.js","hyperchannel/components/to-elsewhere.js","hyperchannel/controllers/application.js","hyperchannel/controllers/index.js","hyperchannel/controllers/settings.js","hyperchannel/controllers/space.js","hyperchannel/controllers/space/base_channel.js","hyperchannel/controllers/space/channel.js","hyperchannel/controllers/space/user_channel.js","hyperchannel/ember-gestures/recognizers/pan.js","hyperchannel/ember-gestures/recognizers/pinch.js","hyperchannel/ember-gestures/recognizers/press.js","hyperchannel/ember-gestures/recognizers/rotate.js","hyperchannel/ember-gestures/recognizers/swipe.js","hyperchannel/ember-gestures/recognizers/swipeleft.js","hyperchannel/ember-gestures/recognizers/swiperight.js","hyperchannel/ember-gestures/recognizers/tap.js","hyperchannel/ember-gestures/recognizers/vertical-pan.js","hyperchannel/ember-gestures/recognizers/vertical-swipe.js","hyperchannel/event_dispatcher.js","hyperchannel/helpers/app-version.js","hyperchannel/helpers/is-after.js","hyperchannel/helpers/is-before.js","hyperchannel/helpers/is-between.js","hyperchannel/helpers/is-same-or-after.js","hyperchannel/helpers/is-same-or-before.js","hyperchannel/helpers/is-same.js","hyperchannel/helpers/lf-lock-model.js","hyperchannel/helpers/lf-or.js","hyperchannel/helpers/moment-add.js","hyperchannel/helpers/moment-calendar.js","hyperchannel/helpers/moment-duration.js","hyperchannel/helpers/moment-format.js","hyperchannel/helpers/moment-from-now.js","hyperchannel/helpers/moment-from.js","hyperchannel/helpers/moment-subtract.js","hyperchannel/helpers/moment-to-date.js","hyperchannel/helpers/moment-to-now.js","hyperchannel/helpers/moment-to.js","hyperchannel/helpers/moment-unix.js","hyperchannel/helpers/moment.js","hyperchannel/helpers/now.js","hyperchannel/helpers/route-action.js","hyperchannel/helpers/unix.js","hyperchannel/initializers/app-version.js","hyperchannel/initializers/container-debug-adapter.js","hyperchannel/initializers/ember-hammertime.js","hyperchannel/initializers/export-application-global.js","hyperchannel/initializers/hammer.js","hyperchannel/initializers/liquid-fire.js","hyperchannel/initializers/sockethub.js","hyperchannel/instance-initializers/ember-gestures.js","hyperchannel/instance-initializers/remotestorage.js","hyperchannel/models/base_channel.js","hyperchannel/models/channel.js","hyperchannel/models/message.js","hyperchannel/models/space.js","hyperchannel/models/user_channel.js","hyperchannel/resolver.js","hyperchannel/router.js","hyperchannel/routes/application.js","hyperchannel/routes/index.js","hyperchannel/routes/settings.js","hyperchannel/routes/space.js","hyperchannel/routes/space/base_channel.js","hyperchannel/routes/space/channel.js","hyperchannel/routes/space/user_channel.js","hyperchannel/services/-gestures.js","hyperchannel/services/ajax.js","hyperchannel/services/coms.js","hyperchannel/services/ember-elsewhere.js","hyperchannel/services/liquid-fire-transitions.js","hyperchannel/services/logger.js","hyperchannel/services/moment.js","hyperchannel/services/remotestorage.js","hyperchannel/services/sockethub-irc.js","hyperchannel/services/sockethub-xmpp.js","hyperchannel/storages/user-settings.js","hyperchannel/templates/application.js","hyperchannel/templates/index.js","hyperchannel/templates/settings.js","hyperchannel/templates/space/channel.js","hyperchannel/templates/space/user_channel.js","hyperchannel/transitions/cross-fade.js","hyperchannel/transitions/default.js","hyperchannel/transitions/explode.js","hyperchannel/transitions/fade.js","hyperchannel/transitions/flex-grow.js","hyperchannel/transitions/fly-to.js","hyperchannel/transitions/move-over.js","hyperchannel/transitions/scale.js","hyperchannel/transitions/scroll-then.js","hyperchannel/transitions/to-down.js","hyperchannel/transitions/to-left.js","hyperchannel/transitions/to-right.js","hyperchannel/transitions/to-up.js","hyperchannel/transitions/wait.js","hyperchannel/utils/channel-message-from-sockethub-object.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"names":["define","exports","_resolver","_emberLoadInitializers","_environment","Object","defineProperty","value","App","Ember","Application","extend","modulePrefix","default","podModulePrefix","Resolver","_lfGetOutletState","enumerable","get","_recognizers","isElementOf","id","element","$","parents","length","Component","tagName","classNames","classNameBindings","recognizers","swipeLeft","this","set","swipeRight","tap","e","target","HTMLBars","template","block","meta","moduleName","scrollToBottom","animate","scrollTop","height","observer","scheduleOnce","run","service","inject","elementId","newMessage","channel","scrollingDisabled","coms","messagesUpdated","didInsertElement","_super","apply","arguments","Hammer","document","getElementById","on","actions","processMessageOrCommand","substr","onCommand","onMessage","menu","which","what","sendAction","loadPreviousMessages","_this","loadLastMessages","catch","finally","TextField","keyUp","ev","altKey","key","_insertAtCaret","myValue","el","selection","focus","createRange","text","selectionStart","startPos","endPos","selectionEnd","substring","_moment","updateInterval","headline","computed","date","scheduleUpdate","later","notifyPropertyChange","isSame","subtract","toLocaleDateString","_fromElsewhere","_illiquidModel","isPresent","username","roles","@","%","+","role","usernameWithoutPrefix","regex","RegExp","keys","join","replace","_liquidBind","_liquidChild","_liquidContainer","_liquidIf","_liquidMeasured","measure","_liquidOutlet","_liquidSpacer","_liquidSync","_liquidUnless","_liquidVersions","_component","htmlSafe","String","message","datetime","format","dateTitle","formattedContent","content","out","match","linkifyStr","linkAttributes","rel","validate","url","test","email","modalAnimation","lookup","call","pick","use","maxOpacity","outsideClick","modal","onOutsideClick","_multipleFromElsewhere","_space","settings","space","init","create","serialize","save","onSave","cancel","onCancel","_toElsewhere","Controller","alias","spaces","showGlobalMenu","showChannelMenu","application","controller","_Ember$inject","notEmpty","storage","newSpace","selectedSpacePreset","showSpaceSettingModal","addSpaceFromPreset","preset","saveSpace","then","connectAndAddSpace","_message","Logger","createMessage","type","Date","nickname","sendMessage","transferMessage","pushObject","executeCommand","availableCommands","commandText","commandSplitted","split","command","includes","toLowerCase","send","slice","warn","joinCommand","args","createChannel","transitionToRoute","partCommand","channelName","removeChannel","lastChannel","leaveCommand","helpCommand","meCommand","transferMeMessage","msgCommand","shift","createUserChannel","topicCommand","topic","changeTopic","_base_channel","_pan","_pinch","_press","_rotate","_swipe","include","exclude","options","threshold","direction","DIRECTION_LEFT","eventName","recognizer","DIRECTION_RIGHT","_tap","_verticalPan","_verticalSwipe","_event_dispatcher","merge","assign","gestures","emberUseCapture","removeTracking","useFastPaths","useCapture","_regexp","appVersion","_","hash","undefined","hideSha","version","versionRegExp","hideVersion","shaRegExp","APP","Helper","helper","_isAfter","globalAllowEmpty","_isBefore","_isBetween","_isSameOrAfter","_isSameOrBefore","_isSame","_lfLockModel","lfLockModel","_lfOr","lfOr","_momentAdd","_momentCalendar","_momentDuration","_momentFormat","_momentFromNow","_momentFrom","_momentSubtract","_momentToDate","_momentToNow","_momentTo","_unix","unix","_now","_routeAction","_initializerFactory","_config$APP","name","initialize","_containerDebugAdapter","app","register","exportApplicationGlobal","theGlobal","window","global","self","globalName","classify","reopen","willDestroy","defaults","cssProps","userSelect","_emberInternals","sockethub","SockethubClient","io","sockethubURL","path","instantiate","singleton","getOwner","instance","appInstance","remoteStorage","forEach","evt","debug","userList","messages","connected","sockethubChannelId","unreadMessages","unreadMentions","visible","isLogged","loggedChannel","find","slug","unreadMessagesClass","sortedMessages","sortBy","addDateHeadline","headlineDate","startOf","toDate","toString","dateMessage","addMessage","addUser","removeUser","removeObject","searchedPreviousLogsUntilDate","formattedTopic","defaultProtocol","protocol","server","hostname","port","secure","password","nickServ","channels","previousSockethubPersonIds","channelNames","mapBy","sockethubChannelIds","loggedChannels","userNickname","updateUsername","sockethubPersonId","personID","property","channelSorting","sortedChannels","sort","serialized","dasherize","parseInt","prop","isUserChannel","_emberResolver","Router","location","locationType","rootURL","map","route","Route","isEmpty","logger","beforeModel","model","setupListeners","instantiateSpacesAndChannels","menuProp","capitalize","toggleProperty","openNewChannel","prompt","transitionTo","_emberLocalStorage","userSettings","storageFor","redirect","currentSpace","currentChannel","RSVP","rsKosmos","kosmos","getAll","res","col","push","error","spacePresets","setupController","addSpace","modelFor","removeSpace","_this2","params","findBy","focusMessageInput","innerWidth","_Ember$run","createChannelOrUserChannel","didTransition","setEach","_gestures","_ajax","_channel","_user_channel","_typeof","Symbol","iterator","obj","constructor","prototype","Service","ajax","irc","xmpp","socket","handleSockethubCompleted","bind","handleSockethubMessage","handleSockethubFailure","rs","Promise","resolve","reject","spaceData","addDefaultSpace","data","instantiateChannels","log","connectServer","getServiceForSockethubPlatform","connect","joinChannel","@id","@type","displayName","leaveChannel","leave","updateChannelUserList","getChannelById","actor","Array","isArray","object","members","addUserToChannelUserList","removeUserFromChannelUserList","channelId","getChannel","personId","actorId","updateChannelTopic","currentTopic","newTopic","Notification","requestPermission","body","platform","generateChannelId","utc","_this3","maximumDays","searchUntilDate","isBefore","loadArchiveMessages","_this4","logsUrl","publicLogsUrl","request","dataType","archive","channelMessage","timestamp","from","previous","userName","context","handleJoinCompleted","handleChannelJoin","addMessageToChannel","handlePresenceUpdate","_get","_emberElsewhere","_transitionMap","enabled","allowedTypes","activeTypes","Error","add","addObject","remove","disable","enable","defaultFormat","_npmRemotestoragejs","_npmRemotestorageModuleKosmos","rsInstance","modules","access","claim","caching","store","_channelMessageFromSockethubObject","buildActivityObject","details","baseObject","buildMessageObject","actorObject","ActivityStreams","credentials","nick","emit","observeChannel","joinMsg","getChannelForMessage","leaveMsg","topicMsg","observeMsg","targetChannelName","credentialsJob","resource","connectJob","targetChannelId","presence","status","getSpaceForMessage","_object","Storage","reopenClass","initialState","_crossFade","_default","_explode","_fade","_flexGrow","_flyTo","_moveOver","_scale","_scrollThen","_toDown","_toLeft","_toRight","_toUp","_wait","channelMessageFromSockethubObject","published","metaName","prefix","rawConfig","querySelector","getAttribute","config","JSON","parse","unescape","err","runningTests","require"],"mappings":"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","file":"hyperchannel.js","sourcesContent":["\"use strict\";\n\n\n","define('hyperchannel/app', ['exports', 'hyperchannel/resolver', 'ember-load-initializers', 'hyperchannel/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define(\"hyperchannel/components/-lf-get-outlet-state\", [\"exports\", \"liquid-fire/components/-lf-get-outlet-state\"], function (exports, _lfGetOutletState) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _lfGetOutletState.default;\n    }\n  });\n});","define('hyperchannel/components/app-container/component', ['exports', 'ember-gestures/mixins/recognizers'], function (exports, _recognizers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  function isElementOf(id, element) {\n    return element.id === id || Ember.$(element).parents('#' + id).length > 0;\n  }\n\n  exports.default = Ember.Component.extend(_recognizers.default, {\n\n    tagName: 'div',\n    classNames: ['app-container'],\n    classNameBindings: ['showGlobalMenu:global-menu-open', 'showChannelMenu:channel-menu-open'],\n\n    recognizers: 'swipeleft swiperight tap',\n\n    swipeLeft: function swipeLeft() {\n      this.set('showGlobalMenu', false);\n    },\n    swipeRight: function swipeRight() {\n      this.set('showGlobalMenu', true);\n    },\n    tap: function tap(e) {\n      if (this.get('showGlobalMenu') && !isElementOf('channel-header', e.target) && !isElementOf('global', e.target)) {\n        this.set('showGlobalMenu', false);\n      }\n    }\n  });\n});","define(\"hyperchannel/components/app-container/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"A2LoAbSQ\", \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[11,1],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/app-container/template.hbs\" } });\n});","define('hyperchannel/components/channel-container/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component,\n      observer = Ember.observer,\n      scheduleOnce = Ember.run.scheduleOnce,\n      service = Ember.inject.service;\n\n\n  function scrollToBottom() {\n    Ember.$('#channel-content').animate({\n      scrollTop: Ember.$('#channel-content ul').height()\n    }, '500');\n  }\n\n  exports.default = Component.extend({\n\n    elementId: 'channel',\n    newMessage: '',\n    channel: null,\n    scrollingDisabled: false,\n\n    coms: service(),\n\n    messagesUpdated: observer('channel.messages.[]', function () {\n      if (!this.get('scrollingDisabled')) {\n        scheduleOnce('afterRender', scrollToBottom);\n      }\n    }),\n\n    didInsertElement: function didInsertElement() {\n      this._super.apply(this, arguments);\n\n      scheduleOnce('afterRender', scrollToBottom);\n\n      // We need to define an empty handler for swipe events on the\n      // #channel-content element, so that the actual handler of the app container\n      // component gets triggered\n      scheduleOnce('afterRender', function () {\n        Hammer(document.getElementById('channel-content')).on('swipe', function () {});\n      });\n    },\n\n\n    actions: {\n      processMessageOrCommand: function processMessageOrCommand() {\n        if (this.get('newMessage').substr(0, 1) === \"/\") {\n          this.onCommand(this.get('newMessage'));\n        } else {\n          this.onMessage(this.get('newMessage'));\n        }\n      },\n      menu: function menu(which, what) {\n        this.sendAction('menu', which, what);\n      },\n      loadPreviousMessages: function loadPreviousMessages() {\n        var _this = this;\n\n        this.set('scrollingDisabled', true);\n        this.get('coms').loadLastMessages(this.get('channel.space'), this.get('channel'), this.get('channel.searchedPreviousLogsUntilDate')).catch(function () {\n          // TODO what to do here?\n        }).finally(function () {\n          _this.set('scrollingDisabled', false);\n        });\n      }\n    }\n  });\n});","define(\"hyperchannel/components/channel-container/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"hYuyuDGz\", \"block\": \"{\\\"symbols\\\":[\\\"username\\\",\\\"message\\\"],\\\"statements\\\":[[6,\\\"main\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"header\\\"],[9,\\\"id\\\",\\\"channel-header\\\"],[9,\\\"onClick\\\",\\\"\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"menu\\\",\\\"global\\\",\\\"toggle\\\"]],[7],[0,\\\"\\\\n    \\\"],[6,\\\"h2\\\"],[9,\\\"id\\\",\\\"channel-name\\\"],[7],[1,[20,[\\\"channel\\\",\\\"name\\\"]],false],[8],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[9,\\\"id\\\",\\\"channel-title\\\"],[7],[1,[20,[\\\"channel\\\",\\\"formattedTopic\\\"]],false],[8],[0,\\\"\\\\n    \\\"],[6,\\\"nav\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[7],[6,\\\"i\\\"],[9,\\\"class\\\",\\\"icon-megaphone\\\"],[7],[8],[8],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[7],[6,\\\"i\\\"],[9,\\\"class\\\",\\\"icon-mute\\\"],[7],[8],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"section\\\"],[9,\\\"id\\\",\\\"channel-content\\\"],[9,\\\"class\\\",\\\"main\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[19,0,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"a\\\"],[9,\\\"class\\\",\\\"load-previous\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"loadPreviousMessages\\\"]],[7],[0,\\\"\\\\n        Load previous messages\\\\n      \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[6,\\\"ul\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[19,0,[\\\"channel\\\",\\\"sortedMessages\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"li\\\"],[7],[0,\\\"\\\\n          \\\"],[1,[25,\\\"component\\\",[[19,2,[\\\"type\\\"]]],[[\\\"message\\\"],[[19,2,[]]]]],false],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[4,\\\"if\\\",[[19,0,[\\\"channel\\\",\\\"isLogged\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"no-messages\\\"],[7],[0,\\\"No recent messages to display.\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"no-messages\\\"],[7],[0,\\\"No Kosmos logs configured for this channel. \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"https://wiki.kosmos.org/Setting_up_channel_logs\\\"],[9,\\\"target\\\",\\\"_blank\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[7],[0,\\\"Learn more\\\"],[8],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"footer\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"section\\\"],[9,\\\"id\\\",\\\"new-message\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"form\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"processMessageOrCommand\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"channel-input-field\\\",null,[[\\\"value\\\",\\\"placeholder\\\",\\\"name\\\",\\\"id\\\",\\\"autocomplete\\\"],[[19,0,[\\\"newMessage\\\"]],\\\"Type a message and hit enter\\\",\\\"chat-message\\\",\\\"message-field\\\",\\\"off\\\"]]],false],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"aside\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"header\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"nav\\\"],[7],[0,\\\"\\\\n      \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],[[\\\"class\\\"],[\\\"active\\\"]],{\\\"statements\\\":[[6,\\\"i\\\"],[9,\\\"class\\\",\\\"icon-users\\\"],[7],[8]],\\\"parameters\\\":[]},null],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[7],[6,\\\"i\\\"],[9,\\\"class\\\",\\\"icon-paperclip\\\"],[7],[8],[8],[4,\\\"link-to\\\",[\\\"settings\\\"],null,{\\\"statements\\\":[[6,\\\"i\\\"],[9,\\\"class\\\",\\\"icon-cog\\\"],[7],[8]],\\\"parameters\\\":[]},null],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[7],[6,\\\"i\\\"],[9,\\\"class\\\",\\\"icon-resize-enlarge\\\"],[7],[8],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"section\\\"],[9,\\\"id\\\",\\\"user-list\\\"],[9,\\\"class\\\",\\\"main\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"ul\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[19,0,[\\\"channel\\\",\\\"userList\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"li\\\"],[7],[1,[25,\\\"link-to-username\\\",null,[[\\\"username\\\"],[[19,1,[]]]]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/channel-container/template.hbs\" } });\n});","define('hyperchannel/components/channel-input-field/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.TextField.extend({\n\n    keyUp: function keyUp(ev) {\n      // console.debug('keyUp', ev);\n\n      if (ev.altKey) {\n        switch (ev.key) {\n          case 'k':\n            this._insertAtCaret('\\x03');\n            break;\n        }\n      }\n    },\n\n    _insertAtCaret: function _insertAtCaret(myValue) {\n      var el = this.$().get(0);\n\n      if (document.selection) {\n        el.focus();\n        el = document.selection.createRange();\n        el.text = myValue;\n        el.focus();\n      } else if (el.selectionStart || el.selectionStart === '0') {\n        var startPos = el.selectionStart;\n        var endPos = el.selectionEnd;\n        var scrollTop = el.scrollTop;\n        el.value = el.value.substring(0, startPos) + myValue + el.value.substring(endPos, el.value.length);\n        el.focus();\n        el.selectionStart = startPos + myValue.length;\n        el.selectionEnd = startPos + myValue.length;\n        el.scrollTop = scrollTop;\n      } else {\n        el.value += myValue;\n        el.focus();\n      }\n    }\n\n  });\n});","define('hyperchannel/components/channel-nav/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n\n    tagName: 'ul'\n\n  });\n});","define(\"hyperchannel/components/channel-nav/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JxQlsCnD\", \"block\": \"{\\\"symbols\\\":[\\\"space\\\",\\\"channel\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[19,0,[\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"li\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"h2\\\"],[7],[4,\\\"link-to\\\",[\\\"space\\\",[19,1,[]]],null,{\\\"statements\\\":[[1,[19,1,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[8],[0,\\\"\\\\n    \\\"],[6,\\\"ul\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[19,1,[\\\"sortedChannels\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"li\\\"],[10,\\\"class\\\",[26,[[25,\\\"if\\\",[[19,2,[\\\"connected\\\"]],\\\"connected\\\",\\\"disconnected\\\"],null],\\\" \\\",[19,2,[\\\"unreadMessagesClass\\\"]]]]],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[19,2,[\\\"isUserChannel\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",[\\\"space.userChannel\\\",[19,1,[]],[19,2,[]]],null,{\\\"statements\\\":[[1,[19,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"link-to\\\",[\\\"space.channel\\\",[19,1,[]],[19,2,[]]],null,{\\\"statements\\\":[[1,[19,2,[\\\"name\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"      \\\"],[6,\\\"li\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"a\\\"],[9,\\\"class\\\",\\\"join-channel\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[19,0,[]],[25,\\\"action\\\",[[19,0,[]],[19,0,[\\\"joinChannel\\\"]],[19,1,[]]],null]]],[7],[0,\\\"+\\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/channel-nav/template.hbs\" } });\n});","define('hyperchannel/components/date-headline/component', ['exports', 'moment'], function (exports, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n\n    classNames: ['date-headline'],\n\n    updateInterval: 120000, // 2 minutes\n\n    headline: Ember.computed('message.date', function () {\n      var _this = this;\n\n      var date = (0, _moment.default)(this.get('message.date'));\n\n      var scheduleUpdate = function scheduleUpdate() {\n        Ember.run.later(function () {\n          _this.notifyPropertyChange('message.date');\n        }, _this.get('updateInterval'));\n      };\n\n      if (date.isSame((0, _moment.default)(), 'day')) {\n        scheduleUpdate();\n        return 'Today';\n      }\n\n      if (date.isSame((0, _moment.default)().subtract(1, 'day'), 'day')) {\n        scheduleUpdate();\n        return 'Yesterday';\n      }\n\n      return this.get('message.date').toLocaleDateString();\n    })\n\n  });\n});","define(\"hyperchannel/components/date-headline/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"8MgoHQ5L\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"h3\\\"],[7],[1,[18,\\\"headline\\\"],false],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/date-headline/template.hbs\" } });\n});","define('hyperchannel/components/from-elsewhere', ['exports', 'ember-elsewhere/components/from-elsewhere'], function (exports, _fromElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _fromElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/components/illiquid-model\", [\"exports\", \"liquid-fire/components/illiquid-model\"], function (exports, _illiquidModel) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _illiquidModel.default;\n    }\n  });\n});","define('hyperchannel/components/link-to-username/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Component = Ember.Component,\n      computed = Ember.computed,\n      isPresent = Ember.isPresent;\n  exports.default = Component.extend({\n\n    username: null,\n\n    roles: {\n      '@': 'op',\n      '%': 'half-op',\n      '+': 'voice'\n    },\n\n    role: computed('username', 'roles', function () {\n      var role = this.get('roles')[this.get('username')[0]];\n\n      if (isPresent(role)) {\n        return role;\n      }\n\n      return 'normal';\n    }),\n\n    usernameWithoutPrefix: computed('username', 'roles', function () {\n      var regex = RegExp('^[\\\\' + Object.keys(this.get('roles')).join('\\\\') + ']');\n\n      return this.get('username').replace(regex, '');\n    })\n\n  });\n});","define(\"hyperchannel/components/link-to-username/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"51V6uCBy\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"link-to\\\",[\\\"space.userChannel\\\",[19,0,[\\\"usernameWithoutPrefix\\\"]]],[[\\\"class\\\"],[[19,0,[\\\"role\\\"]]]],{\\\"statements\\\":[[1,[18,\\\"username\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/link-to-username/template.hbs\" } });\n});","define(\"hyperchannel/components/liquid-bind\", [\"exports\", \"liquid-fire/components/liquid-bind\"], function (exports, _liquidBind) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidBind.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-child\", [\"exports\", \"liquid-fire/components/liquid-child\"], function (exports, _liquidChild) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidChild.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-container\", [\"exports\", \"liquid-fire/components/liquid-container\"], function (exports, _liquidContainer) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidContainer.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-if\", [\"exports\", \"liquid-fire/components/liquid-if\"], function (exports, _liquidIf) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidIf.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-measured\", [\"exports\", \"liquid-fire/components/liquid-measured\"], function (exports, _liquidMeasured) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidMeasured.default;\n    }\n  });\n  Object.defineProperty(exports, \"measure\", {\n    enumerable: true,\n    get: function () {\n      return _liquidMeasured.measure;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-outlet\", [\"exports\", \"liquid-fire/components/liquid-outlet\"], function (exports, _liquidOutlet) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidOutlet.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-spacer\", [\"exports\", \"liquid-fire/components/liquid-spacer\"], function (exports, _liquidSpacer) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidSpacer.default;\n    }\n  });\n});","define('hyperchannel/components/liquid-sync', ['exports', 'liquid-fire/components/liquid-sync'], function (exports, _liquidSync) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _liquidSync.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-unless\", [\"exports\", \"liquid-fire/components/liquid-unless\"], function (exports, _liquidUnless) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidUnless.default;\n    }\n  });\n});","define(\"hyperchannel/components/liquid-versions\", [\"exports\", \"liquid-fire/components/liquid-versions\"], function (exports, _liquidVersions) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _liquidVersions.default;\n    }\n  });\n});","define('hyperchannel/components/message-chat-me/component', ['exports', 'hyperchannel/components/message-chat/component'], function (exports, _component) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _component.default.extend({\n    classNames: ['chat-message', 'chat-me-message']\n  });\n});","define(\"hyperchannel/components/message-chat-me/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"paP8735e\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"span\\\"],[9,\\\"class\\\",\\\"username\\\"],[10,\\\"data-username\\\",[20,[\\\"message\\\",\\\"nickname\\\"]],null],[7],[1,[20,[\\\"message\\\",\\\"nickname\\\"]],false],[8],[0,\\\"\\\\n\\\"],[6,\\\"span\\\"],[9,\\\"class\\\",\\\"message\\\"],[7],[1,[18,\\\"formattedContent\\\"],false],[8],[0,\\\"\\\\n\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/message-chat-me/template.hbs\" } });\n});","define('hyperchannel/components/message-chat/component', ['exports', 'moment'], function (exports, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var computed = Ember.computed,\n      htmlSafe = Ember.String.htmlSafe;\n  exports.default = Ember.Component.extend({\n    tagName: 'div',\n    classNames: ['chat-message'],\n\n    message: null,\n\n    datetime: computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD[T]HH:mm');\n    }),\n\n    dateTitle: computed('message.date', function () {\n      return (0, _moment.default)(this.get('message.date')).format('YYYY-MM-DD [at] HH:mm');\n    }),\n\n    formattedContent: computed('message.content', function () {\n      var content = this.get('message.content');\n      var out = void 0;\n\n      // Images\n      if (content.match(/^(http)s?:\\/\\/.*(gif|png|jpg|jpeg)$/i)) {\n        out = '<br><a href=\"' + content + '\" target=\"_blank\" rel=\"nofollow noopener\">' + ('<img src=\"' + content + '\" class=\"from-image-url\" alt=\"' + content + '\">') + '</a>';\n      }\n      // Other links\n      else {\n          out = linkifyStr(content, {\n            linkAttributes: { rel: 'nofollow noopener' },\n            validate: {\n              url: function url(value) {\n                return (/^(http)s?:\\/\\//.test(value)\n                );\n              },\n              email: function email() {\n                return false;\n              }\n            }\n          });\n        }\n\n      // Colors\n      out = out.replace(/\\u0003(\\d+)/g, '<span class=\"color-$1\">').replace(/\"color-(\\d)\"/g, '\"color-0$1\"').replace(/\\u0002/g, '<span class=\"bold\">').replace(/\\u001D/g, '<span class=\"italic\">').replace(/\\u000f/g, '</span>');\n\n      return htmlSafe(out);\n    })\n  });\n});","define(\"hyperchannel/components/message-chat/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"z8kWt4IN\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"span\\\"],[9,\\\"class\\\",\\\"chat-message__username\\\"],[10,\\\"data-username\\\",[20,[\\\"message\\\",\\\"nickname\\\"]],null],[7],[0,\\\"\\\\n  \\\"],[1,[20,[\\\"message\\\",\\\"nickname\\\"]],false],[0,\\\":\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"time\\\"],[9,\\\"class\\\",\\\"chat-message__date\\\"],[10,\\\"datetime\\\",[18,\\\"datetime\\\"],null],[10,\\\"title\\\",[18,\\\"dateTitle\\\"],null],[7],[0,\\\"\\\\n  \\\"],[1,[25,\\\"moment-format\\\",[[19,0,[\\\"message\\\",\\\"date\\\"]],\\\"HH:mm\\\"],null],false],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"span\\\"],[9,\\\"class\\\",\\\"chat-message__message\\\"],[7],[0,\\\"\\\\n  \\\"],[1,[18,\\\"formattedContent\\\"],false],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/message-chat/template.hbs\" } });\n});","define('hyperchannel/components/modal-target/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    modalAnimation: function modalAnimation() {\n      return this.lookup('explode').call(this, {\n        pick: '.modal-background',\n        use: ['fade', { maxOpacity: 0.5 }]\n      }, {\n        pick: '.modal-dialog',\n        use: 'scale'\n      });\n    },\n\n\n    actions: {\n      outsideClick: function outsideClick(modal) {\n        if (modal && modal.onOutsideClick) {\n          modal.onOutsideClick();\n        }\n      }\n    }\n\n  });\n});","define(\"hyperchannel/components/modal-target/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3Fm0k3TT\", \"block\": \"{\\\"symbols\\\":[\\\"modal\\\",\\\"currentModal\\\"],\\\"statements\\\":[[4,\\\"from-elsewhere\\\",null,[[\\\"name\\\"],[\\\"modal\\\"]],{\\\"statements\\\":[[4,\\\"liquid-bind\\\",[[19,1,[]]],[[\\\"containerless\\\",\\\"use\\\"],[true,[19,0,[\\\"modalAnimation\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[19,2,[]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"modal-container\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"modal-background\\\"],[10,\\\"onclick\\\",[25,\\\"action\\\",[[19,0,[]],\\\"outsideClick\\\",[19,2,[]]],null],null],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[7],[8],[0,\\\"\\\\n        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"modal-dialog\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[19,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[25,\\\"component\\\",[[19,2,[\\\"body\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[25,\\\"component\\\",[[19,2,[]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/modal-target/template.hbs\" } });\n});","define('hyperchannel/components/multiple-from-elsewhere', ['exports', 'ember-elsewhere/components/multiple-from-elsewhere'], function (exports, _multipleFromElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _multipleFromElsewhere.default;\n    }\n  });\n});","define('hyperchannel/components/notification-topic-change/component', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n\n    tagName: 'div',\n    classNames: ['topic-change-notification']\n\n  });\n});","define(\"hyperchannel/components/notification-topic-change/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"I+LsLdTX\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"Topic was changed to \\\\\\\"\\\"],[1,[20,[\\\"message\\\",\\\"content\\\"]],false],[0,\\\"\\\\\\\" by \\\"],[6,\\\"span\\\"],[9,\\\"class\\\",\\\"username\\\"],[10,\\\"data-username\\\",[20,[\\\"message\\\",\\\"nickname\\\"]],null],[7],[1,[20,[\\\"message\\\",\\\"nickname\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/notification-topic-change/template.hbs\" } });\n});","define('hyperchannel/components/space-setting-modal/component', ['exports', 'hyperchannel/models/space'], function (exports, _space) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n\n    settings: null,\n    space: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      // create a clone of the settings that we can operate on\n      this.set('space', _space.default.create(this.get('settings').serialize()));\n    },\n\n\n    actions: {\n      save: function save() {\n        this.onSave(this.get('space'));\n      },\n      cancel: function cancel() {\n        this.onCancel();\n      }\n    }\n\n  });\n});","define(\"hyperchannel/components/space-setting-modal/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"91hLjWEF\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"h1\\\"],[7],[0,\\\"Space Setting\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"form\\\"],[9,\\\"name\\\",\\\"add-space\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"save\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[7],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"space\\\",\\\"protocol\\\"]],\\\"required\\\",\\\"IRC\\\"]]],false],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"space\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"space\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"space\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[25,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[19,0,[\\\"space\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled-modal\\\"]]],false],[0,\\\"\\\\n    \\\"],[6,\\\"label\\\"],[9,\\\"for\\\",\\\"tls-enabled-modal\\\"],[7],[0,\\\"Secure (TLS)\\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[19,0,[\\\"space\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[19,0,[\\\"space\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"space\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    username:  \\\"],[1,[20,[\\\"space\\\",\\\"server\\\",\\\"username\\\"]],false],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"input\\\"],[9,\\\"type\\\",\\\"submit\\\"],[9,\\\"value\\\",\\\"Save\\\"],[7],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"button\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"cancel\\\"]],[7],[0,\\\"Cancel\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/components/space-setting-modal/template.hbs\" } });\n});","define('hyperchannel/components/to-elsewhere', ['exports', 'ember-elsewhere/components/to-elsewhere'], function (exports, _toElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toElsewhere.default;\n    }\n  });\n});","define('hyperchannel/controllers/application', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = Ember.Controller,\n      alias = Ember.computed.alias,\n      service = Ember.inject.service;\n  exports.default = Controller.extend({\n\n    coms: service(),\n    spaces: alias('coms.spaces'),\n\n    showGlobalMenu: false,\n    showChannelMenu: false\n\n  });\n});","define('hyperchannel/controllers/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n\n    application: Ember.inject.controller()\n\n  });\n});","define('hyperchannel/controllers/settings', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = Ember.Controller,\n      _Ember$inject = Ember.inject,\n      controller = _Ember$inject.controller,\n      service = _Ember$inject.service,\n      notEmpty = Ember.computed.notEmpty;\n  exports.default = Controller.extend({\n\n    application: controller(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    newSpace: null,\n    selectedSpacePreset: null,\n\n    showSpaceSettingModal: notEmpty('selectedSpacePreset'),\n\n    actions: {\n      addSpaceFromPreset: function addSpaceFromPreset(preset) {\n        this.set('selectedSpacePreset', preset);\n      },\n      saveSpace: function saveSpace(space) {\n        var _this = this;\n\n        this.set('selectedSpacePreset', null);\n\n        this.get('storage').saveSpace(space).then(function () {\n          _this.get('coms').connectAndAddSpace(space);\n        });\n      }\n    }\n\n  });\n});","define('hyperchannel/controllers/space', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({});\n});","define('hyperchannel/controllers/space/base_channel', ['exports', 'hyperchannel/models/message'], function (exports, _message) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Controller = Ember.Controller,\n      _Ember$inject = Ember.inject,\n      controller = _Ember$inject.controller,\n      service = _Ember$inject.service,\n      Logger = Ember.Logger,\n      isPresent = Ember.isPresent;\n  exports.default = Controller.extend({\n\n    newMessage: null,\n    space: controller(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    createMessage: function createMessage(message, type) {\n      return _message.default.create({\n        type: type,\n        date: new Date(),\n        nickname: this.get('space.model.server.nickname'),\n        content: message\n      });\n    },\n\n\n    actions: {\n      sendMessage: function sendMessage(newMessage) {\n        var message = this.createMessage(newMessage, 'message-chat');\n\n        this.get('coms').transferMessage(this.get('space.model'), this.get('model'), message.get('content'));\n\n        this.get('model.messages').pushObject(message);\n        this.set('newMessage', null);\n      },\n\n      executeCommand: function executeCommand(newMessage) {\n        var availableCommands = [\"help\", \"join\", \"leave\", \"me\", \"msg\", \"part\", \"topic\"];\n        var commandText = newMessage.substr(1);\n        var commandSplitted = commandText.split(\" \");\n        var command = commandSplitted[0];\n\n        if (availableCommands.includes(command.toLowerCase())) {\n          this.send(command + 'Command', commandSplitted.slice(1));\n        } else {\n          Logger.warn('[channel]', 'Unknown command', commandText);\n        }\n\n        this.set('newMessage', null);\n      },\n\n      joinCommand: function joinCommand(args) {\n        var space = this.get('space.model');\n        var channel = this.get('coms').createChannel(space, args[0]);\n        this.get('storage').saveSpace(space);\n        this.transitionToRoute('space.channel', space, channel);\n      },\n\n      partCommand: function partCommand() {\n        var space = this.get('space.model');\n        var channelName = this.get('model.name');\n        this.get('coms').removeChannel(space, channelName);\n        var lastChannel = space.get('channels.lastObject');\n        if (isPresent(lastChannel)) {\n          this.transitionToRoute('space.channel', space, lastChannel);\n        } else {\n          this.transitionToRoute('space', space);\n        }\n      },\n\n      leaveCommand: function leaveCommand() {\n        this.send('partCommand');\n      },\n\n      helpCommand: function helpCommand() {},\n\n      meCommand: function meCommand(args) {\n        var newMessage = args.join(' ');\n\n        var message = this.createMessage(newMessage, 'message-chat-me');\n\n        this.get('coms').transferMeMessage(this.get('space.model'), this.get('model.sockethubChannelId'), message.get('content'));\n\n        this.get('model.messages').pushObject(message);\n      },\n\n      msgCommand: function msgCommand(args) {\n        var username = args.shift();\n        this.get('coms').createUserChannel(this.get('space.model'), username);\n        // TODO fix this, sockethub sends a failure event with error\n        // \"TypeError: Cannot read property 'indexOf' of undefined\"\n        // this.get('coms').transferMessage(this.get('space.model'), username, args.join(' '));\n      },\n\n      topicCommand: function topicCommand(args) {\n        var channel = this.get('model');\n        var topic = args.join(' ');\n\n        this.get('coms').changeTopic(this.get('space.model'), channel, topic);\n      }\n    }\n\n  });\n});","define('hyperchannel/controllers/space/channel', ['exports', 'hyperchannel/controllers/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({});\n});","define('hyperchannel/controllers/space/user_channel', ['exports', 'hyperchannel/controllers/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({});\n});","define('hyperchannel/ember-gestures/recognizers/pan', ['exports', 'ember-gestures/recognizers/pan'], function (exports, _pan) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pan.default;\n});","define('hyperchannel/ember-gestures/recognizers/pinch', ['exports', 'ember-gestures/recognizers/pinch'], function (exports, _pinch) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pinch.default;\n});","define('hyperchannel/ember-gestures/recognizers/press', ['exports', 'ember-gestures/recognizers/press'], function (exports, _press) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _press.default;\n});","define('hyperchannel/ember-gestures/recognizers/rotate', ['exports', 'ember-gestures/recognizers/rotate'], function (exports, _rotate) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _rotate.default;\n});","define('hyperchannel/ember-gestures/recognizers/swipe', ['exports', 'ember-gestures/recognizers/swipe'], function (exports, _swipe) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _swipe.default;\n});","define('hyperchannel/ember-gestures/recognizers/swipeleft', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    include: [],\n    exclude: [],\n    options: { threshold: 25, direction: Hammer.DIRECTION_LEFT },\n    eventName: 'swipeleft',\n    recognizer: 'swipe'\n  };\n});","define('hyperchannel/ember-gestures/recognizers/swiperight', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    include: [],\n    exclude: [],\n    options: { threshold: 25, direction: Hammer.DIRECTION_RIGHT },\n    eventName: 'swiperight',\n    recognizer: 'swipe'\n  };\n});","define('hyperchannel/ember-gestures/recognizers/tap', ['exports', 'ember-gestures/recognizers/tap'], function (exports, _tap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _tap.default;\n    }\n  });\n});","define('hyperchannel/ember-gestures/recognizers/vertical-pan', ['exports', 'ember-gestures/recognizers/vertical-pan'], function (exports, _verticalPan) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _verticalPan.default;\n    }\n  });\n});","define('hyperchannel/ember-gestures/recognizers/vertical-swipe', ['exports', 'ember-gestures/recognizers/vertical-swipe'], function (exports, _verticalSwipe) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _verticalSwipe.default;\n    }\n  });\n});","define('hyperchannel/event_dispatcher', ['exports', 'ember-gestures/event_dispatcher', 'hyperchannel/config/environment'], function (exports, _event_dispatcher, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var merge = Ember.assign || Ember.merge;\n\n  var gestures = merge({}, {\n    emberUseCapture: false,\n    removeTracking: false,\n    useFastPaths: false\n  });\n  gestures = merge(gestures, _environment.default.gestures);\n\n  exports.default = _event_dispatcher.default.extend({\n    useCapture: gestures.emberUseCapture,\n    removeTracking: gestures.removeTracking,\n    useFastPaths: gestures.useFastPaths\n  });\n});","define('hyperchannel/helpers/app-version', ['exports', 'hyperchannel/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  var version = _environment.default.APP.version;\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (hash.hideSha) {\n      return version.match(_regexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_regexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('hyperchannel/helpers/is-after', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/is-after'], function (exports, _environment, _isAfter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isAfter.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-before', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/is-before'], function (exports, _environment, _isBefore) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isBefore.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-between', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/is-between'], function (exports, _environment, _isBetween) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isBetween.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same-or-after', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same-or-after'], function (exports, _environment, _isSameOrAfter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isSameOrAfter.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same-or-before', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same-or-before'], function (exports, _environment, _isSameOrBefore) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isSameOrBefore.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/is-same', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/is-same'], function (exports, _environment, _isSame) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _isSame.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/lf-lock-model', ['exports', 'liquid-fire/helpers/lf-lock-model'], function (exports, _lfLockModel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _lfLockModel.default;\n    }\n  });\n  Object.defineProperty(exports, 'lfLockModel', {\n    enumerable: true,\n    get: function () {\n      return _lfLockModel.lfLockModel;\n    }\n  });\n});","define('hyperchannel/helpers/lf-or', ['exports', 'liquid-fire/helpers/lf-or'], function (exports, _lfOr) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _lfOr.default;\n    }\n  });\n  Object.defineProperty(exports, 'lfOr', {\n    enumerable: true,\n    get: function () {\n      return _lfOr.lfOr;\n    }\n  });\n});","define('hyperchannel/helpers/moment-add', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-add'], function (exports, _environment, _momentAdd) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentAdd.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-calendar', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-calendar'], function (exports, _environment, _momentCalendar) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentCalendar.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-duration', ['exports', 'ember-moment/helpers/moment-duration'], function (exports, _momentDuration) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _momentDuration.default;\n    }\n  });\n});","define('hyperchannel/helpers/moment-format', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-format'], function (exports, _environment, _momentFormat) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentFormat.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-from-now', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-from-now'], function (exports, _environment, _momentFromNow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentFromNow.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-from', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-from'], function (exports, _environment, _momentFrom) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentFrom.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-subtract', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-subtract'], function (exports, _environment, _momentSubtract) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentSubtract.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to-date', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to-date'], function (exports, _environment, _momentToDate) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentToDate.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to-now', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to-now'], function (exports, _environment, _momentToNow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentToNow.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-to', ['exports', 'hyperchannel/config/environment', 'ember-moment/helpers/moment-to'], function (exports, _environment, _momentTo) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _momentTo.default.extend({\n    globalAllowEmpty: !!Ember.get(_environment.default, 'moment.allowEmpty')\n  });\n});","define('hyperchannel/helpers/moment-unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _unix) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _unix.default;\n    }\n  });\n  Object.defineProperty(exports, 'unix', {\n    enumerable: true,\n    get: function () {\n      return _unix.unix;\n    }\n  });\n});","define('hyperchannel/helpers/moment', ['exports', 'ember-moment/helpers/moment'], function (exports, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _moment.default;\n    }\n  });\n});","define('hyperchannel/helpers/now', ['exports', 'ember-moment/helpers/now'], function (exports, _now) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _now.default;\n    }\n  });\n});","define('hyperchannel/helpers/route-action', ['exports', 'ember-route-action-helper/helpers/route-action'], function (exports, _routeAction) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _routeAction.default;\n    }\n  });\n});","define('hyperchannel/helpers/unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _unix) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _unix.default;\n    }\n  });\n  Object.defineProperty(exports, 'unix', {\n    enumerable: true,\n    get: function () {\n      return _unix.unix;\n    }\n  });\n});","define('hyperchannel/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'hyperchannel/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _config$APP = _environment.default.APP,\n      name = _config$APP.name,\n      version = _config$APP.version;\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('hyperchannel/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('hyperchannel/initializers/ember-hammertime', ['exports', 'ember-hammertime/components/component'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-hammertime',\n    initialize: function initialize() {}\n  };\n});","define('hyperchannel/initializers/export-application-global', ['exports', 'hyperchannel/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('hyperchannel/initializers/hammer', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'hammer',\n\n    initialize: function initialize() {\n      // Enable text selection.\n      // It's disabled by default to improve UX on desktop, so text wouldn't\n      // be selected when panning.\n      delete Hammer.defaults.cssProps.userSelect;\n    }\n  };\n});","define(\"hyperchannel/initializers/liquid-fire\", [\"exports\", \"liquid-fire/ember-internals\"], function (exports, _emberInternals) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  (0, _emberInternals.initialize)();\n\n  exports.default = {\n    name: 'liquid-fire',\n    initialize: function initialize() {}\n  };\n});","define('hyperchannel/initializers/sockethub', ['exports', 'hyperchannel/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  // TODO move settings into config file\n  var sockethub = new SockethubClient(io(_environment.default.sockethubURL, { path: '/sockethub' })); /* global SockethubClient */\n  /* global io */\n  exports.default = {\n    name: 'sockethub',\n\n    initialize: function initialize(app) {\n      app.register('sockethub:client', sockethub, { instantiate: false, singleton: true });\n\n      app.inject('controller', 'sockethub', 'sockethub:client');\n      app.inject('route', 'sockethub', 'sockethub:client');\n      app.inject('component', 'sockethub', 'sockethub:client');\n      app.inject('service', 'sockethub', 'sockethub:client');\n    }\n  };\n});","define('hyperchannel/instance-initializers/ember-gestures', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var getOwner = Ember.getOwner;\n  exports.default = {\n    name: 'ember-gestures',\n\n    initialize: function initialize(instance) {\n      if (typeof instance.lookup === \"function\") {\n        instance.lookup('service:-gestures');\n      } else {\n        // This can be removed when we no-longer support ember 1.12 and 1.13\n        getOwner(instance).lookup('service:-gestures');\n      }\n    }\n\n  };\n});","define('hyperchannel/instance-initializers/remotestorage', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize(appInstance) {\n    var storage = appInstance.lookup('service:remotestorage');\n    var remoteStorage = storage.get('rs');\n\n    // Add to window global for debugging/development\n    window.remoteStorage = remoteStorage;\n\n    var rsEvents = ['ready', 'not-connected', 'connected', 'disconnected', 'error', 'features-loaded', 'connecting', 'authing', 'wire-busy', 'wire-done', 'network-offline', 'network-online'];\n\n    rsEvents.forEach(function (evt) {\n      remoteStorage.on(evt, function () {\n        return Ember.Logger.debug('[remotestorage] RS event: ' + evt);\n      });\n    });\n  }\n\n  exports.default = {\n    name: 'remotestorage',\n    initialize: initialize\n  };\n});","define('hyperchannel/models/base_channel', ['exports', 'hyperchannel/models/message', 'moment'], function (exports, _message, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var computed = Ember.computed,\n      isPresent = Ember.isPresent;\n  exports.default = Ember.Object.extend({\n\n    space: null,\n    name: '',\n    userList: null,\n    messages: null,\n    connected: false,\n    sockethubChannelId: null,\n    topic: null,\n    unreadMessages: false,\n    unreadMentions: false,\n    visible: false, // Current/active channel\n\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this.set('messages', []);\n      this.set('userList', []);\n    },\n\n\n    isLogged: computed('space.loggedChannels.[]', 'name', function () {\n      var _this = this;\n\n      var loggedChannel = this.get('space.loggedChannels').find(function (channelName) {\n        return channelName === _this.get('name');\n      });\n\n      return isPresent(loggedChannel);\n    }),\n\n    slug: computed('name', function () {\n      // This could be based on server type in the future. E.g. IRC would be\n      // server URL, while Campfire would be another id.\n      return this.get('name').replace(/#/g, '');\n    }),\n\n    unreadMessagesClass: computed('visible', 'unreadMessages', 'unreadMentions', function () {\n      if (this.get('visible') || !this.get('unreadMessages')) {\n        return null;\n      }\n      return this.get('unreadMentions') ? 'unread-mentions' : 'unread-messages';\n    }),\n\n    sortedMessages: computed('messages.@each.date', function () {\n      return this.get('messages').sortBy('date');\n    }),\n\n    addDateHeadline: function addDateHeadline(newMessage) {\n      var headlineDate = (0, _moment.default)(newMessage.get('date')).startOf('day').toDate();\n\n      var existingDateHeadline = this.get('messages').find(function (message) {\n        return message.get('type') === 'date-headline' && message.get('date').toString() === headlineDate.toString();\n      });\n\n      if (existingDateHeadline) {\n        return;\n      }\n\n      var dateMessage = _message.default.create({ type: 'date-headline', date: headlineDate });\n      this.get('messages').pushObject(dateMessage);\n    },\n    addMessage: function addMessage(message) {\n      this.addDateHeadline(message);\n\n      this.get('messages').pushObject(message);\n\n      if (!this.get('visible')) {\n        this.set('unreadMessages', true);\n        if (message.get('content').match(this.get('space.userNickname'))) {\n          this.set('unreadMentions', true);\n        }\n      }\n    },\n    addUser: function addUser(username) {\n      if (!this.get('userList').includes(username)) {\n        this.get('userList').pushObject(username);\n      }\n    },\n    removeUser: function removeUser(username) {\n      this.get('userList').removeObject(username);\n    }\n  });\n});","define('hyperchannel/models/channel', ['exports', 'hyperchannel/models/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    searchedPreviousLogsUntilDate: null,\n\n    formattedTopic: Ember.computed('topic', function () {\n      if (this.get('topic') !== null) {\n        var topic = linkifyStr(this.get('topic'), {\n          defaultProtocol: 'https',\n          linkAttributes: { rel: 'nofollow' }\n        });\n        return new Ember.String.htmlSafe(topic);\n      } else {\n        return '';\n      }\n    })\n\n  });\n});","define('hyperchannel/models/message', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Object.extend({\n\n    type: null,\n    date: null,\n    nickname: null,\n    content: null\n\n  });\n});","define('hyperchannel/models/space', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var computed = Ember.computed,\n      isPresent = Ember.isPresent;\n  exports.default = Ember.Object.extend({\n\n    name: null,\n    protocol: 'IRC',\n    server: {\n      hostname: null,\n      port: 7000,\n      secure: true,\n      username: null,\n      password: null,\n      nickname: null,\n      nickServ: {\n        password: null\n      }\n    },\n    channels: null, // Channel instances\n\n    // Keep a list of all old sockethubPersonIds, because there might\n    // still be coming events from Sockethub for those.\n    previousSockethubPersonIds: null,\n\n    init: function init() {\n      this._super.apply(this, arguments);\n      this.set('channels', []);\n      this.set('previousSockethubPersonIds', []);\n    },\n\n\n    channelNames: computed('channels.@each.name', function () {\n      return this.get('channels').mapBy('name');\n    }),\n\n    sockethubChannelIds: computed('channels.@each.sockethubChannelId', function () {\n      return this.get('channels').mapBy('sockethubChannelId');\n    }),\n\n    loggedChannels: computed('name', 'protocol', function () {\n      if (this.get('name') === 'Freenode' && this.get('protocol') === 'IRC') {\n        return ['#5apps', '#kosmos', '#kosmos-dev', '#remotestorage', '#hackerbeach', '#unhosted', '#sockethub', '#opensourcedesign', '#openknot', '#emberjs', '#indieweb', '#mastodon'];\n      } else {\n        return [];\n      }\n    }),\n\n    userNickname: computed.alias('server.nickname'),\n\n    updateUsername: function updateUsername(username) {\n      // keep track of old name for later reference\n      this.get('previousSockethubPersonIds').pushObject(this.get('sockethubPersonId'));\n\n      switch (this.get('protocol')) {\n        case 'IRC':\n          this.set('server.nickname', username);\n          break;\n        case 'XMPP':\n          this.set('server.username', username);\n          break;\n      }\n    },\n\n\n    sockethubPersonId: function () {\n      var personID = void 0;\n      switch (this.get('protocol')) {\n        case 'IRC':\n          // TODO - remove the use of any URI protocol part\n          personID = 'irc://' + this.get('server.nickname') + '@' + this.get('server.hostname');\n          break;\n        case 'XMPP':\n          // TODO - why isn't the full JID user+host+resource?\n          personID = this.get('server.username') + '/hyperchannel';\n          break;\n      }\n      return personID;\n    }.property('protocol', 'server.hostname', 'server.username', 'server.nickname'),\n\n    channelSorting: ['name'],\n    sortedChannels: computed.sort('channels', 'channelSorting'),\n\n    serialize: function serialize() {\n      var _this = this;\n\n      var serialized = {\n        id: this.get('id') || this.get('name').dasherize(),\n        name: this.get('name'),\n        protocol: this.get('protocol'),\n        server: {\n          hostname: this.get('server.hostname'),\n          port: parseInt(this.get('server.port'), 10),\n          secure: this.get('server.secure'),\n          nickname: this.get('server.nickname')\n        },\n        channels: this.get('channelNames') || []\n      };\n\n      ['username', 'password', 'nickname'].forEach(function (prop) {\n        // TODO credentials need to be encrypted and probably stored elsewhere\n        if (isPresent(_this.get('server.' + prop))) {\n          serialized.server[prop] = _this.get('server.' + prop);\n        }\n      });\n\n      return serialized;\n    }\n  });\n});","define('hyperchannel/models/user_channel', ['exports', 'hyperchannel/models/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    isUserChannel: true\n\n  });\n});","define('hyperchannel/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('hyperchannel/router', ['exports', 'hyperchannel/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('space', { path: '/:id' }, function () {\n      this.route('channel', { path: '/channel/:slug' });\n      this.route('userChannel', { path: '/user/:slug' });\n    });\n\n    this.route('settings');\n  });\n\n  exports.default = Router;\n});","define('hyperchannel/routes/application', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = Ember.Route,\n      service = Ember.inject.service,\n      isEmpty = Ember.isEmpty;\n  exports.default = Route.extend({\n    logger: service(),\n    coms: service(),\n    storage: service('remotestorage'),\n\n    beforeModel: function beforeModel() {\n      this._super.apply(this, arguments);\n      // See a list of allowed types in logger.js\n      // Add or remove all your log types here:\n      // this.get('logger').add('message');\n      // this.get('logger').remove('join');\n      // this.get('logger').disable();\n      // this.get('logger').enable();\n    },\n    model: function model() {\n      this.get('coms').setupListeners();\n      return this.get('coms').instantiateSpacesAndChannels();\n    },\n\n\n    actions: {\n      menu: function menu(which, what) {\n        var menuProp = 'show' + which.capitalize() + 'Menu';\n\n        switch (what) {\n          case 'show':\n            this.controller.set(menuProp, true);\n            break;\n          case 'hide':\n            this.controller.set(menuProp, false);\n            break;\n          case 'toggle':\n            this.controller.toggleProperty(menuProp);\n            break;\n        }\n      },\n      openNewChannel: function openNewChannel(space) {\n        var channelName = window.prompt('Join channel');\n\n        if (isEmpty(channelName)) {\n          return;\n        }\n\n        if (space.get('protocol') === 'IRC' && !channelName.match(/^#/)) {\n          channelName = '#' + channelName;\n        }\n        var channel = this.get('coms').createChannel(space, channelName);\n        this.get('storage').saveSpace(space);\n        this.transitionTo('space.channel', space, channel);\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/index', ['exports', 'ember-local-storage'], function (exports, _emberLocalStorage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n\n    redirect: function redirect() {\n      var currentSpace = this.get('userSettings.currentSpace') || 'freenode';\n      var currentChannel = this.get('userSettings.currentChannel') || '#kosmos';\n\n      if (currentSpace && currentChannel) {\n        this.transitionTo('space.channel', currentSpace, currentChannel);\n      }\n    }\n  });\n});","define('hyperchannel/routes/settings', ['exports', 'hyperchannel/models/space', 'hyperchannel/config/environment'], function (exports, _space, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = Ember.Route,\n      service = Ember.inject.service,\n      isEmpty = Ember.isEmpty,\n      Logger = Ember.Logger,\n      RSVP = Ember.RSVP;\n  exports.default = Route.extend({\n\n    storage: service('remotestorage'),\n    coms: service(),\n\n    model: function model() {\n      var rsKosmos = this.get('storage.rs').kosmos;\n\n      var spaces = rsKosmos.spaces.getAll().then(function (res) {\n        var col = [];\n        if (isEmpty(res)) {\n          return col;\n        }\n        Object.keys(res).forEach(function (id) {\n          col.push(_space.default.create(res[id]));\n        });\n        return col;\n      }, function (e) {\n        Logger.error(e);\n      });\n\n      return RSVP.hash({\n        spaces: spaces,\n        spacePresets: _environment.default.spacePresets.map(function (preset) {\n          return _space.default.create(preset);\n        })\n      });\n    },\n    setupController: function setupController(controller) {\n      this._super.apply(this, arguments);\n      controller.set('newSpace', _space.default.create());\n    },\n\n\n    actions: {\n      addSpace: function addSpace() {\n        var _this = this;\n\n        var newSpace = this.controller.get('newSpace');\n        newSpace.set('id', newSpace.get('name').dasherize());\n\n        this.get('storage').saveSpace(newSpace).then(function () {\n          _this.get('coms').connectAndAddSpace(newSpace);\n          _this.modelFor('settings').spaces.pushObject(newSpace);\n        }, function (e) {\n          Logger.error('error saving in RS', newSpace, e);\n        });\n      },\n      removeSpace: function removeSpace(space) {\n        var _this2 = this;\n\n        this.get('storage').removeSpace(space).then(function () {\n          _this2.modelFor('settings').spaces.removeObject(space);\n        }, function (e) {\n          Logger.error('error deleting from RS', space, e);\n        });\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/space', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    coms: Ember.inject.service(),\n\n    model: function model(params) {\n      return this.get('coms').get('spaces').findBy('id', params.id);\n    }\n\n  });\n});","define('hyperchannel/routes/space/base_channel', ['exports', 'ember-local-storage'], function (exports, _emberLocalStorage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Route = Ember.Route,\n      service = Ember.inject.service,\n      _Ember$run = Ember.run,\n      later = _Ember$run.later,\n      scheduleOnce = _Ember$run.scheduleOnce;\n\n\n  function focusMessageInput() {\n    if (window.innerWidth > 900) {\n      Ember.$('input#message-field').focus();\n    } else {\n      // Don't auto-focus on small screens\n    }\n  }\n\n  exports.default = Route.extend({\n    coms: service(),\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n\n    model: function model(params) {\n      var space = this.modelFor('space');\n      var channel = space.get('channels').findBy('slug', params.slug);\n\n      if (!channel) {\n        channel = this.createChannelOrUserChannel(space, params.slug);\n      }\n\n      return channel;\n    },\n    setupController: function setupController(controller, model) {\n      this._super(controller, model);\n\n      scheduleOnce('afterRender', function () {\n        focusMessageInput();\n      });\n    },\n\n\n    actions: {\n      didTransition: function didTransition() {\n        var _this = this;\n\n        var space = this.modelFor('space');\n        var channel = this.controller.get('model');\n\n        this.set('userSettings.currentSpace', space.get('id'));\n        this.set('userSettings.currentChannel', channel.get('slug'));\n\n        // Mark all other channels as inactive/invisible\n        this.get('coms.spaces').forEach(function (space) {\n          space.get('channels').setEach('visible', false);\n        });\n\n        // Mark channel as active/visible\n        channel.set('visible', true);\n\n        // Mark unread messages as read\n        channel.set('unreadMessages', false);\n        channel.set('unreadMentions', false);\n\n        later(this, function () {\n          return _this.send('menu', 'global', 'hide');\n        }, 500);\n      }\n    }\n\n  });\n});","define('hyperchannel/routes/space/channel', ['exports', 'hyperchannel/routes/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.get('coms').createChannel(space, \"#\" + channelName);\n    }\n\n  });\n});","define('hyperchannel/routes/space/user_channel', ['exports', 'hyperchannel/routes/space/base_channel'], function (exports, _base_channel) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base_channel.default.extend({\n\n    createChannelOrUserChannel: function createChannelOrUserChannel(space, channelName) {\n      return this.get('coms').createUserChannel(space, channelName);\n    }\n\n  });\n});","define('hyperchannel/services/-gestures', ['exports', 'hyperchannel/config/environment', 'ember-gestures/services/-gestures'], function (exports, _environment, _gestures) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var merge = Ember.assign || Ember.merge;\n\n  var gestures = merge({}, {\n    useCapture: false\n  });\n  gestures = merge(gestures, _environment.default.gestures);\n\n  exports.default = _gestures.default.extend({\n    useCapture: gestures.useCapture\n  });\n});","define('hyperchannel/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define('hyperchannel/services/coms', ['exports', 'hyperchannel/models/space', 'hyperchannel/models/channel', 'hyperchannel/models/user_channel', 'hyperchannel/models/message', 'hyperchannel/config/environment', 'moment', 'ember-local-storage'], function (exports, _space, _channel, _user_channel, _message, _environment, _moment, _emberLocalStorage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var Service = Ember.Service,\n      service = Ember.inject.service,\n      RSVP = Ember.RSVP,\n      isEmpty = Ember.isEmpty,\n      isPresent = Ember.isPresent,\n      Logger = Ember.Logger,\n      get = Ember.get;\n  exports.default = Service.extend({\n\n    // Utils\n    ajax: service(),\n    logger: service(),\n    // Data storage\n    userSettings: (0, _emberLocalStorage.storageFor)('user-settings'),\n    storage: service('remotestorage'),\n    // Message transport\n    irc: service('sockethub-irc'),\n    xmpp: service('sockethub-xmpp'),\n\n    /**\n     * A collection of all space model instances\n     * @type {Space[]}\n     */\n    spaces: null,\n\n    /**\n     * This is called from the application route on app startup. Sets up all\n     * listeners for incoming Sockethub messages.\n     * @public\n     */\n    setupListeners: function setupListeners() {\n      this.sockethub.socket.on('completed', this.handleSockethubCompleted.bind(this));\n      this.sockethub.socket.on('message', this.handleSockethubMessage.bind(this));\n      this.sockethub.socket.on('failure', this.handleSockethubFailure.bind(this));\n    },\n\n\n    /**\n     * This is called from the application route on app startup. Instantiates,\n     * connects, and joins all either configured/saved or default spaces/channels\n     * @public\n     */\n    instantiateSpacesAndChannels: function instantiateSpacesAndChannels() {\n      var _this = this;\n\n      this.set('spaces', []);\n      var rs = this.get('storage.rs');\n\n      return new RSVP.Promise(function (resolve, reject) {\n        rs.kosmos.spaces.getAll().then(function (spaceData) {\n          if (isEmpty(Object.keys(spaceData))) {\n            Logger.debug('No space data found in RS. Adding default space...');\n            _this.get('storage').addDefaultSpace().then(function (data) {\n              _this.connectAndAddSpace(data.space);\n              _this.instantiateChannels(data.space, data.channels);\n              resolve();\n            });\n          } else {\n            Object.keys(spaceData).forEach(function (id) {\n              var space = _space.default.create({\n                id: id,\n                name: spaceData[id].name,\n                protocol: spaceData[id].protocol,\n                server: spaceData[id].server\n              });\n              _this.connectAndAddSpace(space);\n              _this.instantiateChannels(space, spaceData[id].channels);\n            });\n            resolve();\n          }\n        }, function (e) {\n          _this.log('error', 'couldn\\'d load spaces from RS', e);\n          reject();\n        });\n      });\n    },\n\n\n    /**\n     * Invokes the connect function on the appropriate transport service\n     * @public\n     */\n    connectServer: function connectServer(space) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).connect(space);\n    },\n    connectAndAddSpace: function connectAndAddSpace(space) {\n      this.connectServer(space);\n      this.get('spaces').pushObject(space);\n    },\n\n\n    /**\n     * Invokes the channel-join function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\"\n     * @public\n     */\n    joinChannel: function joinChannel(space, channel, type) {\n      this.getServiceForSockethubPlatform(space.get('protocol')).join(space, channel, type);\n    },\n\n    /**\n     * Invokes the send-message function on the appropriate transport service\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} content\n     * @public\n     */\n    transferMessage: function transferMessage(space, channel, content) {\n      var target = {\n        '@id': channel.get('sockethubChannelId'),\n        '@type': channel.get('isUserChannel') ? 'person' : 'room',\n        displayName: channel.get('name')\n      };\n      this.getServiceForSockethubPlatform(space.get('protocol')).transferMessage(space, target, content);\n    },\n\n\n    /**\n     * Invokes the send-action-message function on the appropriate transport service\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').transferMeMessage(space, target, content);\n          break;\n      }\n    },\n\n\n    leaveChannel: function leaveChannel(space, channel) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').leave(space, channel);\n          break;\n      }\n    },\n\n    changeTopic: function changeTopic(space, channel, topic) {\n      switch (space.get('protocol')) {\n        case 'IRC':\n          this.get('irc').changeTopic(space, channel, topic);\n          break;\n      }\n    },\n\n    updateChannelUserList: function updateChannelUserList(message) {\n      var channel = this.getChannelById(message.actor['@id']);\n      if (channel) {\n        channel.set('connected', true);\n        if (Array.isArray(message.object.members)) {\n          channel.set('userList', message.object.members.sort());\n        }\n      }\n    },\n    addUserToChannelUserList: function addUserToChannelUserList(message) {\n      var channel = this.getChannelById(message.target['@id']);\n      if (channel) {\n        channel.addUser(message.actor.displayName);\n      }\n    },\n    removeUserFromChannelUserList: function removeUserFromChannelUserList(message) {\n      // TODO handle user quit leaves (multiple channels)\n      // e.g. target is `{ @type: 'service', @id: 'irc://irc.freenode.net' }`\n      var channel = this.getChannelById(message.target['@id']);\n      if (channel) {\n        channel.removeUser(message.actor.displayName);\n      }\n    },\n    getChannelById: function getChannelById(channelId) {\n      // TODO handle multiple spaces with same hostname:\n      // This method should return an array of channels for all spaces with the\n      // same hostname\n\n      var hostname = channelId.match(/(?:irc:\\/\\/)?(?:.+@)?(.+?)(?:\\/|$)/)[1];\n\n      var space = this.get('spaces').findBy('server.hostname', hostname);\n\n      if (isEmpty(space)) {\n        Ember.Logger.warn('Could not find space by hostname', hostname);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (isEmpty(channel)) {\n        Ember.Logger.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * @param {String} personId\n     * @param {String} channelId\n     */\n    getChannel: function getChannel(personId, channelId) {\n      var space = this.get('spaces').findBy('sockethubPersonId', personId);\n      if (isEmpty(space)) {\n        Ember.Logger.warn('Could not find space by sockethubPersonId', personId);\n        return;\n      }\n\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (isEmpty(channel)) {\n        Ember.Logger.warn('Could not find channel by sockethubChannelId', channelId);\n        return;\n      }\n\n      return channel;\n    },\n    updateUsername: function updateUsername(message) {\n      if (_typeof(message.actor) === 'object') {\n        var actorId = message.actor['@id'];\n        var space = this.get('spaces').findBy('sockethubPersonId', actorId);\n        if (isPresent(space)) {\n          space.updateUsername(message.target.displayName);\n        }\n      }\n    },\n    updateChannelTopic: function updateChannelTopic(message) {\n      var hostname = void 0;\n      if (_typeof(message.target) === 'object') {\n        hostname = message.target['@id'].match(/irc:\\/\\/(.+)\\//)[1];\n      } else if (typeof message.actor === 'string') {\n        hostname = message.actor.match(/irc:\\/\\/.+@(.+)/)[1];\n      }\n\n      var space = this.get('spaces').findBy('server.hostname', hostname);\n\n      if (!isEmpty(space)) {\n        var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n\n        if (isEmpty(channel)) {\n          Ember.Logger.warn('No channel for update topic message found. Creating it.', message);\n          channel = this.createChannel(space, message.target['displayName']);\n        }\n\n        var currentTopic = channel.get('topic');\n        var newTopic = message.object.topic;\n\n        channel.set('topic', newTopic);\n\n        if (isPresent(currentTopic) && newTopic !== currentTopic && !channel.get('visible')) {\n          Notification.requestPermission(function () {\n            new Notification(channel.name, {\n              body: 'New Topic: ' + newTopic\n            });\n          });\n        }\n\n        // let notification = Message.create({\n        //   type: 'notification-topic-change',\n        //   date: new Date(message.published),\n        //   nickname: message.actor.displayName,\n        //   content: message.object.topic\n        // });\n\n        // channel.get('messages').pushObject(notification);\n      }\n    },\n\n\n    instantiateChannels: function instantiateChannels(space, channels) {\n      var _this2 = this;\n\n      channels.forEach(function (channelName) {\n        _this2.createChannel(space, channelName);\n      });\n    },\n\n    createChannel: function createChannel(space, channelName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _channel.default.create({\n        space: space,\n        name: channelName,\n        sockethubChannelId: platform.generateChannelId(space, channelName)\n      });\n\n      this.joinChannel(space, channel, \"room\");\n      space.get('channels').pushObject(channel);\n\n      // TODO Do we need this on startup? Could overwrite updates from remote.\n      this.get('storage').saveSpace(space);\n\n      if (channel.get('isLogged')) {\n        this.loadLastMessages(space, channel, _moment.default.utc(), 2).catch(function () {});\n      }\n\n      return channel;\n    },\n\n    loadLastMessages: function loadLastMessages(space, channel, date) {\n      var _this3 = this;\n\n      var maximumDays = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 14;\n\n      var searchUntilDate = void 0;\n      if (channel.get('searchedPreviousLogsUntilDate')) {\n        searchUntilDate = (0, _moment.default)(channel.get('searchedPreviousLogsUntilDate')).subtract(maximumDays, 'days');\n      } else {\n        searchUntilDate = _moment.default.utc().subtract(maximumDays, 'days');\n      }\n\n      if (date.isBefore(searchUntilDate, 'day')) {\n        channel.set('searchedPreviousLogsUntilDate', date);\n        return;\n      }\n\n      return this.loadArchiveMessages(space, channel, date).catch(function () {\n        // didn't find any archive for this day, restart searching for the previous day\n        return _this3.loadLastMessages(space, channel, date.subtract(1, 'day'));\n      });\n    },\n    loadArchiveMessages: function loadArchiveMessages(space, channel, date) {\n      var _this4 = this;\n\n      var logsUrl = _environment.default.publicLogsUrl + '/' + space.get('name').toLowerCase() + '/channels/' + channel.get('slug') + '/';\n      logsUrl += date.format('YYYY/MM/DD');\n\n      return this.get('ajax').request(logsUrl, {\n        type: 'GET',\n        dataType: 'json'\n      }).then(function (archive) {\n        get(archive, 'today.messages').forEach(function (message) {\n          _this4.log('chat_message', message);\n\n          var channelMessage = _message.default.create({\n            type: 'message-chat',\n            date: new Date(message.timestamp),\n            nickname: message.from,\n            content: message.text\n          });\n\n          channel.addMessage(channelMessage);\n        });\n        var previous = get(archive, 'today.previous');\n        channel.set('searchedPreviousLogsUntilDate', _moment.default.utc(previous.replace(/\\//g, '-')));\n      }).catch(function (error) {\n        _this4.log('ajax-error', 'couldn\\'t load archive document', error);\n        throw error;\n      });\n    },\n\n\n    createUserChannel: function createUserChannel(space, userName) {\n      var platform = this.getServiceForSockethubPlatform(space.get('protocol'));\n\n      var channel = _user_channel.default.create({\n        space: space,\n        name: userName,\n        sockethubChannelId: platform.generateChannelId(space, userName)\n      });\n\n      // TODO check if this is necesarry for XMPP,\n      // because for IRC it is not\n      this.joinChannel(space, channel, \"person\");\n      space.get('channels').pushObject(channel);\n\n      return channel;\n    },\n\n    removeChannel: function removeChannel(space, channelName) {\n      var channel = space.get('channels').findBy('name', channelName);\n      this.leaveChannel(space, channel);\n\n      space.get('channels').removeObject(channel);\n\n      this.get('storage').saveSpace(space);\n\n      return channel;\n    },\n\n    getServiceForSockethubPlatform: function getServiceForSockethubPlatform(protocol) {\n      return this.get(protocol.dasherize());\n    },\n\n\n    /*\n     * @private\n     *\n     * Handles completed Sockethub actions:\n     *\n     *     - Successfully joined a channel\n     */\n    handleSockethubCompleted: function handleSockethubCompleted(message) {\n      this.log(message.context + '_completed', message);\n\n      switch (message['@type']) {\n        case 'join':\n          var space = this.get('spaces').findBy('sockethubPersonId', message.actor['@id']);\n\n          // try to find space by older sockethubPersonId\n          if (isEmpty(space)) {\n            space = this.get('spaces').find(function (space) {\n              return space.get('previousSockethubPersonIds').includes(message.actor['@id']);\n            });\n          }\n\n          if (!isEmpty(space)) {\n            this.get(message.context).handleJoinCompleted(space, message);\n          } else {\n            Logger.warn('Could not find space for join message', message);\n          }\n          break;\n      }\n    },\n\n\n    /**\n     * Handles incoming Sockethub messages:\n     * - Attendance list for channel\n     * - Another user joined or left a channel\n     * - Received a channel message (normal or me/action)\n     * - A channel topic was updated\n     * - The username/address changed\n     * @private\n     */\n    handleSockethubMessage: function handleSockethubMessage(message) {\n      this.log(message.context + '_message', 'SH message', message);\n\n      switch (message['@type']) {\n        case 'observe':\n          if (message.object['@type'] === 'attendance') {\n            this.updateChannelUserList(message);\n          }\n          break;\n        case 'join':\n          this.handleChannelJoin(message);\n          break;\n        case 'leave':\n          this.removeUserFromChannelUserList(message);\n          break;\n        case 'send':\n          switch (message.object['@type']) {\n            case 'message':\n            case 'me':\n              this.getServiceForSockethubPlatform(message.context).addMessageToChannel(message);\n              break;\n          }\n          break;\n        case 'update':\n          switch (message.object['@type']) {\n            case 'topic':\n              this.updateChannelTopic(message);\n              break;\n            case 'address':\n              this.updateUsername(message);\n              break;\n            case 'presence':\n              this.get('xmpp').handlePresenceUpdate(message);\n              break;\n            case 'error':\n              Logger.warn('Got error update message', message.actor['@id'], message.object.content);\n              break;\n          }\n          break;\n      }\n    },\n\n\n    /**\n     * Handles the various checks assosciated with channel joins\n     * @private\n     */\n    handleChannelJoin: function handleChannelJoin(message) {\n      if (message.object['@type'] && message.object['@type'] === 'error') {\n        // failed to join a channel\n        var channel = this.getChannel(message.target['@id'], message.actor['@id']);\n        if (isPresent(channel)) {\n          channel.set('connected', false);\n        } else {\n          Logger.warn('Could not find channel for error message', message);\n        }\n      } else {\n        this.addUserToChannelUserList(message);\n      }\n    },\n\n\n    /**\n     * Handles incoming Sockethub errors/failures\n     * @private\n     */\n    handleSockethubFailure: function handleSockethubFailure(message) {\n      this.log('sh_failure', message);\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _get;\n\n      (_get = this.get('logger')).log.apply(_get, arguments);\n    }\n  });\n});","define('hyperchannel/services/ember-elsewhere', ['exports', 'ember-elsewhere/services/ember-elsewhere'], function (exports, _emberElsewhere) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _emberElsewhere.default;\n    }\n  });\n});","define(\"hyperchannel/services/liquid-fire-transitions\", [\"exports\", \"liquid-fire/transition-map\"], function (exports, _transitionMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _transitionMap.default;\n});","define('hyperchannel/services/logger', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var Service = Ember.Service;\n  exports.default = Service.extend({\n    enabled: true,\n\n    allowedTypes: ['connection', 'error', 'join', 'leave', 'message', 'irc_message', 'xmpp_message', 'send', 'xmpp_completed', 'irc_completed', 'sh_completed', 'sh_failure', 'irc', 'xmpp', 'ajax-error', 'chat_message'],\n\n    activeTypes: ['connection', 'error', 'join', 'leave', 'send', 'sh_completed', 'xmpp_completed', 'irc_completed', 'sh_failure', 'irc', 'xmpp', 'message', 'irc_message', 'xmpp_message'],\n\n    log: function log(type) {\n      if (!this.get('allowedTypes').includes(type)) {\n        throw new Error('You specified a unknown type: \"' + type + '\".');\n      }\n\n      if (this.get('activeTypes').includes(type) && this.get('enabled')) {\n        var params = Array.prototype.slice.call(arguments);\n        params[0] = '[' + params[0] + ']';\n        Ember.Logger.debug.apply(null, params);\n      }\n    },\n    add: function add(type) {\n      this.get('activeTypes').addObject(type);\n    },\n    remove: function remove(type) {\n      this.get('activeTypes').removeObject(type);\n    },\n    disable: function disable() {\n      this.set('enabled', false);\n    },\n    enable: function enable() {\n      this.set('enabled', true);\n    }\n  });\n});","define('hyperchannel/services/moment', ['exports', 'hyperchannel/config/environment', 'ember-moment/services/moment'], function (exports, _environment, _moment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _moment.default.extend({\n    defaultFormat: Ember.get(_environment.default, 'moment.outputFormat')\n  });\n});","define('hyperchannel/services/remotestorage', ['exports', 'hyperchannel/models/space', 'npm:remotestoragejs', 'npm:remotestorage-module-kosmos'], function (exports, _space, _npmRemotestoragejs, _npmRemotestorageModuleKosmos) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Service.extend({\n\n    rsInstance: null,\n\n    rs: function () {\n      if (this.get('rsInstance')) {\n        return this.get('rsInstance');\n      }\n\n      var rs = new _npmRemotestoragejs.default({ modules: [_npmRemotestorageModuleKosmos.default.default] });\n      rs.access.claim('kosmos', 'rw');\n      rs.caching.enable('/kosmos/');\n\n      this.set('rsInstance', rs);\n      return rs;\n    }.property('rsInstance'),\n\n    addDefaultSpace: function addDefaultSpace() {\n      var nickname = window.prompt(\"Choose a nickname\");\n\n      var params = {\n        id: 'freenode',\n        name: 'Freenode',\n        protocol: 'IRC',\n        server: {\n          hostname: 'irc.freenode.net',\n          secure: true,\n          port: 7000,\n          nickname: nickname\n        },\n        channels: ['#hackerbeach', '#kosmos', '#kosmos-dev', '#kosmos-random', '#sockethub']\n      };\n\n      return this.get('rs').kosmos.spaces.store(params).then(function () {\n        Ember.Logger.debug('[remotestorage]', 'created/stored default space');\n\n        var channels = params.channels;\n        delete params.channels;\n\n        return { space: _space.default.create(params), channels: channels };\n      });\n    },\n    saveSpace: function saveSpace(space) {\n      return this.get('rs').kosmos.spaces.store(space.serialize()).then(function () {\n        return Ember.Logger.debug('[remotestorage]', 'saved space ' + space.get('name') + ' in RS');\n      });\n    },\n    removeSpace: function removeSpace(space) {\n      // TODO this is buggy in the current rs.js beta branch\n      return this.get('rs').kosmos.spaces.remove(space.get('id')).then(function () {\n        return Ember.Logger.debug('[remotestorage]', 'removed space ' + space.get('name') + ' from RS');\n      });\n    }\n  });\n});","define('hyperchannel/services/sockethub-irc', ['exports', 'hyperchannel/utils/channel-message-from-sockethub-object'], function (exports, _channelMessageFromSockethubObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var service = Ember.inject.service,\n      isEmpty = Ember.isEmpty,\n      Logger = Ember.Logger;\n\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param {Space} space - space model the activity belongs to\n   * @param {Object} details - the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'irc',\n      actor: space.get('sockethubPersonId')\n    };\n\n    return Ember.$.extend({}, baseObject, details);\n  }\n\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n\n  /**\n   * This service provides helpers for SocketHub IRC communications\n   * @module hyperchannel/services/sockethub-irc\n   */\n  exports.default = Ember.Service.extend({\n\n    logger: service(),\n    coms: service(),\n\n    /**\n     * - Creates an ActivityStreams person object for\n     *   future use\n     * - Emits credentials for future IRC server messages,\n     *   like e.g. `join`\n     * @public\n     */\n    connect: function connect(space) {\n      var actorObject = {\n        '@id': space.get('sockethubPersonId'),\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      };\n      Logger.debug('actor object', actorObject);\n\n      this.sockethub.ActivityStreams.Object.create(actorObject);\n\n      var credentials = buildActivityObject(space, {\n        object: {\n          '@type': 'credentials',\n          nick: space.get('server.nickname'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          secure: space.get('server.secure')\n        }\n      });\n\n      this.log('irc', 'connecting to IRC network', credentials);\n      this.sockethub.socket.emit('credentials', credentials);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channel = space.get('channels').findBy('sockethubChannelId', message.target['@id']);\n      if (channel) {\n        this.observeChannel(space, channel);\n      }\n    },\n\n\n    /**\n     * Join a channel/room\n     * @public\n     */\n    join: function join(space, channel, type) {\n      switch (type) {\n        case 'room':\n          this.sockethub.ActivityStreams.Object.create({\n            '@type': type,\n            '@id': channel.get('sockethubChannelId'),\n            displayName: channel.get('name')\n          });\n\n          var joinMsg = buildActivityObject(space, {\n            '@type': 'join',\n            target: channel.get('sockethubChannelId'),\n            object: {}\n          });\n\n          this.log('irc', 'joining channel', joinMsg);\n          this.sockethub.socket.emit('message', joinMsg);\n          break;\n        case 'person':\n          channel.set('connected', true);\n          break;\n      }\n    },\n\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n\n    /**\n     * Send an action chat message to a channel\n     * @public\n     */\n    transferMeMessage: function transferMeMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content, 'me');\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      var hostname = message.actor['@id'].match(/irc:\\/\\/.+@(.+)/)[1];\n      var space = this.get('coms.spaces').findBy('server.hostname', hostname);\n\n      if (isEmpty(space)) {\n        Logger.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message);\n\n      // TODO should check for message and update sent status if exists\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n\n    /**\n     * Leave a channel\n     * @public\n     */\n    leave: function leave(space, channel) {\n      if (!channel.get('isUserChannel')) {\n        // TODO Do we really need to create this room for leaving? It should\n        // already have been created when joining.\n        this.sockethub.ActivityStreams.Object.create({\n          '@type': \"room\",\n          '@id': channel.get('sockethubChannelId'),\n          displayName: channel.get('name')\n        });\n\n        var leaveMsg = buildActivityObject(space, {\n          '@type': 'leave',\n          target: channel.get('sockethubChannelId'),\n          object: {}\n        });\n\n        this.log('leave', 'leaving channel', leaveMsg);\n        this.sockethub.socket.emit('message', leaveMsg);\n      }\n    },\n\n\n    /**\n     * Send a channel topic change\n     * @public\n     */\n    changeTopic: function changeTopic(space, channel, topic) {\n      var topicMsg = buildActivityObject(space, {\n        '@type': 'update',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'topic',\n          topic: topic\n        }\n      });\n\n      this.sockethub.socket.emit('message', topicMsg);\n    },\n\n\n    /**\n     * Ask for a channel's attendance list (users currently joined)\n     * @public\n     */\n    observeChannel: function observeChannel(space, channel) {\n      var observeMsg = buildActivityObject(space, {\n        '@type': 'observe',\n        target: channel.get('sockethubChannelId'),\n        object: {\n          '@type': 'attendance'\n        }\n      });\n\n      this.log('irc', 'asking for attendance list', observeMsg);\n      this.sockethub.socket.emit('message', observeMsg);\n    },\n\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return 'irc://' + space.get('server.hostname') + '/' + channelName;\n    },\n\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelName = void 0,\n          channel = void 0;\n\n      if (space.get('userNickname') === message.target.displayName) {\n        // direct message\n        targetChannelName = message.actor.displayName || message.actor['@id'];\n\n        channel = space.get('channels').findBy('name', targetChannelName);\n        if (!channel) {\n          channel = this.get('coms').createUserChannel(space, targetChannelName);\n        }\n      } else {\n        // channel message\n        targetChannelName = message.target.displayName;\n\n        channel = space.get('channels').findBy('name', targetChannelName);\n        if (!channel) {\n          channel = this.get('coms').createChannel(space, targetChannelName);\n        }\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @protected\n     */\n    log: function log() {\n      var _get;\n\n      (_get = this.get('logger')).log.apply(_get, arguments);\n    }\n  });\n});","define('hyperchannel/services/sockethub-xmpp', ['exports', 'hyperchannel/utils/channel-message-from-sockethub-object'], function (exports, _channelMessageFromSockethubObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var service = Ember.inject.service,\n      isEmpty = Ember.isEmpty,\n      Logger = Ember.Logger;\n\n\n  /**\n   * Build an activity object for sending to Sockethub\n   *\n   * @param space {Space} space model the activity belongs to\n   * @param details {Object} the activity details\n   * @returns {Object} the activity object\n   * @private\n   */\n  function buildActivityObject(space, details) {\n    var baseObject = {\n      context: 'xmpp',\n      actor: space.get('sockethubPersonId')\n    };\n\n    return Ember.$.extend({}, baseObject, details);\n  }\n\n  /**\n   * Build a message object\n   *\n   * @param space {Space} space model instance\n   * @param target {String} where to send the message to (channelId)\n   * @param content {String} the message itself\n   * @param type {String} can be either 'message' or 'me'\n   * @returns {Object} the activity object\n   */\n  function buildMessageObject(space, target, content) {\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n\n    return buildActivityObject(space, {\n      '@type': 'send',\n      target: target,\n      object: {\n        '@type': type,\n        content: content\n      }\n    });\n  }\n\n  /**\n   * This service provides helpers for SocketHub XMPP communications\n   * @module hyperchannel/services/sockethub-xmpp\n   */\n  exports.default = Ember.Service.extend({\n\n    logger: service(),\n    coms: service(),\n\n    /**\n     * @public\n     */\n    connect: function connect(space) {\n      var actor = space.get('sockethubPersonId');\n\n      this.sockethub.ActivityStreams.Object.create({\n        '@id': actor,\n        '@type': \"person\",\n        displayName: space.get('server.nickname')\n      });\n\n      var credentialsJob = {\n        actor: actor,\n        context: 'xmpp',\n        object: {\n          '@type': 'credentials',\n          username: space.get('server.username'),\n          password: space.get('server.password'),\n          server: space.get('server.hostname'),\n          port: parseInt(space.get('server.port'), 10),\n          resource: 'hyperchannel'\n        }\n      };\n\n      var connectJob = {\n        '@type': 'connect',\n        context: 'xmpp',\n        actor: actor\n      };\n\n      this.log('xmpp', 'connecting to XMPP server...');\n      this.sockethub.socket.emit('credentials', credentialsJob);\n      this.sockethub.socket.emit('message', connectJob);\n    },\n    handleJoinCompleted: function handleJoinCompleted(space, message) {\n      var channelId = message.target['@id'].split('/')[0];\n      var channel = space.get('channels').findBy('sockethubChannelId', channelId);\n      if (!isEmpty(channel)) {\n        channel.set('connected', true);\n      } else {\n        Logger.warn('Could not find channel for join message', message);\n      }\n    },\n\n\n    /**\n     * Join a channel/room\n     *\n     * @param {Space} space\n     * @param {Channel} channel\n     * @param {String} type - Type of channel. Can be \"room\" or \"person\".\n     * @public\n     */\n    join: function join(space, channel, type) {\n      this.sockethub.ActivityStreams.Object.create({\n        '@type': type,\n        '@id': channel.get('sockethubChannelId'),\n        displayName: channel.get('name')\n      });\n\n      var joinMsg = buildActivityObject(space, {\n        '@type': 'join',\n        actor: {\n          '@type': 'person',\n          '@id': space.get('sockethubPersonId'),\n          displayName: space.get('server.nickname')\n        },\n        target: {\n          '@id': channel.get('sockethubChannelId'),\n          '@type': type\n        }\n      });\n\n      this.log('xmpp', 'joining channel', joinMsg);\n      this.sockethub.socket.emit('message', joinMsg);\n    },\n\n\n    /**\n     * Send a chat message to a channel\n     * @public\n     */\n    transferMessage: function transferMessage(space, target, content) {\n      var message = buildMessageObject(space, target, content);\n\n      this.log('send', 'sending message job', message);\n      this.sockethub.socket.emit('message', message);\n    },\n    handlePresenceUpdate: function handlePresenceUpdate(message) {\n      if (message.target['@type'] === 'room') {\n        var targetChannelId = message.target['@id'];\n        var space = this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n        var channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n\n        if (channel) {\n          if (message.object.presence === 'offline') {\n            channel.removeUser(message.actor.displayName);\n          } else {\n            channel.addUser(message.actor.displayName);\n          }\n        }\n      } else {\n        Logger.debug('Presence update:', message.actor['@id'], message.object.presence, message.object.status);\n      }\n    },\n\n\n    /**\n     * Add an incoming message to a channel\n     * @param {Object} messsage\n     * @public\n     */\n    addMessageToChannel: function addMessageToChannel(message) {\n      if (isEmpty(message.object.content)) {\n        return;\n      }\n\n      var space = this.getSpaceForMessage(message);\n\n      if (isEmpty(space)) {\n        Logger.warn('Could not find space for message', message);\n        return;\n      }\n\n      var channel = this.getChannelForMessage(space, message);\n      var channelMessage = (0, _channelMessageFromSockethubObject.default)(message);\n\n      // TODO should check for message and update sent status if exists\n      if (channelMessage.get('nickname') !== space.get('userNickname')) {\n        channel.addMessage(channelMessage);\n      }\n    },\n\n\n    /**\n     * Generate a Sockethub Channel ID.\n     *\n     * @param {Space} space\n     * @param {String} channelName - name of the channel\n     * @returns {String} Sockethub channel ID\n     * @public\n     */\n    generateChannelId: function generateChannelId(space, channelName) {\n      return channelName;\n    },\n\n\n    /**\n     * Get the space for a given message.\n     *\n     * @param {Object} message\n     * @returns {Space} space\n     * @public\n     */\n    getSpaceForMessage: function getSpaceForMessage(message) {\n      var targetChannelId = message.target['@id'];\n\n      if (message.target['@type'] === 'room') {\n        return this.get('coms.spaces').find(function (space) {\n          return space.get('sockethubChannelIds').includes(targetChannelId);\n        });\n      } else {\n        return this.get('coms.spaces').findBy('sockethubPersonId', targetChannelId);\n      }\n    },\n\n\n    /**\n     * Get the channel for the given space and message.\n     *\n     * @param {Space} space\n     * @param {Object} message\n     * @returns {Channel} channel\n     * @public\n     */\n    getChannelForMessage: function getChannelForMessage(space, message) {\n      var targetChannelId = message.target['@id'];\n      var channel = void 0;\n\n      if (message.target['@type'] === 'room') {\n        channel = space.get('channels').findBy('sockethubChannelId', targetChannelId);\n        if (!channel) {\n          channel = this.get('coms').createChannel(space, targetChannelId);\n        }\n      } else {\n        channel = space.get('channels').findBy('sockethubChannelId', message.actor['@id']);\n        if (!channel) {\n          channel = this.get('coms').createUserChannel(space, message.actor['@id']);\n        }\n      }\n\n      return channel;\n    },\n\n\n    /**\n     * Utility function for easier logging\n     * @private\n     */\n    log: function log() {\n      var _get;\n\n      (_get = this.get('logger')).log.apply(_get, arguments);\n    }\n  });\n});","define('hyperchannel/storages/user-settings', ['exports', 'ember-local-storage/local/object'], function (exports, _object) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Storage = _object.default.extend();\n\n  // Uncomment if you would like to set initialState\n  Storage.reopenClass({\n    initialState: function initialState() {\n      return {\n        nickname: null,\n        currentSpace: 'freenode',\n        currentChannel: 'kosmos'\n      };\n    }\n  });\n\n  exports.default = Storage;\n});","define(\"hyperchannel/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ha6cu2aS\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"app-container\\\",null,[[\\\"showGlobalMenu\\\",\\\"showChannelMenu\\\"],[[19,0,[\\\"showGlobalMenu\\\"]],[19,0,[\\\"showChannelMenu\\\"]]]],{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"div\\\"],[9,\\\"id\\\",\\\"global\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"header\\\"],[9,\\\"id\\\",\\\"sitename\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"h1\\\"],[7],[0,\\\"Kosmos\\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"main\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"nav\\\"],[9,\\\"id\\\",\\\"channels\\\"],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"channel-nav\\\",null,[[\\\"spaces\\\",\\\"joinChannel\\\"],[[19,0,[\\\"spaces\\\"]],[25,\\\"route-action\\\",[\\\"openNewChannel\\\"],null]]]],false],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[1,[18,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[1,[18,\\\"modal-target\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/application.hbs\" } });\n});","define(\"hyperchannel/templates/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"mEBCHNce\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"p\\\"],[7],[0,\\\"[index.hbs]\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/index.hbs\" } });\n});","define(\"hyperchannel/templates/settings\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"TsrB32NL\", \"block\": \"{\\\"symbols\\\":[\\\"spacePreset\\\",\\\"space\\\"],\\\"statements\\\":[[6,\\\"section\\\"],[9,\\\"id\\\",\\\"settings\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"h2\\\"],[7],[0,\\\"Settings\\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"content\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"h3\\\"],[7],[0,\\\"Spaces\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[19,0,[\\\"model\\\",\\\"spaces\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"h3\\\"],[7],[1,[19,2,[\\\"name\\\"]],false],[8],[0,\\\"\\\\n      \\\"],[6,\\\"button\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"removeSpace\\\",[19,2,[]]]],[7],[0,\\\"delete\\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"hr\\\"],[7],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n    \\\"],[6,\\\"h3\\\"],[7],[0,\\\"Presets\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[19,0,[\\\"model\\\",\\\"spacePresets\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"h3\\\"],[7],[1,[19,1,[\\\"name\\\"]],false],[8],[0,\\\"\\\\n      \\\"],[6,\\\"button\\\"],[9,\\\"style\\\",\\\"touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;touch-action: manipulation; -ms-touch-action: manipulation; cursor: pointer;\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"addSpaceFromPreset\\\",[19,1,[]]]],[7],[0,\\\"add\\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"hr\\\"],[7],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n    \\\"],[6,\\\"h3\\\"],[7],[0,\\\"Add new space\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"form\\\"],[9,\\\"name\\\",\\\"add-space\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"addSpace\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[7],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"newSpace\\\",\\\"name\\\"]],\\\"required\\\",\\\"Freenode\\\"]]],false],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"newSpace\\\",\\\"server\\\",\\\"hostname\\\"]],\\\"required\\\",\\\"irc.servername.org\\\"]]],false],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"newSpace\\\",\\\"server\\\",\\\"port\\\"]],\\\"required\\\",\\\"6667\\\"]]],false],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"input\\\",null,[[\\\"type\\\",\\\"checked\\\",\\\"id\\\"],[\\\"checkbox\\\",[19,0,[\\\"newSpace\\\",\\\"server\\\",\\\"secure\\\"]],\\\"tls-enabled\\\"]]],false],[0,\\\"\\\\n        \\\"],[6,\\\"label\\\"],[9,\\\"for\\\",\\\"tls-enabled\\\"],[7],[0,\\\"Secure (TLS)\\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[19,0,[\\\"newSpace\\\",\\\"server\\\",\\\"username\\\"]],\\\"username\\\"]]],false],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"placeholder\\\"],[[19,0,[\\\"newSpace\\\",\\\"server\\\",\\\"password\\\"]],\\\"password\\\"]]],false],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n        \\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"required\\\",\\\"placeholder\\\"],[[19,0,[\\\"newSpace\\\",\\\"server\\\",\\\"nickname\\\"]],\\\"required\\\",\\\"nickname\\\"]]],false],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"input\\\"],[9,\\\"type\\\",\\\"submit\\\"],[9,\\\"value\\\",\\\"Save\\\"],[7],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[19,0,[\\\"showSpaceSettingModal\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[25,\\\"to-elsewhere\\\",null,[[\\\"named\\\",\\\"send\\\"],[\\\"modal\\\",[25,\\\"hash\\\",null,[[\\\"body\\\",\\\"onOutsideClick\\\"],[[25,\\\"component\\\",[\\\"space-setting-modal\\\"],[[\\\"settings\\\",\\\"onSave\\\",\\\"onCancel\\\"],[[19,0,[\\\"selectedSpacePreset\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"saveSpace\\\"],null],[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[19,0,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]],[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[19,0,[\\\"selectedSpacePreset\\\"]]],null],null],null]]]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/settings.hbs\" } });\n});","define(\"hyperchannel/templates/space/channel\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"pLDIIWbO\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\",\\\"menu\\\"],[[19,0,[\\\"model\\\"]],[19,0,[\\\"newMessage\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"sendMessage\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"executeCommand\\\"],null],[25,\\\"route-action\\\",[\\\"menu\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/space/channel.hbs\" } });\n});","define(\"hyperchannel/templates/space/user_channel\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"62v+YcAP\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"channel-container\\\",null,[[\\\"channel\\\",\\\"newMessage\\\",\\\"onMessage\\\",\\\"onCommand\\\"],[[19,0,[\\\"model\\\"]],[19,0,[\\\"newMessage\\\"]],[25,\\\"action\\\",[[19,0,[]],\\\"sendMessage\\\"],null],[25,\\\"action\\\",[[19,0,[]],\\\"executeCommand\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"hyperchannel/templates/space/user_channel.hbs\" } });\n});","define('hyperchannel/transitions/cross-fade', ['exports', 'liquid-fire/transitions/cross-fade'], function (exports, _crossFade) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _crossFade.default;\n    }\n  });\n});","define('hyperchannel/transitions/default', ['exports', 'liquid-fire/transitions/default'], function (exports, _default) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _default.default;\n    }\n  });\n});","define('hyperchannel/transitions/explode', ['exports', 'liquid-fire/transitions/explode'], function (exports, _explode) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _explode.default;\n    }\n  });\n});","define('hyperchannel/transitions/fade', ['exports', 'liquid-fire/transitions/fade'], function (exports, _fade) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _fade.default;\n    }\n  });\n});","define('hyperchannel/transitions/flex-grow', ['exports', 'liquid-fire/transitions/flex-grow'], function (exports, _flexGrow) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _flexGrow.default;\n    }\n  });\n});","define('hyperchannel/transitions/fly-to', ['exports', 'liquid-fire/transitions/fly-to'], function (exports, _flyTo) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _flyTo.default;\n    }\n  });\n});","define('hyperchannel/transitions/move-over', ['exports', 'liquid-fire/transitions/move-over'], function (exports, _moveOver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _moveOver.default;\n    }\n  });\n});","define('hyperchannel/transitions/scale', ['exports', 'liquid-fire/transitions/scale'], function (exports, _scale) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _scale.default;\n    }\n  });\n});","define('hyperchannel/transitions/scroll-then', ['exports', 'liquid-fire/transitions/scroll-then'], function (exports, _scrollThen) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _scrollThen.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-down', ['exports', 'liquid-fire/transitions/to-down'], function (exports, _toDown) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toDown.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-left', ['exports', 'liquid-fire/transitions/to-left'], function (exports, _toLeft) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toLeft.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-right', ['exports', 'liquid-fire/transitions/to-right'], function (exports, _toRight) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toRight.default;\n    }\n  });\n});","define('hyperchannel/transitions/to-up', ['exports', 'liquid-fire/transitions/to-up'], function (exports, _toUp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toUp.default;\n    }\n  });\n});","define('hyperchannel/transitions/wait', ['exports', 'liquid-fire/transitions/wait'], function (exports, _wait) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _wait.default;\n    }\n  });\n});","define('hyperchannel/utils/channel-message-from-sockethub-object', ['exports', 'hyperchannel/models/message'], function (exports, _message) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = channelMessageFromSockethubObject;\n  function channelMessageFromSockethubObject(message) {\n    var channelMessage = _message.default.create({\n      type: message.object['@type'] === 'me' ? 'message-chat-me' : 'message-chat',\n      date: new Date(message.published),\n      nickname: message.actor.displayName || message.actor['@id'],\n      content: message.object.content\n    });\n\n    return channelMessage;\n  }\n});","define('hyperchannel/config/environment', ['ember'], function(Ember) {\n  var prefix = 'hyperchannel';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"hyperchannel/app\")[\"default\"].create({\"name\":\"hyperchannel\",\"version\":\"0.2.0+16e7b6e0\"});\n}\n"]}