{"version":3,"sources":["service-worker-orig.js"],"names":["_postDeleteCacheHook","cacheName","brocswPostDeleteCacheHook","Promise","resolve","logDebug","toolbox","options","debug","arguments","length","consoleArgs","i","push","console","log","swEnvironment","importScripts","CACHE_PREFIX","CACHE_VERSION","cache","name","urlsToPrefetch","forEach","url","router","any","cacheFirst","precache","networkFirst","self","addEventListener","event","skipWaiting","waitUntil","caches","keys","then","cacheNames","all","filter","indexOf","map","delete","clients","claim"],"mappings":"AAyDA,QAASA,sBAAqBC,GAC5B,MAAyC,kBAA9BC,2BACFA,0BAA0BD,GAI1BE,QAAQC,UAInB,QAASC,YACP,GAAIC,QAAQC,QAAQC,MAClB,GAAIC,UAAUC,OAAS,EAAG,CAExB,IAAK,GADDC,MACKC,EAAE,EAAEA,EAAEH,UAAUC,OAAOE,IAC9BD,EAAYE,KAAKJ,UAAUG,GAE7BE,SAAQC,IAAIN,UAAU,GAAIE,OAE1BG,SAAQC,IAAIN,UAAU,IA5E5B,GAAIO,iBACJC,eAAc,gBACd,IAAIC,cAAe,WACfC,cAAgBD,aAAa,eACjCZ,SAAQC,QAAQa,MAAMC,KAAOF,cAC7Bb,QAAQC,QAAQC,OAAQ,CACxB,IAAIc,iBACA,IACA,0BACA,yBACA,0BACA,oBACA,mBACA,oBACA,qBACA,qBACA,qBACA,sBACA,qBACA,oBACA,oBACA,aACA,aAEJA,gBAAeC,QAAQ,SAASC,GAC9BlB,QAAQmB,OAAOC,IAAIF,EAAKlB,QAAQqB,cAElCrB,QAAQsB,SAASN,gBACjBhB,QAAQmB,OAAOC,IAAI,wBAAwBpB,QAAQuB,cACnDvB,QAAQmB,OAAOC,IAAI,iBAAiBpB,QAAQuB,cAC5CvB,QAAQmB,OAAOC,IAAI,wBAAwBpB,QAAQuB,cACnDC,KAAKC,iBAAiB,UAAW,SAASC,GAC1ClB,QAAQC,IAAI,kDAAmDO,gBACzDQ,KAAKG,aAAeH,KAAKG,gBAG/BH,KAAKC,iBAAiB,WAAY,SAASC,GAEzC3B,SAAS,sDAAuDc,eAChEa,EAAME,UACJC,OAAOC,OAAOC,KAAK,SAASC,GAC1B,MAAOnC,SAAQoC,IACbD,EAAWE,OAAO,SAASvC,GACzB,MAAQA,GAAUwC,QAAQ,qBAAsB,GAA0C,IAApCxC,EAAUwC,QAAQvB,eAAuBjB,IAAckB,gBAC5GuB,IAAI,SAASzC,GAEd,MADAI,UAAS,8BAA+BJ,GACjCkC,OAAOQ,OAAO1C,GAAWoC,KAAK,WACnC,MAAOrC,sBAAqBC,UAIjCoC,KAAK,WACNP,KAAKc,QAAQC","file":"service-worker.js","sourcesContent":["var swEnvironment = {};\nimportScripts('sw-toolbox.js');\nvar CACHE_PREFIX = 'brocsw-v';\nvar CACHE_VERSION = CACHE_PREFIX+'1486177841781';\ntoolbox.options.cache.name = CACHE_VERSION;\ntoolbox.options.debug = true;\nvar urlsToPrefetch = [\n    '/',\n    \"assets/hyperchannel.css\",\n    \"assets/hyperchannel.js\",\n    \"assets/hyperchannel.map\",\n    \"assets/vendor.css\",\n    \"assets/vendor.js\",\n    \"assets/vendor.map\",\n    \"fonts/subspace.eot\",\n    \"fonts/subspace.svg\",\n    \"fonts/subspace.ttf\",\n    \"fonts/subspace.woff\",\n    \"img/avatar-ga.jpeg\",\n    \"img/avatar-sb.png\",\n    \"img/avatar-sk.png\",\n    \"img/bg.jpg\",\n    \"index.html\"\n];\nurlsToPrefetch.forEach(function(url) {\n  toolbox.router.any(url, toolbox.cacheFirst);\n});\ntoolbox.precache(urlsToPrefetch);\ntoolbox.router.any(/activity\\-streams\\.js/,toolbox.networkFirst);\ntoolbox.router.any(/socket\\.io\\.js/,toolbox.networkFirst);\ntoolbox.router.any(/sockethub\\-client\\.js/,toolbox.networkFirst);\nself.addEventListener('install', function(event) {\nconsole.log('Handling install event. Resources to pre-fetch:', urlsToPrefetch);\n  if (self.skipWaiting) { self.skipWaiting(); }\n});\n\nself.addEventListener('activate', function(event) {\n  // Delete all caches handled by broccoli-serviceworker.\n  logDebug('Deleting out of date caches, current cache version:', CACHE_VERSION);\n  event.waitUntil(\n    caches.keys().then(function(cacheNames) {\n      return Promise.all(\n        cacheNames.filter(function(cacheName) {\n          return (cacheName.indexOf('$$$inactive$$$') === -1 && cacheName.indexOf(CACHE_PREFIX) === 0 && cacheName !== CACHE_VERSION);\n        }).map(function(cacheName) {\n          logDebug('Deleting out of date cache:', cacheName);\n          return caches.delete(cacheName).then(function() {\n            return _postDeleteCacheHook(cacheName);\n          });\n        })\n      );\n    }).then(function() {\n      self.clients.claim();\n    })\n  );\n});\n\nfunction _postDeleteCacheHook(cacheName) {\n  if (typeof brocswPostDeleteCacheHook === 'function') {\n    return brocswPostDeleteCacheHook(cacheName);\n  }\n  else {\n    // Hook is not implemented in the app's serviceworker, that's fine.\n    return Promise.resolve();\n  }\n}\n\nfunction logDebug() {\n  if (toolbox.options.debug) {\n    if (arguments.length > 1) {\n      var consoleArgs = [];\n      for (var i=1;i<arguments.length;i++) {\n        consoleArgs.push(arguments[i]);\n      }\n      console.log(arguments[0], consoleArgs);\n    } else {\n      console.log(arguments[0]);\n    }\n  }\n}\n"]}